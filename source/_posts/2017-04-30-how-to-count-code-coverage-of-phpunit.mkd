---
title: PHPUnit代碼覆蓋率的統計方法
date: 2017-04-30 14:20:41
categories: 計算機
tags:
- php
- 測試
- 編程
---

關於PHPUnit代碼覆蓋率的很多概念，官方文檔中講的十分清楚，本文僅就部分語焉不詳的細節做些補充。

雖然phpunit.xml不是必需，但每次都輸入完整的命令很不方便，所以一般都要生成這個配置文件。用`phpunit --generate-configuration`生成的phpunit.xml默認包含`forceCoversAnnotation="true"`，它表示必須在測試方法頭部的注釋里顯式使用`@covers`標籤聲明統計範圍，例如：

```php
/**
 * @covers Ox3f\LaravelUtils\Log\Log::<public>
 * @covers Ox3f\LaravelUtils\Log\Log::parseCallStack
 * @covers Ox3f\LaravelUtils\Log\Log::__construct
 * @covers Ox3f\LaravelUtils\Log\Log::__callStatic
 */
public function testAll()
{
    // ...
}
```

否則在執行統計代碼覆蓋率的命令時，會報risk：

> There was 1 risky test:
>
> 1) Ox3f\LaravelUtils\Log\LogTest::testAll
> This test does not have a @covers annotation but is expected to have one

如果希望單元測試覆蓋全部代碼、且不用一一顯式聲明，可以將此選項的值改成
`false`。

之後即可使用明令`phpunit —coverage-html ./report`統計代碼覆蓋率，統計結果保存在report目錄中。

## 參考

* [官方文檔：第11章-代碼覆蓋率分析](https://phpunit.de/manual/current/zh_cn/code-coverage-analysis.html)

