<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Hugo - 标签 - 晴耕雨讀</title><link>http://0x3f.org/tags/hugo/</link><description>Hugo - 标签 - 晴耕雨讀</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 19 Jun 2020 17:41:52 +0800</lastBuildDate><atom:link href="http://0x3f.org/tags/hugo/" rel="self" type="application/rss+xml"/><item><title>从 Hexo 到 Hugo</title><link>http://0x3f.org/post/migrate-from-hexo-to-hugo/</link><pubDate>Fri, 19 Jun 2020 17:41:52 +0800</pubDate><author>作者</author><guid>http://0x3f.org/post/migrate-from-hexo-to-hugo/</guid><description><![CDATA[<p>一切源于我这个颜党的喜新厌旧。</p>
<p>总想找到一个极简而不失现代感的主题，在这个过程中，发现越来越多比较贴近我口味的主题都是适配 Hugo 的。趁最近有时间，就换了过来。</p>
<hr>
<h2 id="创建一个空站点">创建一个空站点</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># 安装 hugo</span>
brew install hugo

<span class="c1"># 创建空站点</span>
hugo new site Blog

<span class="c1"># 安装 LoveIt 主题</span>
<span class="nb">cd</span> Blog
git init
git submodule add https://github.com/dillonzq/LoveIt.git themes/LoveIt
cp -f themes/LoveIt/exampleSite/config.toml .

<span class="c1"># 配置 config.toml</span>

<span class="c1"># 在本机预览效果</span>
hugo server -D
</code></pre></td></tr></table>
</div>
</div><h2 id="写一篇新文章">写一篇新文章</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">hugo new posts/test.md
</code></pre></td></tr></table>
</div>
</div><p>Hugo 需要自己指定文章的相对路径和文件名，这一点不如 Hexo 自动化程度高。</p>
<h2 id="迁移文章">迁移文章</h2>
<blockquote>
<p>注意：以下命令和脚本仅适用于本博客，不加判断地使用可能会修改不需要变动的内容。</p>
</blockquote>
<h3 id="统一文章后缀">统一文章后缀</h3>
<p>历史原因，用过的文件后缀不止一种，这次把<code>.mkd</code>和<code>.markdown</code>统一成<code>.md</code>。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">rename -s .mkd .md -s .markdown .md *
</code></pre></td></tr></table>
</div>
</div><h3 id="删除不兼容的-front-matter">删除不兼容的 Front Matter</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">gsed -i <span class="s1">&#39;/^type:\s*post/d&#39;</span> *
</code></pre></td></tr></table>
</div>
</div><h3 id="修改不规范的-front-matter">修改不规范的 Front Matter</h3>
<p>我用单分类、多标签的方式管理文章，所以以前都是把分类名直接写在<code>categories:</code>后面了，Hugo 要求必须使用连接符前缀另起一行。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">perl -pi -e <span class="s1">&#39;s/(?&lt;=^categories:)/\n-/g&#39;</span> *
</code></pre></td></tr></table>
</div>
</div><p>也是因为历史的原因，有的文章没有日期时间，有的格式也不统一。Hugo 对日期时间的格式要求比较严格。这里把所有没有秒的时间后补全。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">perl -pi -e <span class="s1">&#39;s/(?&lt;=^date:\s\d{4}-\d{2}-\d{2}\s\d{2}:\d{2}$)/:00/g&#39;</span> *
</code></pre></td></tr></table>
</div>
</div><h3 id="替换文章摘要标签">替换文章摘要标签</h3>
<p>Hugo 不允许“more”两侧有空格：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">gsed -ri <span class="s1">&#39;s/!-- more --/!--more--/g&#39;</span> *
</code></pre></td></tr></table>
</div>
</div><h3 id="补充和转换复杂内容">补充和转换复杂内容</h3>
<p>此外还有诸如日期时间缺失、转换 Octopress 标签到 Markdown 格式等问题，另外为了保持 Permalink 不变，准备每篇文章都补充一个Front Matter <code>slug</code>。所以写了一个 PHP 脚本：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span><span class="lnt">89
</span><span class="lnt">90
</span><span class="lnt">91
</span><span class="lnt">92
</span><span class="lnt">93
</span><span class="lnt">94
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-php" data-lang="php">#!/usr/bin/env php
<span class="cp">&lt;?php</span>

<span class="k">if</span> <span class="p">(</span><span class="nv">$argc</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">file_put_contents</span><span class="p">(</span><span class="s1">&#39;php://stderr&#39;</span><span class="p">,</span> <span class="s2">&#34;需输入一个合法的文件路径</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">);</span>
    <span class="k">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
<span class="p">}</span>

<span class="k">for</span> <span class="p">(</span><span class="nv">$i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="nv">$i</span> <span class="o">&lt;</span> <span class="nv">$argc</span><span class="p">;</span> <span class="nv">$i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">handle_file</span><span class="p">(</span><span class="nv">$argv</span><span class="p">[</span><span class="nv">$i</span><span class="p">]);</span>
<span class="p">}</span>

<span class="k">function</span> <span class="nf">handle_file</span><span class="p">(</span><span class="nv">$filePath</span><span class="p">)</span>
<span class="p">{</span>
    <span class="nv">$content</span> <span class="o">=</span> <span class="nx">file_get_contents</span><span class="p">(</span><span class="nv">$filePath</span><span class="p">);</span>
    <span class="nv">$lines</span> <span class="o">=</span> <span class="nx">explode</span><span class="p">(</span><span class="s2">&#34;</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">,</span> <span class="nv">$content</span><span class="p">);</span>

    <span class="nv">$isDateMissing</span> <span class="o">=</span> <span class="k">empty</span><span class="p">(</span><span class="nx">preg_grep</span><span class="p">(</span><span class="s1">&#39;/^date:\s*/&#39;</span><span class="p">,</span> <span class="nv">$lines</span><span class="p">));</span>
    <span class="k">if</span> <span class="p">(</span><span class="nv">$isDateMissing</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">append_date</span><span class="p">(</span><span class="nv">$filePath</span><span class="p">,</span> <span class="nv">$lines</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="nv">$isSlugMissing</span> <span class="o">=</span> <span class="k">empty</span><span class="p">(</span><span class="nx">preg_grep</span><span class="p">(</span><span class="s1">&#39;/^slug:\s/&#39;</span><span class="p">,</span> <span class="nv">$lines</span><span class="p">));</span>
    <span class="k">if</span> <span class="p">(</span><span class="nv">$isSlugMissing</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">append_slug</span><span class="p">(</span><span class="nv">$filePath</span><span class="p">,</span> <span class="nv">$lines</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="nx">convert_hexo_tags</span><span class="p">(</span><span class="nv">$lines</span><span class="p">);</span>

    <span class="nx">file_put_contents</span><span class="p">(</span><span class="nv">$filePath</span><span class="p">,</span> <span class="nx">implode</span><span class="p">(</span><span class="s2">&#34;</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">,</span> <span class="nv">$lines</span><span class="p">));</span>
<span class="p">}</span>

<span class="k">function</span> <span class="nf">append_date</span><span class="p">(</span><span class="nv">$filePath</span><span class="p">,</span> <span class="o">&amp;</span><span class="nv">$lines</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// 获取文件名中的日期
</span><span class="c1"></span>    <span class="nv">$arr</span> <span class="o">=</span> <span class="p">[];</span>
    <span class="nx">preg_match</span><span class="p">(</span><span class="s1">&#39;/\d{4}-\d{2}-\d{2}/&#39;</span><span class="p">,</span> <span class="nx">basename</span><span class="p">(</span><span class="nv">$filePath</span><span class="p">),</span> <span class="nv">$arr</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="k">empty</span><span class="p">(</span><span class="nv">$arr</span><span class="p">))</span> <span class="p">{</span>
        <span class="nx">file_put_contents</span><span class="p">(</span><span class="s1">&#39;php://stderr&#39;</span><span class="p">,</span> <span class="s2">&#34;未能从文件名中找到日期</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">);</span>
        <span class="k">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">foreach</span> <span class="p">(</span><span class="nv">$lines</span> <span class="k">as</span> <span class="nv">$idx</span> <span class="o">=&gt;</span> <span class="nv">$line</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="nx">strpos</span><span class="p">(</span><span class="nv">$line</span><span class="p">,</span> <span class="s1">&#39;title:&#39;</span><span class="p">)</span> <span class="o">===</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
            <span class="nv">$lines</span> <span class="o">=</span> <span class="nx">array_merge</span><span class="p">(</span>
                <span class="nx">array_slice</span><span class="p">(</span><span class="nv">$lines</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">$idx</span> <span class="o">+</span> <span class="mi">1</span><span class="p">),</span>
                <span class="p">[</span><span class="s2">&#34;date: </span><span class="si">{</span>$arr[0]<span class="si">}</span><span class="s2"> 00:00:00&#34;</span><span class="p">],</span>
                <span class="nx">array_slice</span><span class="p">(</span><span class="nv">$lines</span><span class="p">,</span> <span class="nv">$idx</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
            <span class="p">);</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">function</span> <span class="nf">append_slug</span><span class="p">(</span><span class="nv">$filePath</span><span class="p">,</span> <span class="o">&amp;</span><span class="nv">$lines</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span> <span class="nx">preg_match</span><span class="p">(</span><span class="s1">&#39;/(?&lt;=\d{4}-\d{2}-\d{2}-).*(?=\.)/&#39;</span><span class="p">,</span> <span class="nx">basename</span><span class="p">(</span><span class="nv">$filePath</span><span class="p">),</span> <span class="nv">$matches</span><span class="p">))</span> <span class="p">{</span>
        <span class="nx">file_put_contents</span><span class="p">(</span><span class="s1">&#39;php://stderr&#39;</span><span class="p">,</span> <span class="s2">&#34;未能从文件名中找到slug</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">);</span>
        <span class="k">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">foreach</span> <span class="p">(</span><span class="nv">$lines</span> <span class="k">as</span> <span class="nv">$idx</span> <span class="o">=&gt;</span> <span class="nv">$line</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="nx">strpos</span><span class="p">(</span><span class="nv">$line</span><span class="p">,</span> <span class="s1">&#39;title:&#39;</span><span class="p">)</span> <span class="o">===</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
            <span class="nv">$lines</span> <span class="o">=</span> <span class="nx">array_merge</span><span class="p">(</span>
                <span class="nx">array_slice</span><span class="p">(</span><span class="nv">$lines</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">$idx</span> <span class="o">+</span> <span class="mi">1</span><span class="p">),</span>
                <span class="p">[</span><span class="s2">&#34;slug: &#34;</span> <span class="o">.</span> <span class="nx">str_replace</span><span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="p">,</span> <span class="s1">&#39; &#39;</span><span class="p">,</span> <span class="nv">$matches</span><span class="p">[</span><span class="mi">0</span><span class="p">])],</span>
                <span class="nx">array_slice</span><span class="p">(</span><span class="nv">$lines</span><span class="p">,</span> <span class="nv">$idx</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
            <span class="p">);</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">function</span> <span class="nf">convert_hexo_tags</span><span class="p">(</span><span class="o">&amp;</span><span class="nv">$lines</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">foreach</span> <span class="p">(</span><span class="nv">$lines</span> <span class="k">as</span> <span class="nv">$idx</span> <span class="o">=&gt;</span> <span class="nv">$line</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="nx">preg_match</span><span class="p">(</span><span class="s1">&#39;/(?&lt;={%\simg\s).*(?=\s\d+\s%})/&#39;</span><span class="p">,</span> <span class="nv">$line</span><span class="p">,</span> <span class="nv">$matches</span><span class="p">)</span>
            <span class="o">||</span> <span class="nx">preg_match</span><span class="p">(</span><span class="s1">&#39;/(?&lt;={%\simg\s).*(?=\s%})/&#39;</span><span class="p">,</span> <span class="nv">$line</span><span class="p">,</span> <span class="nv">$matches</span><span class="p">)</span>
        <span class="p">)</span> <span class="p">{</span>
            <span class="nv">$lines</span><span class="p">[</span><span class="nv">$idx</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&#34;![](</span><span class="si">{</span>$matches[0]<span class="si">}</span><span class="s2">)&#34;</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">if</span> <span class="p">(</span><span class="nx">preg_match</span><span class="p">(</span><span class="s1">&#39;/(?&lt;={%\scodeblock\slang:).*(?=\s[a-zA-Z0-9.]+\s%})/&#39;</span><span class="p">,</span> <span class="nv">$line</span><span class="p">,</span> <span class="nv">$matches</span><span class="p">)</span>
            <span class="o">||</span> <span class="nx">preg_match</span><span class="p">(</span><span class="s1">&#39;/(?&lt;={%\scodeblock\slang:).*(?=\s%})/&#39;</span><span class="p">,</span> <span class="nv">$line</span><span class="p">,</span> <span class="nv">$matches</span><span class="p">)</span>
            <span class="o">||</span> <span class="nx">preg_match</span><span class="p">(</span><span class="s1">&#39;/(?&lt;={%\scodeblock).*(?=\s%})/&#39;</span><span class="p">,</span> <span class="nv">$line</span><span class="p">,</span> <span class="nv">$matches</span><span class="p">)</span>
        <span class="p">)</span> <span class="p">{</span>
            <span class="nv">$lines</span><span class="p">[</span><span class="nv">$idx</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&#34;```</span><span class="si">{</span>$matches[0]<span class="si">}</span><span class="s2">&#34;</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">if</span> <span class="p">(</span><span class="nx">preg_match</span><span class="p">(</span><span class="s1">&#39;/{%\sendcodeblock\s%}/&#39;</span><span class="p">,</span> <span class="nv">$line</span><span class="p">))</span> <span class="p">{</span>
            <span class="nv">$lines</span><span class="p">[</span><span class="nv">$idx</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&#34;```&#34;</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>执行：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">ls content/posts <span class="p">|</span> sed <span class="s2">&#34;s:^:`pwd`/content/posts/:&#34;</span> <span class="p">|</span> xargs ./convert.php
</code></pre></td></tr></table>
</div>
</div><h2 id="实现全文检索">实现全文检索</h2>
<p>默认的 Lunr 方式开箱即用，但速度较慢，而且中文分词做得不好。所以使用 <a href="https://www.algolia.com/" target="_blank" rel="noopener noreffer">Algolia</a> 实现。</p>
<p>注册账号并选用免费方案后，在“API Keys”页面复制“Application ID”、“Search-Only API Key”和“Admin API Key”。</p>
<p>在项目根目录下创建 <code>.env</code> 文件：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-ini" data-lang="ini"><span class="na">ALGOLIA_APP_ID</span><span class="o">=</span><span class="s">XXXXXX</span>
<span class="na">ALGOLIA_ADMIN_KEY</span><span class="o">=</span><span class="s">XXXXXX</span>
<span class="na">ALGOLIA_INDEX_NAME</span><span class="o">=</span><span class="s">0x3f.org</span>
<span class="na">ALGOLIA_INDEX_FILE</span><span class="o">=</span><span class="s">public/index.json</span>
</code></pre></td></tr></table>
</div>
</div><p><code>APP_ID</code> 和 <code>ADMIN_KEY</code> 是前面复制的三项中的值，<code>INDEX_NAME</code> 是 Algolia 上的索引名称，随便起一个就行。<code>INDEX_FILE</code> 是生成站点时自动生成的索引文件的路径，一般不需要修改。</p>
<p>安装自动提交索引到 Algolia 的脚本：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">npm install atomic-algolia -g
</code></pre></td></tr></table>
</div>
</div><p>执行提交：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">atomic-algolia
</code></pre></td></tr></table>
</div>
</div><p>因为我所用的主题是支持 Algolia 的，所以把 “Application ID”、“Search-Only Key”和索引名称填到配置文件中对应的项后就可以使用搜索了。</p>
<h2 id="添加评论功能">添加评论功能</h2>
<p>用了很多年 Disqus ，这次打算换用 Github Issues ，选择了 <a href="https://utteranc.es/" target="_blank" rel="noopener noreffer">Utterances</a> 。</p>
<p>主题原生支持，注册账号后简单配置即可。</p>
<h2 id="favicon">Favicon</h2>
<p>原来简单粗暴地用了唯一在的图标文件，这次改用 <a href="https://realfavicongenerator.net/" target="_blank" rel="noopener noreffer">Favicon Generator</a> 生成一套对多平台浏览器优化的图标。</p>
<p>把全套文件放到 <code>static/</code> 目录下即可。</p>
<h2 id="部署到-github-pages">部署到 Github Pages</h2>
<p>Github Pages 支持多种站点生成方式，由于 Hexo 默认使用 master 分支管理生成的静态资源，而站点源码存放在 source 分支，所以我打算沿用这个方案，在继续使用 master 分支存放静态资源的同时，新增一个 hugo 分支，管理源码。</p>
<h3 id="手动部署">手动部署</h3>
<p>Hugo 会将生成的静态资源存放在项目根目录下的<code>public</code>目录中，所以需要将 master 分支检出到该目录：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">git worktree add -B master public origin/master
</code></pre></td></tr></table>
</div>
</div><p>生成站点并部署：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">hugo
<span class="nb">cd</span> public <span class="o">&amp;&amp;</span> git add —all
git commit
git push -f origin master
</code></pre></td></tr></table>
</div>
</div><p>很快就能看到新网站了。</p>
<h3 id="自动部署">自动部署</h3>
<p>Hugo 并没有提供 Hexo 那样的自动部署命令，所以要么把上述手动部署的命令写成脚本，要么使用自动部署工具，恰好 Github Actions 可以很好地实现。</p>
<p>创建 <code>.github/workflows/main.yml</code> 文件：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-yaml" data-lang="yaml"><span class="k">name</span><span class="p">:</span><span class="w"> </span>github<span class="w"> </span>pages<span class="w">
</span><span class="w">
</span><span class="w"></span><span class="k">on</span><span class="p">:</span><span class="w">
</span><span class="w">  </span><span class="k">push</span><span class="p">:</span><span class="w">
</span><span class="w">    </span><span class="k">branches</span><span class="p">:</span><span class="w">
</span><span class="w">      </span>- hugo<span class="w">
</span><span class="w">
</span><span class="w"></span><span class="k">jobs</span><span class="p">:</span><span class="w">
</span><span class="w">  </span><span class="k">deploy</span><span class="p">:</span><span class="w">
</span><span class="w">    </span><span class="k">runs-on</span><span class="p">:</span><span class="w"> </span>ubuntu<span class="m">-18.04</span><span class="w">
</span><span class="w">    </span><span class="k">steps</span><span class="p">:</span><span class="w">
</span><span class="w">      </span>- <span class="k">uses</span><span class="p">:</span><span class="w"> </span>actions/checkout@v2<span class="w">
</span><span class="w">        </span><span class="k">with</span><span class="p">:</span><span class="w">
</span><span class="w">          </span><span class="k">submodules</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">  </span><span class="c"># Fetch Hugo themes (true OR recursive)</span><span class="w">
</span><span class="w">          </span><span class="k">fetch-depth</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">    </span><span class="c"># Fetch all history for .GitInfo and .Lastmod</span><span class="w">
</span><span class="w">
</span><span class="w">      </span>- <span class="k">name</span><span class="p">:</span><span class="w"> </span>Setup<span class="w"> </span>Hugo<span class="w">
</span><span class="w">        </span><span class="k">uses</span><span class="p">:</span><span class="w"> </span>peaceiris/actions-hugo@v2<span class="w">
</span><span class="w">        </span><span class="k">with</span><span class="p">:</span><span class="w">
</span><span class="w">        </span><span class="c">#   hugo-version: &#39;0.71.1&#39;</span><span class="w">
</span><span class="w">          </span><span class="k">hugo-version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;latest&#39;</span><span class="w">
</span><span class="w">          </span><span class="c"># extended: true</span><span class="w">
</span><span class="w">
</span><span class="w">      </span>- <span class="k">name</span><span class="p">:</span><span class="w"> </span>Build<span class="w">
</span><span class="w">        </span><span class="k">run</span><span class="p">:</span><span class="w"> </span>hugo<span class="w"> </span>--minify<span class="w">
</span><span class="w">
</span><span class="w">      </span>- <span class="k">name</span><span class="p">:</span><span class="w"> </span>Deploy<span class="w">
</span><span class="w">        </span><span class="k">uses</span><span class="p">:</span><span class="w"> </span>peaceiris/actions-gh-pages@v3<span class="w">
</span><span class="w">        </span><span class="k">with</span><span class="p">:</span><span class="w">
</span><span class="w">          </span><span class="k">github_token</span><span class="p">:</span><span class="w"> </span>${{<span class="w"> </span>secrets.GITHUB_TOKEN<span class="w"> </span>}}<span class="w">
</span><span class="w">          </span><span class="k">publish_dir</span><span class="p">:</span><span class="w"> </span>./public<span class="w">
</span><span class="w">          </span><span class="k">publish_branch</span><span class="p">:</span><span class="w"> </span>master<span class="w">
</span><span class="w">
</span><span class="w">      </span>- <span class="k">name</span><span class="p">:</span><span class="w"> </span>Update<span class="w"> </span>Algolia<span class="w"> </span>Index<span class="w">
</span><span class="w">        </span><span class="k">env</span><span class="p">:</span><span class="w">
</span><span class="w">          </span><span class="k">ALGOLIA_APP_ID</span><span class="p">:</span><span class="w"> </span>XXXXXX<span class="w">
</span><span class="w">          </span><span class="k">ALGOLIA_ADMIN_KEY</span><span class="p">:</span><span class="w"> </span>${{<span class="w"> </span>secrets.ALGOLIA_ADMIN_KEY<span class="w"> </span>}}<span class="w">
</span><span class="w">          </span><span class="k">ALGOLIA_INDEX_NAME</span><span class="p">:</span><span class="w"> </span><span class="m">0x3f</span>.org<span class="w">
</span><span class="w">          </span><span class="k">ALGOLIA_INDEX_FILE</span><span class="p">:</span><span class="w"> </span>public/index.json<span class="w">
</span><span class="w">        </span><span class="k">run</span><span class="p">:</span><span class="w"> </span><span class="sd">|
</span><span class="sd">          sudo apt-get -yqq install npm</span><span class="w">
</span><span class="w">          </span>sudo<span class="w"> </span>npm<span class="w"> </span>install<span class="w"> </span>atomic-algolia<span class="w"> </span>-g<span class="w">
</span><span class="w">          </span>atomic-algolia<span class="w">
</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div><p>注意替换 <code>ALGOLIA_APP_ID</code> 的真实值，并把 Algolia 的“Admin API Key”添加到 Github 项目设置中的“Secrets”里，名称为“ALGOLIA_ADMIN_KEY”。</p>
<p>以后再在 hugo 分支推送新的提交时，Github Actions 就会自动执行部署操作。</p>
<hr>
<p>从06年在中国博客网上开始写文章，到后来换到个人搭建并售卖的 Wordpress，五年颠沛流离的博客生涯终于在12年结束并<a href="/post/migrate-blog-to-octopress/" rel="">定居到 Github 上</a>，之后 Octopress 一用就又是五年。17年，因为 Octopress 转换速度太慢，<a href="/post/migrate-octopress-to-hexo/" rel="">换成了 Hexo</a>。</p>
<p>我想，这次折腾之后，应该能再安分五年吧。</p>]]></description></item></channel></rss>