<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on 晴耕雨讀</title><link>http://0x3f.org/tags/linux/</link><description>Recent content in Linux on 晴耕雨讀</description><generator>Hugo</generator><language>zh-cn</language><copyright>© 2007-2024 鬼马妖刀</copyright><lastBuildDate>Mon, 19 Jun 2017 21:49:14 +0000</lastBuildDate><atom:link href="http://0x3f.org/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>CopyQ，也许是Linux最好的剪贴板管理工具</title><link>http://0x3f.org/posts/copyq/</link><pubDate>Mon, 19 Jun 2017 21:49:14 +0000</pubDate><guid>http://0x3f.org/posts/copyq/</guid><description>&lt;p&gt;我对剪贴板管理工具的核心需求有四个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;记录文本&lt;/li&gt;
&lt;li&gt;记录图片&lt;/li&gt;
&lt;li&gt;快速搜索&lt;/li&gt;
&lt;li&gt;独立软件包&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CopyQ是Linux上唯一满足这些需求的实现，虽然体验上跟Mac下的竞品还有差距。&lt;/p&gt;
&lt;p&gt;用法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;copyq&lt;/code&gt;：运行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;copyq menu&lt;/code&gt;：显示剪贴板历史管理菜单&lt;/li&gt;
&lt;li&gt;&lt;code&gt;copyq show&lt;/code&gt;：显示剪贴板历史管理窗口&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>自定义GVIM 8标签栏样式的方法</title><link>http://0x3f.org/posts/how-to-customize-gvim8-tab-style/</link><pubDate>Sun, 04 Jun 2017 12:42:12 +0000</pubDate><guid>http://0x3f.org/posts/how-to-customize-gvim8-tab-style/</guid><description>&lt;p&gt;GVim 8用的是GTK 3，原来在&lt;code&gt;~/.gtkrc-2.0&lt;/code&gt;里加样式的方法不能用了。&lt;/p&gt;
&lt;p&gt;GTK 3的样式在&lt;code&gt;~/.config/gtk-3.0/gtk.css&lt;/code&gt;里：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;span class="lnt"&gt;19
&lt;/span&gt;&lt;span class="lnt"&gt;20
&lt;/span&gt;&lt;span class="lnt"&gt;21
&lt;/span&gt;&lt;span class="lnt"&gt;22
&lt;/span&gt;&lt;span class="lnt"&gt;23
&lt;/span&gt;&lt;span class="lnt"&gt;24
&lt;/span&gt;&lt;span class="lnt"&gt;25
&lt;/span&gt;&lt;span class="lnt"&gt;26
&lt;/span&gt;&lt;span class="lnt"&gt;27
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-css" data-lang="css"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c"&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c"&gt; * Adapt to the nova colorscheme
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c"&gt; */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;define-color&lt;/span&gt; &lt;span class="nt"&gt;VIM_BG_FIX&lt;/span&gt; &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;3C4C55&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nt"&gt;window&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;vim-main-window&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;VIM_BG_FIX&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nt"&gt;window&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;vim-main-window&lt;/span&gt; &lt;span class="nt"&gt;notebook&lt;/span&gt; &lt;span class="nt"&gt;header&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#1E272C&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;border-bottom-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nt"&gt;window&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;vim-main-window&lt;/span&gt; &lt;span class="nt"&gt;notebook&lt;/span&gt; &lt;span class="nt"&gt;tab&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;border-bottom-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nt"&gt;window&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;vim-main-window&lt;/span&gt; &lt;span class="nt"&gt;notebook&lt;/span&gt; &lt;span class="nt"&gt;tab&lt;/span&gt; &lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;padding-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;padding-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;padding-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;padding-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#7CBDC6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nt"&gt;window&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;vim-main-window&lt;/span&gt; &lt;span class="nt"&gt;notebook&lt;/span&gt; &lt;span class="nt"&gt;tab&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;checked&lt;/span&gt; &lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#7CBDC6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#1E272C&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;查看GTK 3程序的样式结构的方法是用GTK Inspector：&lt;/p&gt;</description></item><item><title>小确幸，用Vim编辑当前命令行</title><link>http://0x3f.org/posts/edit-command-with-vim/</link><pubDate>Mon, 26 Dec 2016 11:58:00 +0000</pubDate><guid>http://0x3f.org/posts/edit-command-with-vim/</guid><description>&lt;p&gt;修改很长的命令是件痛苦的事，在Linux下，可以通过快捷键&lt;code&gt;Ctrl+X Ctrl+E&lt;/code&gt;调用&lt;code&gt;$EDITOR&lt;/code&gt;快速编辑当前命令行的内容，保存退出后，结果会呈现在光标下。&lt;/p&gt;
&lt;p&gt;不过在Mac OS的iTerm2下，似乎是因为&lt;code&gt;Ctrl+X&lt;/code&gt;被占用而不能生效。误打误撞地发现了另外一个方法，使用oh-my-zsh并且开启了vi mode的话，先进入vi mode，然后输入&lt;code&gt;v&lt;/code&gt;，同样可以实现这样的功能。&lt;/p&gt;</description></item><item><title>Archlinux安装过程中的几个坑</title><link>http://0x3f.org/posts/pits-of-archlinux/</link><pubDate>Mon, 17 Oct 2016 13:14:00 +0000</pubDate><guid>http://0x3f.org/posts/pits-of-archlinux/</guid><description>&lt;h2 id="安装方案"&gt;安装方案&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://mirrors.ustc.edu.cn/archlinux/iso/archboot/latest/"&gt;Archboot&lt;/a&gt;是比官方镜像更友好的安装媒介，此外还有&lt;a href="https://github.com/helmuthdu/aui"&gt;AUI&lt;/a&gt;和&lt;a href="https://arch-anywhere.org"&gt;Arch Anywhere&lt;/a&gt;，没有试过。&lt;/p&gt;
&lt;h2 id="分区"&gt;分区&lt;/h2&gt;
&lt;p&gt;Archboot使用parted处理分区任务。&lt;/p&gt;
&lt;p&gt;第一个分区不能从sector 0开始，否则安装完成后系统玩法启动，报如下错误：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;no operating system found&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;正确的姿势：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(parted) mkpart primary 2048s 512&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;以上假设第一个分区用来挂载/boot，分配512M。&lt;/p&gt;
&lt;p&gt;还需要设置/boot所在的分区可启动：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(parted) set 1 boot on&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id="启动引导器"&gt;启动引导器&lt;/h2&gt;
&lt;p&gt;GRUB的兼容性比较好。&lt;/p&gt;
&lt;p&gt;如果是syslinux，对于没有单独对/boot分区并且根分区使用ext4的情况，会无法启动，报如下错误：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;failed to load ldlinux.c32&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;此时，应对/boot单独分区并使用fat格式。&lt;/p&gt;
&lt;h2 id="图形界面"&gt;图形界面&lt;/h2&gt;
&lt;p&gt;安装X不会连带安装显卡驱动，要单独安装，否则启动图形界面会黑屏。&lt;/p&gt;
&lt;p&gt;在VirtualBox中安装时，驱动在「virtualbox-guest-utils」。&lt;/p&gt;</description></item><item><title>在i3wm状态栏显示股票信息</title><link>http://0x3f.org/posts/show-stocks-in-i3status/</link><pubDate>Fri, 12 Jun 2015 17:39:00 +0000</pubDate><guid>http://0x3f.org/posts/show-stocks-in-i3status/</guid><description>&lt;p&gt;效果如图：&lt;/p&gt;
&lt;p&gt;&lt;img src="http://pic.yupoo.com/leninlee/EIOXvoh8/medish.jpg" alt=""&gt;&lt;/p&gt;
&lt;p&gt;创建脚本，并赋可执行权限：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;span class="lnt"&gt;19
&lt;/span&gt;&lt;span class="lnt"&gt;20
&lt;/span&gt;&lt;span class="lnt"&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cp"&gt;#!/bin/sh
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cp"&gt;&lt;/span&gt;&lt;span class="c1"&gt;# shell script to prepend i3status with more stuff&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;STOCK_SCRIPT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;realpath &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;xargs dirname&lt;span class="sb"&gt;`&lt;/span&gt;/stock.php
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;i3status &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; :
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;stock_info&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; -x &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$STOCK_SCRIPT&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;stock_info&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nv"&gt;$STOCK_SCRIPT&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;read&lt;/span&gt; line
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="c1"&gt;# if output_format = i3bar in i3status.conf&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;stock_info&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;[{ \&amp;#34;full_text\&amp;#34;: \&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;stock_info&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;\&amp;#34; },&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;line&lt;/span&gt;&lt;span class="p"&gt;/[/&lt;/span&gt;&lt;span class="nv"&gt;$stock_info&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="c1"&gt;# # if not output_format = i3bar in i3status.conf&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="c1"&gt;# echo &amp;#34;$stock_info | $line&amp;#34; || exit 1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果i3status.conf中启用了JSON格式输出（支持颜色），应启用上面脚本中第一块的代码，否则使用后面的。启动JSON格式输出的内容具体如下：&lt;/p&gt;</description></item><item><title>自动重映射键盘</title><link>http://0x3f.org/posts/auto-remap-keyboard/</link><pubDate>Fri, 17 Apr 2015 18:02:00 +0000</pubDate><guid>http://0x3f.org/posts/auto-remap-keyboard/</guid><description>&lt;p&gt;每次键盘拔出再插入时，键盘映射都会失效，要重新执行映射，而且要对不同的键盘应用不同的映射方案。试过直接添加udev规则，即使指定X Display和Xauthority也不成功。所以用pyudev写个脚本（&lt;a href="https://github.com/xbot/shell/blob/master/udev.py"&gt;最新版本&lt;/a&gt;）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;span class="lnt"&gt;19
&lt;/span&gt;&lt;span class="lnt"&gt;20
&lt;/span&gt;&lt;span class="lnt"&gt;21
&lt;/span&gt;&lt;span class="lnt"&gt;22
&lt;/span&gt;&lt;span class="lnt"&gt;23
&lt;/span&gt;&lt;span class="lnt"&gt;24
&lt;/span&gt;&lt;span class="lnt"&gt;25
&lt;/span&gt;&lt;span class="lnt"&gt;26
&lt;/span&gt;&lt;span class="lnt"&gt;27
&lt;/span&gt;&lt;span class="lnt"&gt;28
&lt;/span&gt;&lt;span class="lnt"&gt;29
&lt;/span&gt;&lt;span class="lnt"&gt;30
&lt;/span&gt;&lt;span class="lnt"&gt;31
&lt;/span&gt;&lt;span class="lnt"&gt;32
&lt;/span&gt;&lt;span class="lnt"&gt;33
&lt;/span&gt;&lt;span class="lnt"&gt;34
&lt;/span&gt;&lt;span class="lnt"&gt;35
&lt;/span&gt;&lt;span class="lnt"&gt;36
&lt;/span&gt;&lt;span class="lnt"&gt;37
&lt;/span&gt;&lt;span class="lnt"&gt;38
&lt;/span&gt;&lt;span class="lnt"&gt;39
&lt;/span&gt;&lt;span class="lnt"&gt;40
&lt;/span&gt;&lt;span class="lnt"&gt;41
&lt;/span&gt;&lt;span class="lnt"&gt;42
&lt;/span&gt;&lt;span class="lnt"&gt;43
&lt;/span&gt;&lt;span class="lnt"&gt;44
&lt;/span&gt;&lt;span class="lnt"&gt;45
&lt;/span&gt;&lt;span class="lnt"&gt;46
&lt;/span&gt;&lt;span class="lnt"&gt;47
&lt;/span&gt;&lt;span class="lnt"&gt;48
&lt;/span&gt;&lt;span class="lnt"&gt;49
&lt;/span&gt;&lt;span class="lnt"&gt;50
&lt;/span&gt;&lt;span class="lnt"&gt;51
&lt;/span&gt;&lt;span class="lnt"&gt;52
&lt;/span&gt;&lt;span class="lnt"&gt;53
&lt;/span&gt;&lt;span class="lnt"&gt;54
&lt;/span&gt;&lt;span class="lnt"&gt;55
&lt;/span&gt;&lt;span class="lnt"&gt;56
&lt;/span&gt;&lt;span class="lnt"&gt;57
&lt;/span&gt;&lt;span class="lnt"&gt;58
&lt;/span&gt;&lt;span class="lnt"&gt;59
&lt;/span&gt;&lt;span class="lnt"&gt;60
&lt;/span&gt;&lt;span class="lnt"&gt;61
&lt;/span&gt;&lt;span class="lnt"&gt;62
&lt;/span&gt;&lt;span class="lnt"&gt;63
&lt;/span&gt;&lt;span class="lnt"&gt;64
&lt;/span&gt;&lt;span class="lnt"&gt;65
&lt;/span&gt;&lt;span class="lnt"&gt;66
&lt;/span&gt;&lt;span class="lnt"&gt;67
&lt;/span&gt;&lt;span class="lnt"&gt;68
&lt;/span&gt;&lt;span class="lnt"&gt;69
&lt;/span&gt;&lt;span class="lnt"&gt;70
&lt;/span&gt;&lt;span class="lnt"&gt;71
&lt;/span&gt;&lt;span class="lnt"&gt;72
&lt;/span&gt;&lt;span class="lnt"&gt;73
&lt;/span&gt;&lt;span class="lnt"&gt;74
&lt;/span&gt;&lt;span class="lnt"&gt;75
&lt;/span&gt;&lt;span class="lnt"&gt;76
&lt;/span&gt;&lt;span class="lnt"&gt;77
&lt;/span&gt;&lt;span class="lnt"&gt;78
&lt;/span&gt;&lt;span class="lnt"&gt;79
&lt;/span&gt;&lt;span class="lnt"&gt;80
&lt;/span&gt;&lt;span class="lnt"&gt;81
&lt;/span&gt;&lt;span class="lnt"&gt;82
&lt;/span&gt;&lt;span class="lnt"&gt;83
&lt;/span&gt;&lt;span class="lnt"&gt;84
&lt;/span&gt;&lt;span class="lnt"&gt;85
&lt;/span&gt;&lt;span class="lnt"&gt;86
&lt;/span&gt;&lt;span class="lnt"&gt;87
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-python" data-lang="python"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="ch"&gt;#!/usr/bin/env python2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# encoding: utf-8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt;File: udev.py
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt;Description: udev monitor script.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt;Author: Donie Leigh
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt;Email: donie.leigh at gmail.com
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;glib&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyudev&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Monitor&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;PID_FILE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;/tmp/udev_monitor.pid&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;remap_pokerii&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;&amp;#34;&amp;#34; Do keyboard remapping when PokerII is plugged in.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ID_VENDOR_ID&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;0f39&amp;#39;&lt;/span&gt; \
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;add&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;setxkbmap&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;xmodmap ~/.Xmodmap&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;remap_filco&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;&amp;#34;&amp;#34; Do keyboard remapping when Filco is plugged in.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ID_VENDOR_ID&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;04d9&amp;#39;&lt;/span&gt; \
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;add&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;setxkbmap&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;xmodmap ~/.Xmodmap&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_pid_running&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;&amp;#34;&amp;#34; Check if the given pid is running.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; :pid: int
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; :returns: bool
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;kill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;OSError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;write_pid_or_die&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;&amp;#34;&amp;#34; Write the current pid into pid file or exists if there is already a instance running.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; :returns: void
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isfile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PID_FILE&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PID_FILE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;is_pid_running&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;Process &lt;/span&gt;&lt;span class="si"&gt;{0}&lt;/span&gt;&lt;span class="s2"&gt; is still running.&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;SystemExit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PID_FILE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PID_FILE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getpid&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyudev.glib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MonitorObserver&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;device_event&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;observer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;remap_pokerii&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;remap_filco&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyudev.glib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;GUDevMonitorObserver&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;MonitorObserver&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;device_event&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;observer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;remap_pokerii&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;remap_filco&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;monitor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Monitor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_netlink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;monitor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subsystem&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;usb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;observer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MonitorObserver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;monitor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;observer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;device-event&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;device_event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;monitor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;glib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MainLoop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;write_pid_or_die&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;KeyboardInterrupt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;Game over.&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;有个坑，监测到键盘插入事件后要等一秒再应用映射，否则不成功。&lt;/p&gt;</description></item><item><title>再次调整磁盘分区</title><link>http://0x3f.org/posts/adjust-disk-partitions-again/</link><pubDate>Fri, 03 Apr 2015 14:44:00 +0000</pubDate><guid>http://0x3f.org/posts/adjust-disk-partitions-again/</guid><description>&lt;p&gt;自从&lt;a href="http://0x3f.org/post/adjust-disk-partitions-in-archlinux/"&gt;上次&lt;/a&gt;调整磁盘分区，一直把根目录和主目录分别挂在一个物理分区下，即使系统挂了或者换发行版也不影响主目录。最近根分区很紧张，干脆把两个分区合并了。&lt;/p&gt;
&lt;p&gt;先用UNetBootin安装Puppy Linux到U盘，需要手工修改U盘里的syslinux.cfg，把“pmedia=&lt;strong&gt;cd&lt;/strong&gt;”改成“pmedia=&lt;strong&gt;usbflash&lt;/strong&gt;”，然后用U盘启动。&lt;/p&gt;
&lt;p&gt;把主目录的内容完整复制到移动硬盘：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 挂载主目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mkdir /mnt/oldhome
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mount -t ext4 /dev/sda2 /mnt/oldhome
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 挂载移动硬盘&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mkdir /mnt/bakdisk
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mount -t ext4 /dev/sdc1 /mnt/bakdisk
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 复制主目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;cp -a /mnt/oldhome /mnt/bakdisk/
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 取消挂载主目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;umount /mnt/oldhome
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;用gparted删除主目录分区，合并到根分区。然后恢复主目录：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 挂载根分区&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mkdir /mnt/newroot
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mount -t ext4 /dev/sda1 /mnt/newroot
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 恢复主目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;cp -a /mnt/bakdisk/* /mnt/newroot/
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 修改fstab，取消主目录的挂载&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;vim /mnt/newroot/etc/fstab
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 取消挂载&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;umount /mnt/bakdisk
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;umount /mnt/newroot
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description></item><item><title>ZSH下新安装的程序无法自动补全的解决方法</title><link>http://0x3f.org/posts/how-to-auto-complete-newly-installed-command-in-zsh/</link><pubDate>Wed, 12 Nov 2014 22:15:00 +0000</pubDate><guid>http://0x3f.org/posts/how-to-auto-complete-newly-installed-command-in-zsh/</guid><description>&lt;p&gt;Zsh默认开启了对PATH变量的缓存，这是导致新安装的程序无法立即使用自动补全的原因。&lt;/p&gt;
&lt;p&gt;其实只要PATH变量不太复杂，安装的程序不太多，完全没必要开启缓存，实际上我把缓存关掉后完全没有感觉到补全的速度有什么变化。&lt;/p&gt;
&lt;p&gt;方法如下，在.zshrc中增加一行：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;zstyle &lt;span class="s1"&gt;&amp;#39;:completion:*&amp;#39;&lt;/span&gt; rehash &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;也可以在必要的时间手工执行命令&lt;strong&gt;rehash&lt;/strong&gt;，也是个临时解决方法。&lt;/p&gt;</description></item><item><title>使用 lsyncd 同步文件</title><link>http://0x3f.org/posts/live-syncing-daemon/</link><pubDate>Wed, 18 Jun 2014 14:03:00 +0000</pubDate><guid>http://0x3f.org/posts/live-syncing-daemon/</guid><description>&lt;p&gt;lsyncd全称“Live Syncing Daemon”，是Linux下的文件自动同步工具，同时支持SSH、rsync的实现方式。相对于rsync+inotify，它速度更快，也更稳定。&lt;/p&gt;
&lt;p&gt;对于SSH的方式，需要目标机器中已启动SSHD，并把源机器上的公钥加到目标机器root用户的authorized_keys中，私钥应放在源机器上运行lsyncd的用户的.ssh目录中，密钥放错了用户，会导致无法同步。&lt;/p&gt;
&lt;p&gt;然后就是在源机器上创建配置文件，lsyncd的配置文件是个lua脚本：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;span class="lnt"&gt;19
&lt;/span&gt;&lt;span class="lnt"&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-lua" data-lang="lua"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;pidfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;/var/log/lsyncd/lsyncd.pid&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;logfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;/var/log/lsyncd/lsyncd.log&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;statusFile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;/var/log/lsyncd/lsyncd-status.log&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;statusInterval&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;maxDelays&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="c1"&gt;-- nodaemon = true,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;sync&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;default.rsyncssh&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;/home/monk/workspace&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;host&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;192.168.1.3&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;targetdir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;/var/www/workspace&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;exclude&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;.*&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;*.tmp&amp;#34;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;rsync&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;compress&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;_extra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;--bwlimit=50000&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后启动lsyncd：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo lsyncd /etc/lsyncd.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description></item><item><title>使用存取控制表在Linux用户间共享文件</title><link>http://0x3f.org/posts/share-file-using-access-control-lists/</link><pubDate>Wed, 19 Mar 2014 22:38:00 +0000</pubDate><guid>http://0x3f.org/posts/share-file-using-access-control-lists/</guid><description>&lt;p&gt;我用Dropbox在两台电脑间同步个人维基数据，将数据目录从Web Server下软连接到Dropbox里，而对Dropbox目录的备份实际上只包含那个软连接，没有内容，结果当把备份拷贝到另一台电脑上并打开Dropbox后，维基数据被清空了！我积累多年的笔记差一点儿完蛋，幸亏单独备份过维基。然后改将维基数据放到Dropbox里，然后软连接到Web Server下，新问题出现了，Web Server是以http身份运行的，对用户主目录没有权限，当然也不能访问主目录下的Dropbox目录。&lt;/p&gt;
&lt;p&gt;最简单的办法是将主目录、Dropbox、维基目录的权限全部设成777，显然，这样做太不安全。另一种方法是把Dropbox用NFS输出，然后挂载到Web Server下，这么做太蛋疼。最合适的解决方案是Access Control List（存取控制表），它可以为文件和目录设置具体到单个用户或用户组的存取权限，实现像Windows下的文件（目录）共享权限设置那样的效果，而且比后者更强大、灵活。&lt;/p&gt;
&lt;p&gt;使用ACL首先需要目录的挂载选项中包含acl，不过一般缺省都包含这一项。&lt;/p&gt;
&lt;p&gt;ACL包含两个命令：getfacl和setfacl，前者用来查看目录或文件的存取控制表，后者用来操作它。&lt;/p&gt;
&lt;p&gt;首先，把维基目录的所有者改成http，并设置目录权限为770：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chown -R http:http ~/Dropbox/wiki
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chmod -R &lt;span class="m"&gt;770&lt;/span&gt; ~/Dropbox/wiki
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这时Web Server还是不能访问维基目录，使用getfacl查看用户主目录的ACL：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;getfacl ~
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;显示结果如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;getfacl: Removing leading &amp;lsquo;/&amp;rsquo; from absolute path names&lt;br&gt;
# file: home/taoqi&lt;br&gt;
# owner: taoqi&lt;br&gt;
# group: users&lt;br&gt;
user::rwx&lt;br&gt;
user:root:&amp;ndash;x&lt;br&gt;
group::&amp;mdash;&lt;br&gt;
mask::&amp;ndash;x&lt;br&gt;
other::&amp;mdash;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;显然，要给http用户访问该目录的权限：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;setfacl -m u:http:x ~
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;再查看ACL，发现增加了一条：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;user:http:&amp;ndash;x&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;同理，给Dropbox目录也加上这一条规则之后，Web Server就可以访问维基数据目录了。&lt;/p&gt;</description></item><item><title>Take Sakura as My Primary Terminal</title><link>http://0x3f.org/posts/take-sakura-as-my-primary-terminal/</link><pubDate>Sun, 07 Jul 2013 12:07:00 +0000</pubDate><guid>http://0x3f.org/posts/take-sakura-as-my-primary-terminal/</guid><description>&lt;p&gt;It&amp;rsquo;s a long time since I came across rxvt-unicode.&lt;/p&gt;
&lt;p&gt;About seven years ago, when I switched from Windows XP to Ubuntu mainly for performance issues, I never be bored with searching for everything with a higher speed. To me, gnome-terminal is too much slow as a terminal being frequently opened and closed. Then, rxvt-unicode came through.&lt;/p&gt;
&lt;p&gt;At first glance, rxvt-unicode was so ugly that I put it behind without the slightest bit of hesitation. Not until I once saw a screenshot did I realize this ugly thing can actually be pretty like that. So I started to take it as my primary terminal since then, for it was the fastest terminal I can find at that time.&lt;/p&gt;</description></item><item><title>解决ROX-Filer文件类型识别问题</title><link>http://0x3f.org/posts/fix-ms-office-mime-types-in-rox-filer/</link><pubDate>Fri, 17 May 2013 12:52:00 +0000</pubDate><guid>http://0x3f.org/posts/fix-ms-office-mime-types-in-rox-filer/</guid><description>&lt;p&gt;默认情况下，ROX-Filer会将“*.docx”、“*.xlsx”、“*.pptx”文档识别为zip压缩包。由于ROX中与文件关联的行为实际上都是和文档类型挂钩的，所以对这些文档的操作会遇到很大麻烦，而且没有变通方法。&lt;/p&gt;
&lt;p&gt;实际上，Linux对文件类型的识别比Windows灵活。Windows只能通过文件名的后缀判断文件类型，随便创建一个文本文件，然后将后缀“.txt”改成“.exe”，Win就会傻乎乎地认为这是个二进制的可执行程序。这种做法很傻，而且很不安全，试想，如果将一个病毒程序的后缀改成“.jpg”，就可以骗过大多数用户，然后通过某种手段执行它，后果会怎样？更傻的是，XP以上版本默认是隐藏后缀的，那攻击者连改后缀都可以省了。颤抖吧，神一样的Win！&lt;/p&gt;
&lt;p&gt;Linux不但可以通过后缀识别文件类型，更重要的，还可以通过文件开头的几个字节实现这一点，这就比前一种方式精确、安全很多。当然，Linux还支持更多的文件类型识别方法。&lt;/p&gt;
&lt;p&gt;前面说过，在ROX-Filer下，所有行为都绑定到文件类型上，也就是MIME Types，ROX通过这种方式实现了将可灵活自由定制的文件操作与自身解耦，从而在确保自身稳定的同时实现对高度灵活的自由定制的支持，这是一个很值得学习的实现方式。因此，既然文件的后缀没有问题，ROX仍将它们识别为ZIP格式，原因是什么？显然，最大的嫌疑集中在第二种识别方式上。&lt;/p&gt;
&lt;p&gt;一个公开的秘密是，Office文档本身其实就是一个ZIP压缩包，里面包含了描述文档的XML、多媒体文件等成分，只不过MS贱贱地把压缩包的后缀改成了docx之类的东东，加上Windows只能通过后缀识别文件类型，所以很多人不知道这一点。了解了这个，问题的原因就跃然纸上了，既然都是ZIP压缩包，那第二种文件类型识别方式也就区分不出Office文件类型与ZIP压缩包了。&lt;/p&gt;
&lt;p&gt;能号出病因，就有方子治病。&lt;/p&gt;
&lt;p&gt;既然ROX使用多种文件类型识别方式，那必然有一个优先级的关系，否则就会乱套。打开ROX的MIME Editor：&lt;/p&gt;
&lt;p&gt;&lt;img src="http://pic.yupoo.com/leninlee/CRNkfq0g/medium.jpg" alt=""&gt;&lt;/p&gt;
&lt;p&gt;找到MIME类型“application/zip”：&lt;/p&gt;
&lt;p&gt;&lt;img src="http://pic.yupoo.com/leninlee/CRNkgaEK/medium.jpg" alt=""&gt;&lt;/p&gt;
&lt;p&gt;打开zip的属性对话框：&lt;/p&gt;
&lt;p&gt;&lt;img src="http://pic.yupoo.com/leninlee/CRNkfOsQ/medium.jpg" alt=""&gt;&lt;/p&gt;
&lt;p&gt;可以看到“Contents matching”这一块里，通过检查文件头部的几个字节是否为“PK\003\004”来判断，并且此项判断标准的优先级是40。下面所要做的，就是找到相应文件类型，添加一项条件相同的“Contents matching”，并把优先级设得大于40。&lt;/p&gt;</description></item><item><title>怎样为红帽系Linux发行版写系统服务脚本</title><link>http://0x3f.org/posts/how-to-write-service-scripts-for-redhat-distros/</link><pubDate>Tue, 19 Jun 2012 00:14:00 +0000</pubDate><guid>http://0x3f.org/posts/how-to-write-service-scripts-for-redhat-distros/</guid><description>&lt;p&gt;##阅读说明&lt;/p&gt;
&lt;p&gt;阅读本文要求有基本的Linux系统使用经验和Bash脚本编程能力。&lt;/p&gt;
&lt;p&gt;本文所述的内容适用于RHEL、CentOS等红帽系Linux发行版。&lt;/p&gt;
&lt;p&gt;##系统服务简介&lt;/p&gt;
&lt;p&gt;###常用命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;span class="lnt"&gt;19
&lt;/span&gt;&lt;span class="lnt"&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 启动MySQL&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;service mysqld start
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 关闭MySQL&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;service mysqld stop
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 重启MySQL&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;service mysqld restart
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 查看MySQL服务运行状态&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;service mysqld status
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 查看MySQL服务是否开机自动运行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chkconfig --list mysqld
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 设置MySQL服务开机自动运行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chkconfig --level &lt;span class="m"&gt;345&lt;/span&gt; mysqld on
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 取消MySQL服务开机自动运行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chkconfig --level &lt;span class="m"&gt;345&lt;/span&gt; mysqld off
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;###运行级别&lt;/p&gt;</description></item><item><title>禁止屏幕在播放视频时自动关闭</title><link>http://0x3f.org/posts/how-to-keep-monitor-active-while-watching-flv/</link><pubDate>Wed, 04 Apr 2012 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/how-to-keep-monitor-active-while-watching-flv/</guid><description>&lt;p&gt;貌似Lose系统下看在线视频的时候不会超时自动关闭屏幕，但是我在Arch下就一直晃鼠标、按键盘来著，这严重违反了DRY原则。于是昨天终于写了这个脚本，当全屏播放视频的时候，关闭屏保和显示器的节能特性，否则则激活它们。由于是在X的级别实现，理论上应当适合所有桌面环境。&lt;/p&gt;

```bash
#!/bin/bash
# Baby-sitter of the monitor's DPMS

idle_period=60
ss_switch_off=0
ss_is_off=0

while true; do
 # Read DPMS state
 xset -q|grep "DPMS is Disabled" &gt; /dev/null &amp;&amp; ss_is_off=1 || ss_is_off=0
 # Get pid of the current window
 active_window_id=`xprop -root | grep "_NET_ACTIVE_WINDOW(WINDOW)" | cut -d" " -f5`
 decimal_id=`xprop -id $active_window_id | grep PID | cut -d" " -f3`
 # Traverse all libflashplayer.so
 for pid in `ps -ef|grep -v grep|grep libflashplayer.so|awk '{print $2}'`; do
 # If the current window is libflashplayer.so
 if [ "$pid" -eq "$decimal_id" ]; then
 ss_switch_off=1
 break
 else
 ss_switch_off=0
 fi
 done
 if [ $ss_switch_off -eq 1 ]; then
 # Turn off DPMS
 echo Turn off DPMS
 if [ $ss_is_off -eq 0 ]; then
 echo Action
 xset s off
 xset -dpms
 fi
 else
 # Turn on DPMS
 echo Turn on DPMS
 if [ $ss_is_off -eq 1 ]; then
 echo Action
 xset +dpms
 xset s on
 fi
 fi
 sleep $idle_period
done
```

&lt;p&gt;似乎对非全屏播放的情况没有什么好方法。&lt;/p&gt;</description></item><item><title>Mac，江湖再见！</title><link>http://0x3f.org/posts/bye-mac/</link><pubDate>Mon, 12 Mar 2012 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/bye-mac/</guid><description>&lt;p&gt;零八年底，我用半年的差补收了当时Thinkpad X200顶配的FN3。三年的时间，几乎每天都要用很久，竟然从没掉过链子。虽说是这样，但毕竟用的强度大、时间长，屏幕已经远不如当初清晰，亮度也差了，即使调到最高亮度都觉著暗。&lt;/p&gt;

&lt;p&gt;于是打算趁著还能发挥余热，趁早处理掉，省得将来砸手里。&lt;/p&gt;

&lt;p&gt;既然要换，不如玩儿得折腾一点儿，于是小手一抖，Mac到手。&lt;/p&gt;

&lt;p&gt;我对Mac的OS只是有点小好奇，主要是奔著Mac的外观和做工去的，还是打算回头装Arch。玩儿了四个月，平心而论，Mac OS X确实是个不错的OS，美观程度无与伦比，结合Mac硬件的外观和做工，真是天作之合；易用性之高，确实让我有点小惊讶，多点触摸得心应手，软件安装一拖而就，相比之下，Windows显得拙劣不堪。&lt;/p&gt;

&lt;p&gt;如果只是作为办公和娱乐的工具，Mac可挑剔的地方确实不多。但是易用性往往和灵活性成反比，灵活性高意味著你可以随心所欲地制定自己的游戏规则，而易用性高则往往意味著你只能接受它的方式、认可它的价值观，易用并不代表顺手。&lt;/p&gt;

&lt;p&gt;除此之外就是软件资源的问题，Mac的免费软件相对很少，而且和Windows一样，需要先下载，再安装。虽然也有MacPorts、Homebrew，和Linux的软件仓库比起来还是差得太远。&lt;/p&gt;

&lt;p&gt;做惯了Archer，是可忍，孰不可忍。&lt;/p&gt;

&lt;p&gt;还是要装Arch。但是在制作安装介质这一步就遇著麻烦了，USB启动安装盘死活都不认，试了几种方法，无果。此外还有不少未知的问题，比如驱动等等。&lt;/p&gt;

&lt;p&gt;如果在几年前，在学校，有大把的时间可以糟蹋，我就跟丫死掐了。现在不行了，伤不起了。果断入手Thinkpad X220 A45，上周六把Mac出手了。&lt;/p&gt;

&lt;p&gt;小黑和Arch不愧是天作之合，比起当初在X200上装的时候还容易。只是小黑的多点触摸板啊，东施效颦，我想不到更贴切的词形容了，太TMD坑爹了！&lt;/p&gt;

&lt;p&gt;鉴于X200上4G内存被Chromium吃光光的苦逼经历，这次果断入手两根4G的三星金条，都是党的政策好啊，最近内存白菜价，两根金条才300粮票。&lt;/p&gt;

&lt;p&gt;从宣和八年秋十月到宣和九年春王三月，我的短暂的小白史告一段落，MacBook Pro MC700CH/A，江湖再见！&lt;/p&gt;

&lt;p&gt;Posted via &lt;a href="http://0x3f.org/posts/ultrablog-as-an-ultimate-vim-blogging-plugin/"&gt;UltraBlog.vim&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>登入XFCE后自动关闭蓝牙的方法</title><link>http://0x3f.org/posts/how-to-disable-bluetooth-after-login-to-xfce/</link><pubDate>Sat, 18 Feb 2012 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/how-to-disable-bluetooth-after-login-to-xfce/</guid><description>&lt;p&gt;Blueman不能记忆蓝牙的关闭状态，每次登入桌面都会自动打开蓝牙，既费电又不安全。&lt;/p&gt;

&lt;p&gt;一种方法是禁止bluetooth服务自动启动，缺点是使用蓝牙时不方便，还要手工启动bluetooth服务。&lt;/p&gt;

&lt;p&gt;另一种方法是登入桌面后自动关闭蓝牙，即使用如下命令：&lt;/p&gt;

```bash
sudo rfkill block bluetooth
```

&lt;p&gt;但XFCE不能定制自动启动程序的顺序，所以可以写下面这么个脚本，然后添加到自动启动程序列表中：&lt;/p&gt;

```bash
#!/bin/bash

blueman-applet &amp;
sleep 5
sudo rfkill block bluetooth
```

&lt;p&gt;当然，还要取消自动启动程序列表中原来的Blueman。&lt;/p&gt;

&lt;p&gt;Posted via &lt;a href="http://0x3f.org/posts/ultrablog-as-an-ultimate-vim-blogging-plugin/"&gt;UltraBlog.vim&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Double Commander: 免费、跨平台的Total Commander</title><link>http://0x3f.org/posts/double-commander/</link><pubDate>Wed, 31 Aug 2011 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/double-commander/</guid><description>&lt;p&gt;由于Total Commander很贵，在Windows下又是必不可少的，我一直希望能找到一个TC的免费替代品。试用过很多免费的文件管理器，但都不理想。偶然看到&lt;a href="http://doublecmd.sourceforge.net/"&gt;Double Commander&lt;/a&gt;，才发现这几乎完全就是我想要的。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://picasaweb.google.com/lh/photo/ioR_w9MmX81q_5a8xjUPsA?feat=embedwebsite"&gt;&lt;img src="https://lh4.googleusercontent.com/-gkI4K4m5SSM/Tl31NceNNhI/AAAAAAAABzs/3AigwSN7whI/s640/doublecmd_screenshot.png" height="360" width="640" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;特性&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;几乎完全模仿TC，甚至连插件的API都一致&lt;/li&gt;
&lt;li&gt;界面布局、样式高度可定制&lt;/li&gt;
&lt;li&gt;热键高度可定制&lt;/li&gt;
&lt;li&gt;开源、免费、跨平台&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;局限&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;功能相对TC少很多&lt;/li&gt;
&lt;li&gt;稳定性不是非常高&lt;/li&gt;
&lt;li&gt;运行速度稍嫌慢&lt;/li&gt;
&lt;li&gt;开发进度慢&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;小技巧&lt;/h2&gt;

&lt;h3&gt;热键设置&lt;/h3&gt;

&lt;p&gt;每个内置命令可以设置多个热键，每个热键可以指定参数，参数中可以使用环境变量，如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;a href="https://picasaweb.google.com/lh/photo/Z3jLMCGkoAbs1XC6yOhElg?feat=embedwebsite"&gt;&lt;img src="https://lh5.googleusercontent.com/-lFMDaSny_gw/Tl31OKrfhMI/AAAAAAAABzs/2XX44Go-3zc/s640/doublecmd_hotkey.png" height="417" width="640" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;针对命令&lt;code&gt;cm_ChangeDir&lt;/code&gt;设置了两个热键，其中，给&lt;strong&gt;Ctrl+Home&lt;/strong&gt;指定的参数是&lt;strong&gt;$HOME&lt;/strong&gt;，给&lt;strong&gt;Ctrl+Shift+Home&lt;/strong&gt;指定的参数是&lt;strong&gt;$HOME/Desktop&lt;/strong&gt;，即分别切换到当前用户的主目录和桌面目录。&lt;/p&gt;

&lt;h3&gt;自定义文件类型命令&lt;/h3&gt;

&lt;p&gt;可以为每种文件类型定义多个命令，这些自定义命令将显示为上下文菜单的“动作”菜单的子菜单项。如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;a href="https://picasaweb.google.com/lh/photo/m7mjk4g77XsMZw58ayJnEw?feat=embedwebsite"&gt;&lt;img src="https://lh5.googleusercontent.com/-4Z6LcQg9YIc/Tl31OqcRqKI/AAAAAAAABzs/wJjK8noUWM8/s400/doublecmd_filetype_command_01.png" height="400" width="376" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;定义了名称为“Archive”的文件类型，关联了一系列的文件后缀名。然后添加了一个名为“解压缩到当前目录”的动作，并指定所执行的命令为&lt;code&gt;urxvt -e aunpack %f&lt;/code&gt;。其中，&lt;strong&gt;%f&lt;/strong&gt;是一个占位符，代表当前文件的全名。DC预置了几个占位符，可以点击命令输入框右侧图标是加号的按钮选择。&lt;/p&gt;

&lt;p&gt;最终的效果如下：&lt;/p&gt;

&lt;p&gt;&lt;a href="https://picasaweb.google.com/lh/photo/mXYVL8uX1TNw0ENFur1PUQ?feat=embedwebsite"&gt;&lt;img src="https://lh6.googleusercontent.com/-smFkdYyLMHE/Tl31QAWMNXI/AAAAAAAABzs/hIBW-yVpBuQ/s400/doublecmd_filetype_command_02.png" height="236" width="400" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;解决日期时间乱码的问题&lt;/h3&gt;

&lt;p&gt;截至版本0.5.0 beta，如果设置了使用日期时间字符串的格式为“yyyy-mm-dd hh:mm:ss”，在&lt;strong&gt;zh_CN.UTF-8&lt;/strong&gt;的区域设置下，字符串中将出现乱码：&lt;/p&gt;

&lt;p&gt;&lt;a href="https://picasaweb.google.com/lh/photo/gMOlqF5DOQQ5otUEBon7lA?feat=embedwebsite"&gt;&lt;img src="https://lh6.googleusercontent.com/-LfvO5yBH_F0/Tl3_d13FCNI/AAAAAAAAB0A/MHApuvTvkSg/s400/doublecmd_datetime_illegle_char.png" height="400" width="168" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;临时解决办法是以英文区域设置启动doublecmd：&lt;/p&gt;

```bash
#!/bin/bash

export LC_ALL=en_US.UTF-8
doublecmd &amp;
```

&lt;p&gt;Posted via &lt;a href="http://0x3f.org/posts/ultrablog-as-an-ultimate-vim-blogging-plugin/"&gt;UltraBlog.vim&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Linux下双屏显示的设置</title><link>http://0x3f.org/posts/dualhead-display-on-linux/</link><pubDate>Thu, 04 Aug 2011 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/dualhead-display-on-linux/</guid><description>&lt;p&gt;RandR是对X11的一个扩展协议，允许在不重启X的情况下修改输出的一些参数并使之生效，xrandr是该协议的命令行界面，它的功能之一就是用来设置双屏显示。&lt;/p&gt;

&lt;p&gt;缺省情况下，外接显示器后启用的是屏幕复制模式，即两个屏幕显示完全相同的内容。使用命令&lt;code&gt;xrandr -q&lt;/code&gt;查看当前的输出状态：&lt;/p&gt;

&lt;blockquote&gt;
 &lt;p&gt;Screen 0: minimum 320 x 200, current 1920 x 1080, maximum 8192 x 8192
 LVDS1 connected 1280x800+0+0 (normal left inverted right x axis y axis) 261mm x 163mm
 1280x800 60.0&lt;em&gt;+ 60.0 50.0 &lt;br /&gt;
 1024x768 75.1 70.1 60.0 &lt;br /&gt;
 800x600 72.2 75.0 60.3 56.2 &lt;br /&gt;
 768x576 75.0 72.0 60.0 &lt;br /&gt;
 640x480 72.8 75.0 60.0 59.9 &lt;br /&gt;
 VGA1 connected 1920x1080+0+0 (normal left inverted right x axis y axis) 509mm x 286mm
 1920x1080 60.0&lt;/em&gt;+
 1680x1050 60.0 &lt;br /&gt;
 1280x1024 75.0 60.0 &lt;br /&gt;
 1440x900 59.9 &lt;br /&gt;
 1280x960 60.0 &lt;br /&gt;
 1024x768 75.1 70.1 60.0 &lt;br /&gt;
 832x624 74.6 &lt;br /&gt;
 800x600 72.2 75.0 60.3 56.2 &lt;br /&gt;
 640x480 72.8 75.0 66.7 60.0 &lt;br /&gt;
 720x400 70.1 &lt;br /&gt;
 HDMI1 disconnected (normal left inverted right x axis y axis)
 DP1 disconnected (normal left inverted right x axis y axis)
 HDMI2 disconnected (normal left inverted right x axis y axis)
 DP2 disconnected (normal left inverted right x axis y axis)
 DP3 disconnected (normal left inverted right x axis y axis)&lt;/p&gt;</description></item><item><title>使用PAC Manager管理SSH连接</title><link>http://0x3f.org/posts/manage-ssh-connections-using-pac-manager/</link><pubDate>Thu, 14 Jul 2011 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/manage-ssh-connections-using-pac-manager/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;本文发表在今年一月份的『Linuxpilot』上，已经过了半年，可以放到博客上了。本文基于PAC 2.x版，最近PAC发布了3.0版，界面和功能都有一定的变化。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;简介&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://pacmanager.sourceforge.net"&gt;PAC Manager&lt;/a&gt;（以下简称PAC）是一个使用Perl编程语言和GTK图形界面开发套件实现的SSH/Telnet/Serial连接管理工具，是同类的PuTTY、SecureCRT、SSHMenu的一个开源、免费的替代品。&lt;/p&gt;

&lt;h2&gt;具备哪些特性&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;可创建本地端口转发、远程端口转发和动态端口转发，并支持X图形界面转发&lt;/li&gt;
&lt;li&gt;对连接分组，方便管理较多连接&lt;/li&gt;
&lt;li&gt;将指定的、已打开的连接加入集群，同一集群的所有终端共享键盘输入&lt;/li&gt;
&lt;li&gt;虚拟终端窗口支持多标签&lt;/li&gt;
&lt;li&gt;虚拟终端窗口的样式可定制，支持半透明&lt;/li&gt;
&lt;li&gt;支持通过代理服务器建立连接&lt;/li&gt;
&lt;li&gt;支持通过Expect表达式进行自动交互&lt;/li&gt;
&lt;li&gt;支持使用本地和远程宏管理数量众多且复杂的常用指令&lt;/li&gt;
&lt;li&gt;支持定制连接前和断开后自动执行的指令&lt;/li&gt;
&lt;li&gt;为每个连接保存截图&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;针对重要特性的细解&lt;/h2&gt;

&lt;h3&gt;创建SSH隧道&lt;/h3&gt;

&lt;p&gt;假如当我们在进行诸如收发电邮、使用即时通讯工具聊天或者使用网络银行等网络通讯行为时，也许有些重要的数据我们不希望被明文传递；亦或某些资源受限于网络结构和防火墙等因素而不能被我们直接访问，这时我们往往就可以通过SSH的端口转发功能来实现。&lt;/p&gt;

&lt;p&gt;所谓端口转发，即是指将原本使用其它TCP端口访问的数据经由SSH连接占用的端口发送，加之这一过程也伴随有数据的加密和解密，因此也往往被称作“隧道”。根据连接方向的不同，SSH的隧道一般分为三种，即正向隧道、反向隧道和动态隧道；同时，根据端口转发方式的不同，这三种隧道又分别被称为本地端口转发、远程端口转发与动态端口转发。&lt;/p&gt;

&lt;p&gt;那么这三种端口转发方式彼此之间有什么异同，分别又都有什么用途呢？这里举个例子来说明一下。&lt;/p&gt;

&lt;p&gt;假设我的公司有一个较大的内部网络，而只有一台服务器作为网关对公网提供服务。如果我需要在家里的个人电脑上访问公司的办公系统，而这套系统又部署在内部网络中的一台服务器上、不能被公网访问，该怎么办呢？&lt;/p&gt;

&lt;p&gt;第一种情况，假设网关服务器对外提供了SSH服务，那么我就可以在家庭电脑上使用如下指令建立一个隧道：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ssh -L 9999:192.168.1.128:80 111.111.111.111&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;这条指令中，192.168.1.128是公司办公系统服务器在内网中的IP地址，111.111.111.111是公司网关服务器的公网IP地址。整条指令的意思是：我在家庭电脑中访问本机的9999端口，就如同我在IP地址为111.111.111.111的公司网关服务器上访问IP地址为192.168.1.128的主机的80端口一样。因此，当这条指令执行成功后，我就可以在家庭电脑中通过访问9999端口来打开公司内部办公系统了。&lt;/p&gt;

&lt;p&gt;第二种情况，假设网关服务器不对外提供SSH服务但安装了SSH客户端，而我的家庭电脑却安装了SSH服务，那么我就可以在公司网关服务器上执行如下指令建立一个隧道：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ssh -R 9999:192.168.1.128:80 222.222.222.222&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;这条指令中，222.222.222.222是家庭电脑的公网IP地址。整条指令的意思是：我在公网IP地址为222.222.222.222的电脑上访问9999端口，就如同在本机（公司网关服务器）上访问IP地址为192.168.1.128的主机的80端口一样。当我回到家中，就可以和前面一样通过访问9999端口来打开办公系统了。&lt;/p&gt;

&lt;p&gt;事实上，第一种情况是将本地端口映射为远程主机所能访问的资源，故称为本地端口转发；而第二种情况是将远程主机的端口映射为本机所能访问的资源，故称为远程端口转发。&lt;/p&gt;

&lt;p&gt;但无论是本地端口转发还是远程端口转发，都只能将一个资源转发到一个端口上，假若我要访问很多资源，岂非要建立很多SSH隧道，不但操作麻烦，而且浪费本机资源。这时，我们就可以使用第三种端口转发方式--动态端口转发：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ssh -D 9999 111.111.111.111&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;这条指令的意思是：我在本机访问9999端口，就像在IP地址为111.111.111.111的主机上访问它所能访问的某些资源一样。这个所谓的“某些资源”，需要由我在发起访问请求时通过SSH隧道告诉远程主机，事实上，SSH的动态端口转发就是创建了一个SOCKS代理服务器。&lt;/p&gt;

&lt;p&gt;在PAC Manager中，我们可以在每个SSH连接的配置界面创建隧道。对于上面的例子，创建本地端口转发时，应点击“Local Port Forwarding”区域的“Add”按钮，并将本地端口、远程资源IP地址和端口分别填写到“Local Port”、“Remote Address”和“Remote Port”中：&lt;/p&gt;

&lt;p&gt;&lt;a href="https://picasaweb.google.com/lh/photo/Gfzyo3h4hUrTUxA4YIlRuw?feat=embedwebsite"&gt;&lt;img src="https://lh3.googleusercontent.com/--l0NMNEs-Qs/Th70Q2lplvI/AAAAAAAABxo/EDBIPjRL0nY/s640/pac_manager_introduction-tunnel_01.png" height="166" width="640" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;截至当前最新的版本（2.4.1.3），PAC Manager尚未为远程端口转发提供像本地端口转发功能一样单独的配置界面，但可以使用高级选项功能实现。在“Advanced Options”输入框中填写如下内容：&lt;/p&gt;

&lt;p&gt;&lt;a href="https://picasaweb.google.com/lh/photo/fru1uaGuVQ57mXRBiFRMeA?feat=embedwebsite"&gt;&lt;img src="https://lh6.googleusercontent.com/-iFwTWK2ZL4M/Th70Q7NcE6I/AAAAAAAABxs/pTEh2LGkwV8/s640/pac_manager_introduction-tunnel_03.png" height="31" width="640" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;如果需要建立多个远程端口转发，可以在“Advanced Options”中填写多个类似上面内容的选项，彼此之间使用空格分隔即可。&lt;/p&gt;

&lt;p&gt;创建动态端口转发时，应选中“Dynamic Port Forwarding”区域前面的复选框，然后填写“Forwarded SOCKS Port”即可：&lt;/p&gt;

&lt;p&gt;&lt;a href="https://picasaweb.google.com/lh/photo/hnRb67QlipzpHb_IaeyYiw?feat=embedwebsite"&gt;&lt;img src="https://lh3.googleusercontent.com/-JHN7-EI7pjc/Th70QhAOCUI/AAAAAAAABxk/4D2e1SpcS-U/s640/pac_manager_introduction-tunnel_02.png" height="55" width="640" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;连接前及断开后的自动指令&lt;/h3&gt;

&lt;p&gt;通过在PAC Manager中定义连接前和断开后的自动指令，我们可以指定一些在相应的SSH连接建立之前及断开之后通常要在本机执行的指令。&lt;/p&gt;

&lt;p&gt;例如假设我使用的是计时收费的网络服务，为了节省资费，我希望只在每次建立SSH连接时才激活网络服务，并且在完成工作后断开SSH连接时自动断开网络服务。那么就可以在“Pre Exec”中定义激活网络服务的指令，如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;a href="https://picasaweb.google.com/lh/photo/_P1JaaI5sF8gDTMulaljVA?feat=embedwebsite"&gt;&lt;img src="https://lh6.googleusercontent.com/-nPz5VHhK0vk/Th70MQLOVOI/AAAAAAAABxM/Q-mwNmyxzOo/s640/pac_manager_introduction-exec_01.png" height="136" width="640" /&gt;&lt;/a&gt;&lt;/p&gt;</description></item><item><title>ack: grep的同类替代品</title><link>http://0x3f.org/posts/use-ack-as-an-alternative-to-grep/</link><pubDate>Mon, 09 May 2011 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/use-ack-as-an-alternative-to-grep/</guid><description>&lt;p&gt;&lt;a href="http://betterthangrep.com"&gt;ack&lt;/a&gt;是一个perl脚本，是grep的一个可选替换。&lt;/p&gt;

&lt;p&gt;有以下优势：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;为程序员设计，使用方便，输入较少
&lt;ul&gt;
&lt;li&gt;默认递归搜索&lt;/li&gt;
&lt;li&gt;缺省提供多种文件类型供选，文件类型对应的后缀名可修改&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;使用perl的正则表达式，而grep只支持其一个子集&lt;/li&gt;
&lt;li&gt;搜索结果高亮输出&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;很多人以讹传讹，使人容易对ack的搜索速度产生误解。ack的官方宣传中说比grep快，其前提是ack可方便地针对部分后缀的文件进行搜索，而grep默认对所有文件搜索。ack的官方文档中明确指出，在对大量文件进行搜索时，grep的速度还是最快的。&lt;/p&gt;

&lt;h2&gt;~/.ackrc&lt;/h2&gt;

&lt;p&gt;使用此配置文件存储ack的常用选项。&lt;/p&gt;

&lt;blockquote&gt;
 &lt;p&gt;-i
 --type-add
 php=.lib&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;如上所示，该文件中每一行应该是ack命令行参数中用空格分隔的一个部分。&lt;/p&gt;

&lt;h2&gt;例子&lt;/h2&gt;

&lt;p&gt;如果搜索的关键词是正则表达式，在Linux下必须将其用双引号包围起来。&lt;/p&gt;

&lt;p&gt;如：&lt;/p&gt;

```bash
ack "gbldb\s*="
```

&lt;h2&gt;Windows下的安装&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;安装&lt;a href="http://strawberryperl.com"&gt;strawberryperl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;保存&lt;a href="http://betterthangrep.com/ack-standalone"&gt;ack.pl&lt;/a&gt;到&lt;em&gt;C:\bin&lt;/em&gt;&lt;/li&gt;
```dos
@echo off
perl.exe c:/bin/ack.pl %*
```
&lt;li&gt;将&lt;em&gt;C:\bin&lt;/em&gt;加入环境变量&lt;strong&gt;%PATH%&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;资源&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.vim.org/scripts/script.php?script_id=2572"&gt;ack.vim&lt;/a&gt;: Vim使用ack的辅助扩展&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Posted via &lt;a href="http://0x3f.org/posts/ultrablog-as-an-ultimate-vim-blogging-plugin/"&gt;UltraBlog.vim&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>GNOME 3 Launch Party</title><link>http://0x3f.org/posts/gnome3-launch-party/</link><pubDate>Sat, 09 Apr 2011 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/gnome3-launch-party/</guid><description>&lt;p&gt;在保福寺桥南下了车我就迷失了，作为一个G7er，问路太跌份，于是自信满满地祭出G7，结果Google导航很淡定地告诉我──您所在的区域不支持导航！有木有搞错，有木有，有木有，有木有啊！最后在3G、GPS、电子指南针全开的情况下，跟著Google地图上的小箭头在中关村南街、中关村三街流窜了半个小时，后来我才知道，我规则地绕中科院研究生院做了一次顺时针圆周运动。&lt;/p&gt;

&lt;p&gt;好吧，我最后还是人肉到目的地的，感谢给我指路的朋友，他让我终于找到了那条隐藏地很深的小路，你敢隐藏得再深一点吗？！&lt;/p&gt;

&lt;p&gt;有时侯这个世界真的很给力，当我比原定时间晚半个多钟头到达会场的时候，他们居然还没有开始！&lt;/p&gt;

&lt;p&gt;爱美丽宣布开会：&lt;/p&gt;

&lt;p&gt;&lt;a href="https://picasaweb.google.com/lh/photo/MBRi_eVDmFJ4jzfOMIq-YQ?feat=embedwebsite"&gt;&lt;img src="https://lh3.googleusercontent.com/_ceUJ_lBTHzc/TaBbMJwy5MI/AAAAAAAABoo/lIaHTDG2iVA/s400/C360_2011-04-09%2014-24-03.jpg" height="300" width="400" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;程大龙介绍GNOME 3：&lt;/p&gt;

&lt;p&gt;&lt;a href="https://picasaweb.google.com/lh/photo/Hh7BSY-1iIYZoP-PyK_SbA?feat=embedwebsite"&gt;&lt;img src="https://lh6.googleusercontent.com/_ceUJ_lBTHzc/TaBbNKxxCrI/AAAAAAAABoc/-gYdCmNOF8k/s400/C360_2011-04-09%2014-59-44.jpg" height="300" width="400" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这小哥儿原来是北航的，后生可畏啊，当初我开始玩儿Linux的时候他刚脱离李雷和韩梅梅吧。&lt;/p&gt;

&lt;p&gt;来一张火爆的：&lt;/p&gt;

&lt;p&gt;&lt;a href="https://picasaweb.google.com/lh/photo/8_v2QCOBajRfOlxI92AL3Q?feat=embedwebsite"&gt;&lt;img src="https://lh4.googleusercontent.com/_ceUJ_lBTHzc/TaBbO4X4PcI/AAAAAAAABok/9mgCyktfICk/s400/C360_2011-04-09%2016-29-59.jpg" height="300" width="400" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;今天最意外的亮点就是这个什么××××协会的西班牙舞了，开始、中间和结束的时候各来了一段，俺们红小兵也看不懂，就是感觉很劲爆，反正只要是不规则的事物我都喜欢。&lt;/p&gt;

&lt;p&gt;其它的，两岸三地的视频会议很失败，搞个高速VPN不行吗？瞻仰了传说中的Vincent，小哥儿比我还胖，我很欣慰。在Twitter上看到了&lt;a href="http://blog.linjian.org/"&gt;林健&lt;/a&gt;桑拍的热舞照片，感觉他坐得离我不远，把坐我前面的都遍历了一遍却没找到，谁知道居然在我后面。&lt;/p&gt;

&lt;p&gt;Posted via &lt;a href="http://0x3f.org/posts/ultrablog-as-an-ultimate-vim-blogging-plugin/"&gt;UltraBlog.vim&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Dokan SSHFS：Windows下通过SSH挂载Linux主机为本地分区</title><link>http://0x3f.org/posts/mount-linux-dirs-as-windows-local-partitions/</link><pubDate>Thu, 20 Jan 2011 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/mount-linux-dirs-as-windows-local-partitions/</guid><description>&lt;p&gt;Linux一般使用Samba向Windows共享资源。另一个办法就是使用SSH。&lt;/p&gt;

&lt;p&gt;&lt;a href="http://dokan-dev.net/en/"&gt;Dokan&lt;/a&gt;是一个为Windows提供实现新文件系统的开发库，而&lt;a href="http://dokan-dev.net/en/download/#sshfs"&gt;Dokan SSHFS&lt;/a&gt;是在此基础上实现的挂载SSH通道为本地分区的文件系统。必须先安装Dokan，然后再安装Dokan SSHFS。&lt;/p&gt;

&lt;p&gt;&lt;a href="http://picasaweb.google.com/lh/photo/d6J9vTU8cvK2KEplEo0ZaQ?feat=embedwebsite"&gt;&lt;img src="http://lh4.ggpht.com/_ceUJ_lBTHzc/TThWJn7FrzI/AAAAAAAABic/Et7kroeInF8/s400/sshfs.png" height="338" width="400" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;如果从安装SSH服务做起，步骤是：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;在Linux主机上安装openssh&lt;/li&gt;
&lt;li&gt;修改Linux主机的&lt;strong&gt;/etc/hosts.allow&lt;/strong&gt;，加入&lt;code&gt;sshd: ALL&lt;/code&gt;，以允许外部访问&lt;/li&gt;
&lt;li&gt;启动sshd守护进程&lt;/li&gt;
&lt;li&gt;在Windows主机上安装Dokan和Dokan SSHFS&lt;/li&gt;
&lt;li&gt;通过SSHFS的图形配置工具挂载SSH通道&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这种方式的好处是简单，但是存在安全隐患，不管怎样，公布SSH连接绝非好事，这意味著接入用户可以远程控制Linux主机，尤其是当SSH账户的权限较高时。因此，这种方式只适用于虚拟机或家庭网络，例如对Host-Guests共享支持不佳的KVM虚拟机来说就是个好的选择。即便如此，也要注意相应的Windows主机的安全防范，否则，入侵者可以通过Windows主机做跳板来进入Linux主机。&lt;/p&gt;</description></item><item><title>darkstat: 网络流量监测工具</title><link>http://0x3f.org/posts/darkstat-as-a-network-discharge-meter/</link><pubDate>Sun, 26 Dec 2010 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/darkstat-as-a-network-discharge-meter/</guid><description>&lt;p&gt;&lt;a href="http://dmr.ath.cx/net/darkstat/"&gt;darkstat&lt;/a&gt;是一个跨平台的网络流量监测工具，可显示最大一个月内操作系统的各项网络流量指标。&lt;/p&gt;
&lt;p&gt;具有以下特性：&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;以守护进程方式运行，提供Web用户界面，零配置，易于使用&lt;/li&gt;
	&lt;li&gt;可显示较为详细的网络流量指标&lt;/li&gt;
	&lt;li&gt;性能表现好，占用资源少&lt;/li&gt;
	&lt;li&gt;跨平台，支持多个UNIX、类UNIX操作系统，并有非官方的Windows移植版&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;具有以下不足：&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;功能较为简单，以易用性换灵活性&lt;/li&gt;
	&lt;li&gt;日志记录功能比较单薄，需要编写辅助脚本并设置定时任务&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;darkstat启动时需要手工指定监视的网络接口，因此需要用根权限启动：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo darkstat -i eth0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;darkstat默认使用&lt;strong&gt;667&lt;/strong&gt;端口提供Web访问，可以用&lt;strong&gt;-p&lt;/strong&gt;参数指定端口：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo darkstat -i eth0 -p &lt;span class="m"&gt;8080&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;darkstat的Web用户界面分为Graph、Hosts和Host三部分。Graph是缺省主页，用于显示最近一分钟、一小时、一天和一个月的流量统计直方图，将光标置于任何一个直方条上可查看对应时刻的流量指标：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://picasaweb.google.com/lh/photo/NAB3_2TtnezdM45HoNd5pQ?feat=embedwebsite"&gt;&lt;img src="http://lh4.ggpht.com/_ceUJ_lBTHzc/TRcCUWqnF0I/AAAAAAAABhs/wLRQb3rvHW8/s400/darkstat-graphs.png" height="400" width="395" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hosts界面按主机显示各自的流量统计指标的值：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://picasaweb.google.com/lh/photo/kG1J2j2eecaLUnhDL-fArA?feat=embedwebsite"&gt;&lt;img src="http://lh4.ggpht.com/_ceUJ_lBTHzc/TRcCUXxnsMI/AAAAAAAABhw/ri5OsbqPdmc/s400/darkstat-hosts.png" height="322" width="400" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;单击Hosts界面上的IP进入对应主机的Host界面，此界面按TCP/UDP类型显示对应的主机的各端口的网络流量指标的值：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://picasaweb.google.com/lh/photo/XBNQWty4lp63OWwyAFm_BA?feat=embedwebsite"&gt;&lt;img src="http://lh3.ggpht.com/_ceUJ_lBTHzc/TRcCUn6lg_I/AAAAAAAABh0/6Aj0hArzIYk/s800/darkstat-host.png" height="800" width="190" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;可通过如下命令查看占用指定端口的进程：&lt;/p&gt;
&lt;blockquote&gt;
[lenin@archer ~]$ lsof -i tcp:58062 -n
COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME
mlnet 18660 lenin 74u IPv4 251788 0t0 TCP 192.168.1.3:58062-&gt;122.116.212.89:http (ESTABLISHED)
&lt;/blockquote&gt;
&lt;p&gt;darkstat区别于其它流量监测工具的最大的优点就是简单易用，非常适合对流量监测应用不复杂的场景。前段时间公司的一台RHEL服务器因为流量过大多次被网管拔线，后来用darkstat监测到大部分流量被几个UDP端口占去，进而发现原来是服务器被入侵并被安装了一个扫描器&lt;a href="http://code.google.com/p/sipvicious/"&gt;SIPVicious&lt;/a&gt;。&lt;/p&gt;</description></item><item><title>Linux的内存使用机制</title><link>http://0x3f.org/posts/linux-memory-usage/</link><pubDate>Fri, 24 Dec 2010 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/linux-memory-usage/</guid><description>&lt;p&gt;在top中，内存使用情况显示为如下格式：&lt;/p&gt;
&lt;blockquote&gt;
Mem: 3056828k total, 2624472k used, 432356k free, 185196k buffers
Swap: 2096476k total, 0k used, 2096476k free, 1613592k cached
&lt;/blockquote&gt;
&lt;p&gt;根据内存的使用情况，将内存空间划分为四种类型：已使用（used），未使用（free），缓冲区（buffers）和已缓存（cached）。&lt;/p&gt;
&lt;p&gt;“已使用”是指目前正被使用的活跃的内存区域。“未使用”是指当前空闲的内存区域。“缓冲区”是用于存放即将写入存储介质的数据的区域。“已缓存”是指曾因需要而被读入内存、但目前已不被使用的数据。Linux通常会在资源使用完毕后保留一部分数据在内存中而不全部释放，这就是“已缓存”区域，这样当这些数据再次被使用时，系统就可以直接从内存中读取。而“缓冲区”用于将对存储介质的写操作集中进行。因此，“缓冲区”和“已缓存”特性对减少存储介质IO和加速系统运行都具有非常重要的作用。&lt;/p&gt;
&lt;p&gt;所以，Linux运行一段时间后，通常看起来空闲内存都很小，其实是因为很大一部分被用作“已缓存”区域，这部分内存会在内存资源紧张时被自动释放，也可以通过如下命令手工释放：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &amp;gt; /proc/sys/vm/drop_caches
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description></item><item><title>开启自定义GTK程序菜单快捷键的方法</title><link>http://0x3f.org/posts/howto-enable-hotkey-for-gtk-menus/</link><pubDate>Sat, 04 Dec 2010 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/howto-enable-hotkey-for-gtk-menus/</guid><description>&lt;p&gt;基于GTK的程序菜单本身支持通过在焦点所在的菜单项上按下组合键来定义该菜单项的快捷键，但默认并不开启。&lt;/p&gt;
&lt;p&gt;一般来说，对于支持X的会话管理的桌面环境，可以通过修改相应的设置来开启这个功能：&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;GNOME中该设置项所在的路径是：主选单 &gt; 桌面 &gt; 偏好设定 &gt; 选单及功具列 &gt; 可编辑选单捷径键&lt;/li&gt;
	&lt;li&gt;XFCE中该设置项所在的路径是：主选单 &gt; 设置 &gt; 外观 &gt; 设置 &gt; 开启可编辑快捷键&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对于不支持会话管理的桌面环境，可在~/.gtkrc-2.0中添加如下配置内容：&lt;/p&gt;
&lt;blockquote&gt;
gtk-can-change-accels = 1
&lt;/blockquote&gt;</description></item><item><title>screen曰：$TERM too long - sorry.</title><link>http://0x3f.org/posts/screen-is-sorry-for-term-being-too-long/</link><pubDate>Wed, 01 Dec 2010 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/screen-is-sorry-for-term-being-too-long/</guid><description>&lt;p&gt;最近rxvt-unicode-256color的一次更新触发了screen的一个缺陷。新的版本将默认的环境变量$TERM由rxvt-256color改成了rxvt-unicode-256color，这导致在rxvt中启动screen时报这样的错误：&lt;/p&gt;
&lt;blockquote&gt;
$TERM too long - sorry.
&lt;/blockquote&gt;
&lt;p&gt;虽然可以在.Xdefaults中指定$TERM的值，但是&lt;a href="https://aur.archlinux.org/packages.php?ID=13060"&gt;据说&lt;/a&gt;这样会导致rxvt加载错误的terminfo，并导致终端的颜色由256色降低到88色。另外虽然按照同样的说法，可以在screenrc中设置$TERM的值，但是不知道是我写的格式不对还是什么原因，无效。&lt;/p&gt;
&lt;p&gt;最终还是设了个别名：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# vi ~/.bashrc&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;screenx&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;export TERM=screen-256color &amp;amp;&amp;amp; screen&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description></item><item><title>Oxygen Refit：适用于xfce的Oxygen图标集</title><link>http://0x3f.org/posts/oxygen-iconset-fit-for-xfce/</link><pubDate>Mon, 29 Nov 2010 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/oxygen-iconset-fit-for-xfce/</guid><description>&lt;p&gt;Oxygen是KDE桌面环境中的一套著名的图标集，但是据说基于GTK的桌面环境如GNOME、XFCE等对其支持得不好，我这里在GNOME下倒没发现问题，不过在XFCE下文件夹的图标显示的是缺省的图标，不好看。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://gnome-look.org/content/show.php/Oxygen+Refit+2?content=79756"&gt;Oxygen Refit&lt;/a&gt;是针对GTK的桌面环境修改的Oxygen图标集，在XFCE下可以正常显示，但是缺点是最大分辨率只有48×48，不能显示较大的高清图标。Archlinux下可以安装AUR中的&lt;a href="http://aur.archlinux.org/packages.php?ID=18673"&gt;oxygenrefit2-icon-theme&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://picasaweb.google.com/lh/photo/cURosgqNAesp47LgLj4LpA?feat=embedwebsite"&gt;&lt;img src="http://lh5.ggpht.com/_ceUJ_lBTHzc/TPJ4grT0drI/AAAAAAAABf0/R22H_Nv6kbA/s400/2010-11-28.23%3A33%3A01.-usr-share-icons-oxygen-256x256-places%20%28%E9%A1%AF%E7%A4%BA%E7%B8%AE%E5%9C%96%29%20.01.png" height="249" width="400" /&gt;&lt;/a&gt;&lt;/p&gt;</description></item><item><title>调整Arch的磁盘分区</title><link>http://0x3f.org/posts/adjust-disk-partitions-in-archlinux/</link><pubDate>Sat, 13 Nov 2010 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/adjust-disk-partitions-in-archlinux/</guid><description>&lt;p&gt;&lt;h2&gt;简述&lt;/h2&gt;&lt;/p&gt;

&lt;p&gt;目标：移除Windows 7，整块硬盘完全分配给Archlinux。&lt;/p&gt;

&lt;p&gt;原分区结构：&lt;/p&gt;

&lt;p&gt;
&lt;table class="art_tbl"&gt;
&lt;tr&gt;&lt;th class="art_tbl_th"&gt;分区&lt;/th&gt;&lt;th class="art_tbl_th"&gt;类型&lt;/th&gt;&lt;th class="art_tbl_th"&gt;挂载&lt;/th&gt;&lt;th class="art_tbl_th"&gt;文件系统&lt;/th&gt;&lt;th class="art_tbl_th"&gt;容量&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="art_tbl_td"&gt;/dev/sda1&lt;/td&gt;&lt;td class="art_tbl_td"&gt;主分区，启动分区&lt;/td&gt;&lt;td class="art_tbl_td"&gt;Windows 7的安装分区&lt;/td&gt;&lt;td class="art_tbl_td"&gt;ntfs&lt;/td&gt;&lt;td class="art_tbl_td"&gt;30G&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="art_tbl_td"&gt;/dev/sda2&lt;/td&gt;&lt;td class="art_tbl_td"&gt;扩展分区&lt;/td&gt;&lt;td class="art_tbl_td"&gt;-&lt;/td&gt;&lt;td class="art_tbl_td"&gt;-&lt;/td&gt;&lt;td class="art_tbl_td"&gt;-&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="art_tbl_td"&gt;/dev/sda5&lt;/td&gt;&lt;td class="art_tbl_td"&gt;逻辑分区&lt;/td&gt;&lt;td class="art_tbl_td"&gt;Windows的D盘&lt;/td&gt;&lt;td class="art_tbl_td"&gt;ntfs&lt;/td&gt;&lt;td class="art_tbl_td"&gt;40G&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="art_tbl_td"&gt;/dev/sda3&lt;/td&gt;&lt;td class="art_tbl_td"&gt;主分区&lt;/td&gt;&lt;td class="art_tbl_td"&gt;/&lt;/td&gt;&lt;td class="art_tbl_td"&gt;ext3&lt;/td&gt;&lt;td class="art_tbl_td"&gt;78G&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="art_tbl_td"&gt;/dev/sda4&lt;/td&gt;&lt;td class="art_tbl_td"&gt;交换分区&lt;/td&gt;&lt;td class="art_tbl_td"&gt;swap&lt;/td&gt;&lt;td class="art_tbl_td"&gt;-&lt;/td&gt;&lt;td class="art_tbl_td"&gt;2G&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;/p&gt;

&lt;p&gt;调整后分区结构：&lt;/p&gt;

&lt;p&gt;
&lt;table class="art_tbl"&gt;
&lt;tr&gt;&lt;th class="art_tbl_th"&gt;分区&lt;/th&gt;&lt;th class="art_tbl_th"&gt;类型&lt;/th&gt;&lt;th class="art_tbl_th"&gt;挂载&lt;/th&gt;&lt;th class="art_tbl_th"&gt;文件系统&lt;/th&gt;&lt;th class="art_tbl_th"&gt;容量&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="art_tbl_td"&gt;/dev/sda1&lt;/td&gt;&lt;td class="art_tbl_td"&gt;主分区，启动分区&lt;/td&gt;&lt;td class="art_tbl_td"&gt;/&lt;/td&gt;&lt;td class="art_tbl_td"&gt;ext3&lt;/td&gt;&lt;td class="art_tbl_td"&gt;30G&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="art_tbl_td"&gt;/dev/sda2&lt;/td&gt;&lt;td class="art_tbl_td"&gt;主分区&lt;/td&gt;&lt;td class="art_tbl_td"&gt;/home&lt;/td&gt;&lt;td class="art_tbl_td"&gt;ext3&lt;/td&gt;&lt;td class="art_tbl_td"&gt;120G&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="art_tbl_td"&gt;/dev/sda3&lt;/td&gt;&lt;td class="art_tbl_td"&gt;交换分区&lt;/td&gt;&lt;td class="art_tbl_td"&gt;swap&lt;/td&gt;&lt;td class="art_tbl_td"&gt;-&lt;/td&gt;&lt;td class="art_tbl_td"&gt;2G&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;/p&gt;

&lt;p&gt;&lt;h2&gt;步骤&lt;/h2&gt;&lt;/p&gt;

&lt;ol&gt;
```bash
sudo grub-install /dev/sda
```
```bash
sudo vi /boot/grub/menu.lst
```
# (2) Arch Linux
title Arch Linux
root (hd0,0)
kernel /boot/vmlinuz26 root=/dev/sda1 resume=/dev/sda4 ro acpi_osi="Linux"
initrd /boot/kernel26.img
&lt;/blockquote&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href="http://0x3f.org/?p=1699"&gt;安装U盘启动的Puppy Linux&lt;/a&gt;&lt;/li&gt;
```bash
mkfs.ext3 /dev/sda1
```
```bash
# 先点击桌面上sda1和sda3的盘符，使之被挂载到/mnt下

cd /mnt/sda3
cp -a * /mnt/sda1
```
```bash
vi /mnt/sda1/etc/fstab
```
# 修改必要的挂载点，如将根目录的挂载点由sda3改为sda1：
/dev/sda1 / ext3 defaults,noatime 0 1
&lt;/blockquote&gt;&lt;/li&gt;
 &lt;li&gt;重启系统，并引导到新分区上的系统中&lt;/li&gt;
```bash
sudo grub-install /dev/sda
```
 &lt;li&gt;重启并进入Puppy，使用gparted删除除sda1以外的所有分区，然后在空闲的空间上创建ext3格式的主分区sda2和交换分区sda3&lt;/li&gt;
```bash
cp -a /mnt/sda1/home/* /mnt/sda2
rm -rf /mnt/sda1/home/*
```
```bash
vi /mnt/sda1/etc/fstab
```
# 将fstab中磁盘分区的挂载点配置为如下内容
/dev/sda1 / ext3 defaults,noatime 0 1
/dev/sda2 /home ext3 defaults,noatime 1 2
/dev/sda3 swap swap defaults 0 0
```bash
vi /mnt/boot/grub/menu.lst
```
# 将原来启动项中的sda3修改为sda1，由于配置过休眠，也将resume参数中的sda4改为sda3，即交换分区
&lt;/blockquote&gt;
 &lt;li&gt;重启系统&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;h2&gt;后记&lt;/h2&gt;&lt;/p&gt;</description></item><item><title>制作Puppy Linux的启动U盘</title><link>http://0x3f.org/posts/howto-create-bootable-udisk-for-puppylinux/</link><pubDate>Thu, 11 Nov 2010 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/howto-create-bootable-udisk-for-puppylinux/</guid><description>&lt;p&gt;Puppy Linux的体积只有一百多兆字节，但图形界面实现得很完备，也包含了很多短小精悍的工具，安装和使用都很方便，非常适合用来做日常维护工具盘。&lt;/p&gt;
&lt;p&gt;Puppy自带了傻瓜式的启动U盘制作工具，但官方只提供整个发行版的ISO镜像下载，通常需要刻录成光盘并引导系统启动后才可以继续将Puppy安装到U盘。其实也可以不刻录光盘，而是把Puppy安装到硬盘上。&lt;/p&gt;
&lt;p&gt;Puppy本身封装得很好，对软硬件环境的要求不高，完全可以安装到一个独立的目录中而不影响其它操作系统。本文基于Linux环境下通过GRUB引导的前提，Windows下应该可以通过GRUB4DOS引导。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;挂载Puppy的ISO镜像到一个目录：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo mount -o loop puppy.iso /media/puppy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start="2"&gt;
&lt;li&gt;复制镜像中的所有文件到根目录下的puppy目录：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo mkdir /puppy
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo cp -a /media/puppy/* /puppy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start="3"&gt;
&lt;li&gt;修改GRUB的引导文件，加入Puppy的引导项：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo vi /boot/grub/menu.lst
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
# (2) Puppy
title Puppy
root (hd0,2)
kernel /puppy/vmlinuz root=/dev/ram0
initrd /puppy/initrd.gz
&lt;/blockquote&gt;
&lt;ol start="4"&gt;
&lt;li&gt;
&lt;p&gt;重启系统并启动到Puppy&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用桌面上的&lt;strong&gt;Setup&lt;/strong&gt;中的&lt;strong&gt;Puppy Universal Installer&lt;/strong&gt;制作启动U盘。不过虽然这是官方推荐的制作工具，但我的杂牌U盘无论如何也不能引导系统，最后使用另一个备选的工具“&lt;strong&gt;BootFlash USB Installer&lt;/strong&gt;”的&lt;strong&gt;USB-HDD&lt;/strong&gt;模式制作成功。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>目录与文件的存储空间占用分析工具</title><link>http://0x3f.org/posts/storage-space-analysing-tools/</link><pubDate>Fri, 01 Oct 2010 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/storage-space-analysing-tools/</guid><description>&lt;h3&gt;du&lt;/h3&gt;
&lt;p&gt;du是命令行中用于查看目录和文件的空间占用情况的指令。&lt;/p&gt;
&lt;p&gt;常用示例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;du -h /tmp/logs
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3&gt;ncdu&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://dev.yorhel.nl/ncdu"&gt;ncdu&lt;/a&gt;为du提供了一个基于NCurses的命令行用户界面，并能够按照多种条件对分析结果进行排序，它大大简化了du指令的使用。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://picasaweb.google.com/lh/photo/xQINh1zrBdZcY27Evm9Cog?feat=embedwebsite"&gt;&lt;img src="http://lh5.ggpht.com/_ceUJ_lBTHzc/TKWkJk8hkjI/AAAAAAAABfU/vTIJqHTxAX0/s400/disk_usage_analyzers-ncdu_01.png" height="250" width="400" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;baobab&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.marzocca.net/linux/baobab/index.html"&gt;baobab&lt;/a&gt;使用基于GTK的图形用户界面，突出特点是可以分析远程目录。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://picasaweb.google.com/lh/photo/rGbtFe2Je23r1TB1MmX-tA?feat=embedwebsite"&gt;&lt;img src="http://lh3.ggpht.com/_ceUJ_lBTHzc/TKWkJ1_yLJI/AAAAAAAABfY/pt_peEEU2f8/s400/disk_usage_analyzers-baobab_01.png" height="400" width="386" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;参考&lt;/h3&gt;
&lt;ol&gt;
 &lt;li&gt;&lt;a href="http://www.vpser.net/manage/ncdu.html"&gt;磁盘目录占用空间计算排序工具 - ncdu&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>Arch不完全降温笔记</title><link>http://0x3f.org/posts/howto-cool-archlinux-down/</link><pubDate>Sat, 18 Sep 2010 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/howto-cool-archlinux-down/</guid><description>&lt;p&gt;主要目标是解决我的X200在Archlinux&lt;em&gt;（本文内容均基于此发行版）&lt;/em&gt;下CPU温度长期居高不下的问题，基本原理是使用&lt;a href="http://wiki.archlinux.org/index.php/Cpufrequtils"&gt;cpufrequtils&lt;/a&gt;根据CPU负载状况自动变频，和使用&lt;a href="http://wiki.archlinux.org/index.php/Laptop_Mode_Tools"&gt;laptop-mode-tools&lt;/a&gt;实现其它硬件设备的自动节能。最直接的效果是省电，从而延长电池的使用时间，产生的附加影响就是CPU及笔记本整体的温度下降。我几乎不用电池，所以节能不是我的关注点，但降温却是我所欲也。&lt;/p&gt;

&lt;p&gt;首先安装cpufrequtils，并将&lt;strong&gt;acpi-cpufreq&lt;/strong&gt;、&lt;strong&gt;cpufreq_ondemand&lt;/strong&gt;、&lt;strong&gt;cpufreq_powersave&lt;/strong&gt;加入&lt;strong&gt;rc.conf&lt;/strong&gt;的&lt;strong&gt;MODULES&lt;/strong&gt;中，使系统在启动时加载这些模块。&lt;/p&gt;

&lt;p&gt;默认情况下，内核采用cpufreq的performance模式，以获得最高性能，现在用ondemand模式使CPU根据负载状况自动变频。修改&lt;strong&gt;/etc/conf.d/cpufreq&lt;/strong&gt;文件，将&lt;strong&gt;governor&lt;/strong&gt;项设为&lt;strong&gt;ondemand&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;将&lt;strong&gt;cpufreq&lt;/strong&gt;加入&lt;strong&gt;rc.conf&lt;/strong&gt;的&lt;strong&gt;DAEMONS&lt;/strong&gt;中，此守护进程会在系统启动时读取配置文件&lt;strong&gt;/etc/conf.d/cpufreq&lt;/strong&gt;中的设置项，故上面设置的ondemand模式会在系统启动时得以自动生效。&lt;/p&gt;

&lt;p&gt;然后安装laptop-mode-tools，并修改&lt;strong&gt;/etc/laptop-mode/laptop-mode.conf&lt;/strong&gt;，打开所有的三个以&lt;strong&gt;ENABLE&lt;/strong&gt;开头的选项，和所有以&lt;strong&gt;CONTROL&lt;/strong&gt;开头的选项。&lt;/p&gt;

&lt;p&gt;将&lt;strong&gt;laptop-mode&lt;/strong&gt;加入&lt;strong&gt;rc.conf&lt;/strong&gt;的&lt;strong&gt;DAEMONS&lt;/strong&gt;中，使其随系统自动启动。&lt;/p&gt;

&lt;p&gt;修改&lt;strong&gt;/etc/laptop-mode/conf.d/usb-autosuspend.conf&lt;/strong&gt;，此配置文件用来配置laptop-mode如何管理USB设备的电源使用。我希望在任何时候都启用USB设备自动节能，但需要把我的无线鼠标排除在外，故作如下配置：&lt;/p&gt;

```bash
# 启用USB设备自动挂起
CONTROL_USB_AUTOSUSPEND="auto"

# 将不使用自动挂起的USB设备的ID填在下面，使用lsusb命令查看ID
AUTOSUSPEND_USBID_BLACKLIST="04fc:05dc"

# 总是启用USB自动挂起
BATT_SUSPEND_USB=1
LM_AC_SUSPEND_USB=1
NOLM_AC_SUSPEND_USB=1
```

&lt;p&gt;类似地，修改&lt;strong&gt;intel-hda-powersave.conf&lt;/strong&gt;，此配置文件用于配置laptop-mode如何管理Intel HDA音频芯片的电源使用。我希望一直启用声卡自动节能，并适当地将自动进入节电模式的空闲时间增加到30秒，故配置如下：&lt;/p&gt;

```bash
# 启用Intel音频芯片电源管理
CONTROL_INTEL_HDA_POWER="auto"

# 总是启用
BATT_INTEL_HDA_POWERSAVE=1
LM_AC_INTEL_HDA_POWERSAVE=1
NOLM_AC_INTEL_HDA_POWERSAVE=1

# 适当地设置声卡进入节电模式的超时时间
INTEL_HDA_DEVICE_TIMEOUT=30
```

&lt;p&gt;类似地，修改&lt;strong&gt;intel-sata-powermgmt.conf&lt;/strong&gt;，启用sata硬盘接口的电源管理。由于我用Blueman控制蓝牙设备，一般不用时都将其关闭，同时经常使用wifi，故蓝牙和无线网卡均未作配置。&lt;/p&gt;

&lt;p&gt;最后，关闭conky,Firefox和Chromium，&lt;a href="http://www.lesswatts.org/projects/powertop/"&gt;powertop&lt;/a&gt;显示conky是个很吵闹的东西，关掉它可以使&lt;strong&gt;Wakeups-from-idle per second&lt;/strong&gt;的值下降很多，另外Chromium和Firefox也是耗电大户。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;在此之前，系统空闲时CPU温度一般是50多度，普通使用时一般在60多度，如果开了kvm虚拟机会达到60至90度间。经过以上设置，系统空闲时CPU温度一度下降到39度，即使开了虚拟机，一般也可维持在50到80度间。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;另外，对于以上内容，我还有些没搞明白的地方和要补充说明的东西：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;虽然将laptop-mode加入rc.conf且已随系统启动，但使用命令“&lt;strong&gt;cat /proc/sys/vm/laptop_mode&lt;/strong&gt;”查询得到的结果仍然是0，也就是说没有自动启用laptop-mode，必须使用命令“&lt;strong&gt;sudo /etc/rc.d/laptop-mode restart&lt;/strong&gt;”手动重启才行。目前没有找到解决办法。&lt;/li&gt;
&lt;li&gt;虽然启用laptop-mode接管声卡电源管理，但没找到查看是否生效的方法，于是在/etc/rc.local中加入命令“&lt;strong&gt;echo 1 &amp;gt; /sys/module/snd&lt;em&gt;hda&lt;/em&gt;intel/parameters/power_save&lt;/strong&gt;”以强制声卡节电。&lt;/li&gt;
&lt;li&gt;Intel的powertop是个好东西，用它可以查看哪些进程最影响CPU节能。我们优化的标准之一就是使powertop中显示的“Wakeups-from-idle per second”尽可能地减少。powertop的另一个特点就是通过自动检查当前系统中电源使用的配置情况给出优化的建议，这是个很贴心的功能。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;鉴于目前存疑较多并将继续尝试，所以在标题中特别注明“不完全”三个字……&lt;/p&gt;

&lt;h3&gt;参考&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;http://itgen.blogspot.com/2009/03/energy-management-in-linux.html&lt;/li&gt;
&lt;li&gt;http://www.ibm.com/developerworks/cn/linux/l-cpufreq-1/index.html&lt;/li&gt;
&lt;li&gt;http://www.lesswatts.org/&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>rxvt-unicode的真透明</title><link>http://0x3f.org/posts/true-transparent-of-rxvt-unicode/</link><pubDate>Sat, 28 Feb 2009 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/true-transparent-of-rxvt-unicode/</guid><description>&lt;div class="illustration_right"&gt;
&lt;a href="http://picasaweb.google.com/lh/photo/J2FyvgBhXopEgPlX9whJ3w?feat=embedwebsite"&gt;&lt;img src="http://lh5.ggpht.com/_ceUJ_lBTHzc/Saghr1cRaoI/AAAAAAAAA0o/fye5JZl3Pxc/s288/2009-02-28-012206_1280x800_scrot.png" /&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;nacre同学说，urxvt是可以实现真透明的。起初我以为是要用&lt;a href="http://www.forchheimer.se/transset-df/"&gt;transset-df&lt;/a&gt;来实现，但这个东西一般需要手动操作，不具有太大的实用性，而且会把整个窗口透明化。不过后来发现真的不需要用它来画蛇添足，有&lt;a href="http://wiki.archlinux.org/index.php/Xcompmgr"&gt;xcompmgr&lt;/a&gt;足矣。&lt;/p&gt;

&lt;p&gt;因为我用&lt;a href="http://en.wikipedia.org/wiki/Openbox"&gt;openbox&lt;/a&gt;，要实现窗口的阴影和动画效果，xcompmgr是必须的，我把它设成了开机自启动。比起xcompmgr默认的参数值，下面这条定制的命令实现了简洁的阴影和合理的渐隐渐显时间，因此提供了一个各方面都比较均衡、合理的桌面体验：&lt;/p&gt;

&lt;blockquote&gt;
 &lt;p&gt;xcompmgr -Ss -n -Cc -fF -I-10 -O-10 -D1 -t-3 -l-4 -r4&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;然后在.Xresources中添加以下两行：&lt;/p&gt;

&lt;blockquote&gt;
 &lt;p&gt;URxvt.depth:32
 URxvt.background:rgba:0000/0000/0000/dddd&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;最后当然要执行一下：&lt;/p&gt;

&lt;blockquote&gt;
 &lt;p&gt;xrdb ~/.Xresources&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;此后直接启动urxvt即可。&lt;/p&gt;

&lt;p&gt;这里面最有意思的就是background项的配置，它有两种形式，一种是：&lt;/p&gt;

&lt;blockquote&gt;
 &lt;p&gt;URxvt.background:[80]black&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;还有一种就是前面提到的形式。&lt;/p&gt;

&lt;p&gt;第一种形式中，中括号里的数字表示半透明度对应的百分比，括号外是颜色名称；第二种形式提供了比第一种更多的色彩选择，四组数字都是十六进制数，前三组是RGB颜色值，最后一组是半透明度，数值越大，透明度越低。&lt;/p&gt;

&lt;p&gt;在查阅“man urxvt”的时候，发现urxvt的man pages里的内容真是异常丰富，大部分功能都讲解得言简意赅。以往还抱怨这个东西在网上连个健全的文档都找不到，原来全在这儿呢，真不知道以往无数次地man的时候为什么没有注意到这些，难道man了rxvt了？&lt;/p&gt;

&lt;p&gt;&lt;em&gt;PS：这样实现urxvt的真半透明后，貌似xcompmgr实现的阴影在urxvt身上就消失了，求解中……&lt;/em&gt;&lt;/p&gt;</description></item><item><title>完美的终端模拟器：rxvt-unicode</title><link>http://0x3f.org/posts/rxvt-unicode-256color-is-perfect/</link><pubDate>Sun, 08 Feb 2009 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/rxvt-unicode-256color-is-perfect/</guid><description>&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Rxvt-unicode"&gt;urxvt&lt;/a&gt;（&lt;a href="http://www.rxvt.org/"&gt;rxvt&lt;/a&gt;的unicode版本，支持多国语言，&lt;a href="http://software.schmorp.de/pkg/rxvt-unicode.html"&gt;官方网站&lt;/a&gt;）。&lt;/p&gt;

&lt;p&gt;具有以下特性：&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;支持真半透明&lt;/li&gt;
	&lt;li&gt;支持Unicode编码，支持多国语言&lt;/li&gt;
	&lt;li&gt;支持英文和非英文字符使用不同的字体&lt;/li&gt;
	&lt;li&gt;支持CS模式，节省系统资源&lt;/li&gt;
	&lt;li&gt;轻量，速度快&lt;/li&gt;
	&lt;li&gt;支持Perl扩展功能&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;但是urxvt有一个很影响情绪的缺陷，就是字符的间距过大，看起来很不舒服。不过已有补丁用来解决这个问题，例如Archlinux用户可以安装&lt;a href="http://aur.archlinux.org/packages.php?ID=32488"&gt;rxvt-unicode-chinese&lt;/a&gt;：&lt;/p&gt;

&lt;p&gt;&lt;a href="http://picasaweb.google.com/lh/photo/6B48rqC08p3C7paP_Y651w?feat=embedwebsite"&gt;&lt;img src="http://lh5.ggpht.com/_ceUJ_lBTHzc/SY71tgK4J0I/AAAAAAAAAw4/3Vf4HbPZfS4/s400/rxvt-unicode-256color.png" /&gt;&lt;/a&gt;&lt;/p&gt;

urxvt的配置选项可以参考其官方网站上的说明，另外&lt;a href="http://pastebin.com/WzT6pTKA"&gt;这里&lt;/a&gt;有一份详细的配置文件。

&lt;strong&gt;更新日志：&lt;/strong&gt;

&lt;strong&gt;2011-01-15&lt;/strong&gt;
&lt;ol&gt;
	&lt;li&gt;修改文章标题&lt;/li&gt;
	&lt;li&gt;重写文章内容&lt;/li&gt;
	&lt;li&gt;由于原来的rxvt-unicode-256color包已不存在，更换为rxvt-unicode-chinese&lt;/li&gt;
	&lt;li&gt;补充一份配置文件&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>为rxvt-unicode开启标签和链接支持</title><link>http://0x3f.org/posts/let-rxvt-unicode-support-tags-and-links/</link><pubDate>Thu, 20 Mar 2008 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/let-rxvt-unicode-support-tags-and-links/</guid><description>&lt;p&gt;写完&lt;a href="http://0x3f.org/?p=376"&gt;urxvt-unicode快速上手&lt;/a&gt;，本以为已将urxvt的用法一网打尽，不料AndyWxy网友又找到了两个新的功能：使urxvt启用标签和在urxvt中打开网页链接。&lt;/p&gt;

&lt;p&gt;标签功能很实用，一般为了达到复用终端窗口的目的会采用两种方式：一是配合screen使用，另一个就是启用标签。然而前者有一个缺点就是不直观，标签页恰好能弥补这个缺陷。urxvt不愧是个功能强大的终端工具，如果在编译时开启perl支持，则urxvt可启用多标签功能。用法如下：&lt;/p&gt;

&lt;p&gt;一是在启动的时候加入命令行参数：&lt;/p&gt;

&lt;blockquote&gt;
 &lt;p&gt;urxvt -pe tabbed&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;二是在配置文件“.Xresources”中添加如下配置信息：&lt;/p&gt;

&lt;blockquote&gt;
 &lt;p&gt;URxvt.perl-ext-common: default,tabbed&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;则默认情况下执行urxvt就会打开多标签功能。urxvt的标签支持使用鼠标操作，同时可以使用Ctrl+Shift+左右箭头来切换标签页，使用Ctrl+Shift+向下箭头开启新标签。&lt;/p&gt;

&lt;p&gt;另外一个功能就是可以通过在urxvt中的链接上点击鼠标左键来通过设定的浏览器打开之。首先在“.Xresources”文件中添加如下内容：&lt;/p&gt;

&lt;blockquote&gt;
 &lt;p&gt;URxvt.urlLauncher: firefox
 URxvt.matcher.button: 1&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;然后使用如下命令打开urxvt：&lt;/p&gt;

&lt;blockquote&gt;
 &lt;p&gt;urxvt -pe matcher&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;即可。也可以在配置文件中添加上述内容之后再添加一行：&lt;/p&gt;

&lt;blockquote&gt;
 &lt;p&gt;URxvt.perl-ext-common: matcher&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;此后即默认开启在终端窗口中打开链接的功能。注意修改“.Xresources”文件后需要执行如下命令才能使修改后的配置文件生效：&lt;/p&gt;

&lt;blockquote&gt;
 &lt;p&gt;xrdb ~/.Xresources&lt;/p&gt;
&lt;/blockquote&gt;</description></item><item><title>rxvt-unicode快速上手</title><link>http://0x3f.org/posts/quick-guide-for-rxvt-unicode/</link><pubDate>Fri, 07 Mar 2008 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/quick-guide-for-rxvt-unicode/</guid><description>&lt;!--rxvt-unicode快速上手--&gt;
&lt;p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="http://www.rxvt.org/"&gt;rxvt&lt;/a&gt;是我最喜欢的虚拟终端，它有以下优点：
&lt;/p&gt;&lt;p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;轻量&lt;/b&gt;：体积小，启动速度快，占用系统资源极低&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;美观&lt;/b&gt;：各种外观（如颜色、字体、半透明等）均可定制&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;功能强&lt;/b&gt;：具备一个终端工具应当有的各种实用功能
&lt;/p&gt;&lt;p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;然而它很难被初学者接受，一是因为它的缺省外观很难看，而自身又不提供图形界面的配置工具，只能通过修改配置文件来设置，然而网上相关的资料却非常少；二是因为在rxvt中使用复制和粘贴非常“不方便”，它并不支持人们已经习惯的Ctrl+C和Ctrl+V的复制、粘贴方式，这也是网上关于rxvt问得最多的问题；最后一个门槛是它对中文等东亚文字的支持不好。
&lt;/p&gt;&lt;p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;其实rxvt以上三个所谓的门槛都是初学者对它的误解。首先rxvt的配置文件非常简单，只要学过英语的人都能看明白，通过简单的配置就可以使之变得非常漂亮，丝毫不逊色于&lt;a href="http://en.wikipedia.org/wiki/Konsole"&gt;Konsole&lt;/a&gt;、&lt;a href="http://en.wikipedia.org/wiki/GNOME_Terminal"&gt;Gnome-terminal&lt;/a&gt;等主流终端。
&lt;/p&gt;&lt;p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;其次，rxvt虽然不支持Ctrl+C和Ctrl+V的复制、粘贴，但是它有自己的一套操作方式。Linux下普遍使用的图形界面均为&lt;a href="http://www.x.org/"&gt;X11&lt;/a&gt;，而X11支持一种独特的复制粘贴方式，即如果你在另一个程序比如文本编辑器中使用鼠标拖动来高亮一段文字后，不用进行任何操作，此时选中的内容已经复制到剪贴板中了，随后在rxvt中单击鼠标中键即可将选中内容粘贴到其中，此外，如果鼠标没有中键，可以同时按下左右键以达到同样的效果，还可以使用Shift+Insert组合键来完成粘贴；反之，从rxvt中向外复制内容同样如此。
&lt;/p&gt;&lt;p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;最后，虽然rxvt对东亚文字支持不好，但是rxvt有几个修改版，其中一个就是&lt;a href="http://software.schmorp.de/pkg/rxvt-unicode.html"&gt;rxvt-unicode&lt;/a&gt;。顾名思义，rxvt-unicode支持unicode编码，因此对东亚文字的支持完全没有问题。安装完成后，使用urxvt即可打开之。
&lt;/p&gt;&lt;p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;此外，rxvt-unicode还有一个很好的特性，它可以工作在C/S模式。使用urxvtd启动rxvt的后台程序，此后任何时候使用urxvtc即可打开一个rxvt终端，所有的rxvtc共用一个urxvtd，因此在同时运行的终端比较多的时候，在内存占用上要比全部使用urxvt少一些。不过据我粗略计算，如果打开的终端不是非常多（比如说几十个），那么使用普通模式和使用C/S模式对内存的占用没有太大的差距，因为普通模式下的urxvt占用内存本身就非常少。在我看来使用C/S模式的最大好处是启动速度比普通模式要快一些。
&lt;/p&gt;&lt;p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;关于rxvt的美化和设置，可以参看我以前写的一篇&lt;a href="http://0x3f.org/?p=316"&gt;文章&lt;/a&gt;。下图是我现在使用的rxvt的截图：
&lt;/p&gt;&lt;p&gt;
&lt;a href="http://picasaweb.google.com/lenin.lee/Weblog/photo#5173912470992319602"&gt;&lt;img src="http://lh5.google.com/lenin.lee/R81t-tR19HI/AAAAAAAAASc/DNDprQnOY-A/s400/urxvt.png" /&gt;&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;以下是我当前的rxvt配置文件的内容：
&lt;/p&gt;&lt;p&gt;
&lt;blockquote&gt;
!Xft.dpi:96
!fontforge.FontView.FontFamily:wenquanyi bitmap song

Rxvt.geometry:192×144
Rxvt.background:#2e2e2e
Rxvt.foreground:antiquewhite
Rxvt.colorBD:yellow
Rxvt.colorUL:green
Rxvt.multichar_encoding:utf-8
Rxvt.scrollBar:Fault
Rxvt.scrollBar_right:True
Rxvt.scrollBar_floating: True
Rxvt.scrollstyle: next
Rxvt.saveLines:10000
Rxvt.color0:black
Rxvt.color1:red3
Rxvt.color2:springgreen
Rxvt.color3:wheat3
Rxvt.color4:navy
Rxvt.color5:magenta4
Rxvt.color6:steelblue1
Rxvt.color7:gray85
Rxvt.color8:gray10
Rxvt.color9:SkyBlue3
Rxvt.color10:chartreuse3
Rxvt.color11:lightgoldenrod2
Rxvt.color12:SkyBlue1
Rxvt.color13:pink1
Rxvt.color14:lightblue1
Rxvt.color15:#dbeff9

Rxvt.font:xft:Vera Sans YuanTi Mono :size=10,xft:Monospace:size=10

Rxvt.menu:/etc/X11/rxvt.menu
Rxvt.preeditType:Root
Rxvt.transparency:255
&lt;/blockquote&gt;
&lt;/p&gt;</description></item><item><title>rxvt-unicode的半透明方案</title><link>http://0x3f.org/posts/half-transparent-for-rxvt-unicode/</link><pubDate>Tue, 16 Oct 2007 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/half-transparent-for-rxvt-unicode/</guid><description>&lt;!-- urxvt的半透明方案 --&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;rxvt是个快速且节省内存的模拟终端，原版rxvt对中文等非字母语言的支持不好，所以它有许多修改版，rxvt-unicode-ml是比较适合中国人使用的rxvt修改版。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;rxvt轻量但不简单，它有许多设置选项和启动参数，用户可以在命令行使用“&lt;font color="#036803"&gt;rxvt -help&lt;/font&gt;”查看其常用启动参数，使用“&lt;font color="#036803"&gt;rxvt --help&lt;/font&gt;”查看更为详细的启动参数。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;通过修改用户主目录下的“&lt;font color="#a73800"&gt;.Xresources&lt;/font&gt;”文件可以配置urxvt的行为，从而不必每次都加启动参数，我的"&lt;font color="#a73800"&gt;.Xresources&lt;/font&gt;"文件内容如下：&lt;/p&gt;
&lt;blockquote&gt;&lt;font color="#036803"&gt;Rxvt.background:white&lt;br&gt;
Rxvt.foreground:black&lt;br&gt;
Rxvt.colorBD:yellow&lt;br&gt;
Rxvt.colorUL:green&lt;br&gt;
Rxvt.multichar_encoding:gb2312&lt;br&gt;
Rxvt.scrollBar:Fault&lt;br&gt;
Rxvt.scrollBar_right:True&lt;br&gt;
Rxvt.scrollBar_floating: True&lt;br&gt;
Rxvt.scrollstyle: next&lt;br&gt;
Rxvt.saveLines:10000&lt;br&gt;
Rxvt.color0:black&lt;br&gt;
Rxvt.color1:red3&lt;br&gt;
Rxvt.color2:springgreen&lt;br&gt;
Rxvt.color3:wheat3&lt;br&gt;
Rxvt.color4:navy&lt;br&gt;
Rxvt.color5:magenta4&lt;br&gt;
Rxvt.color6:steelblue1&lt;br&gt;
Rxvt.color7:gray85&lt;br&gt;
Rxvt.color8:gray10&lt;br&gt;
Rxvt.color9:SkyBlue3&lt;br&gt;
Rxvt.color10:chartreuse3&lt;br&gt;
Rxvt.color11:lightgoldenrod2&lt;br&gt;
Rxvt.color12:SkyBlue1&lt;br&gt;
Rxvt.color13:pink1&lt;br&gt;
Rxvt.color14:lightblue1&lt;br&gt;
Rxvt.color15:#dbeff9&lt;br&gt;
Rxvt.font:xft:Vera Sans YuanTi Mono :size=10,xft:Monospace:size=10&lt;br&gt;
Rxvt.menu:/etc/X11/rxvt.menu&lt;br&gt;
Rxvt.preeditType:Root&lt;br&gt;
Rxvt.geometry:192×174&lt;br&gt;
Rxvt.transparency:255&lt;/font&gt;&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;这个配置文件是白底黑字，当然可以修改为全透明或者半透明，不过，只要在启动时加入启动参数就可以实现全透明：&lt;/p&gt;
&lt;blockquote&gt;&lt;font color="#036803"&gt;urxvt -tr&lt;/font&gt;&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;也可以实现半透明：&lt;/p&gt;
&lt;blockquote&gt;&lt;font color="#036803"&gt;urxvt -fg lightgray -bg black -bc -tr -tint lightgray -sh 60 -sr&lt;/font&gt;&lt;/blockquote&gt;</description></item></channel></rss>