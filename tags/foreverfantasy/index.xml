<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ForeverFantasy on 晴耕雨讀</title><link>http://0x3f.org/tags/foreverfantasy/</link><description>Recent content in ForeverFantasy on 晴耕雨讀</description><generator>Hugo</generator><language>zh-cn</language><copyright>© 淘气 2022</copyright><lastBuildDate>Mon, 08 Mar 2010 00:00:00 +0000</lastBuildDate><atom:link href="http://0x3f.org/tags/foreverfantasy/index.xml" rel="self" type="application/rss+xml"/><item><title>Python控制外部进程的灵异事件</title><link>http://0x3f.org/posts/supernatural-phenomenon-of-controlling-external-processes-in-python/</link><pubDate>Mon, 08 Mar 2010 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/supernatural-phenomenon-of-controlling-external-processes-in-python/</guid><description>&lt;p>春节前的一段时间，重新拾起近一年没动过的&lt;a href="http://0x3f.org/?tag=foreverfantasy">ForeverFantasy&lt;/a>。&lt;/p>

&lt;p>虽然一年内没什么更新，但是我却一直都在用，基本上只限于将用Vim写好的&lt;a href="http://en.wikipedia.org/wiki/Markdown">Markdown&lt;/a>格式的文档转换成HTML。&lt;/p>

&lt;p>重写了相当一部分代码，较大程度地改变了界面布局，突然发现经过一年的沉淀，对&lt;a href="http://en.wikipedia.org/wiki/WxPython">wxPython&lt;/a>的理解增进了不少，开发起来比起去年这个时候清楚了很多。&lt;/p>

&lt;p>&lt;a href="http://picasaweb.google.com/lh/photo/bNRGQr0g6aLuqDUm8EQ6mg?feat=embedwebsite">&lt;img src="http://lh6.ggpht.com/_ceUJ_lBTHzc/S5UYPQmTAzI/AAAAAAAABUc/znMRxXuE8dE/s400/2010-03-08.23%3A27%3A03.%E5%B7%A5%E4%BD%9C%E5%8C%BA%201.01.png" />&lt;/a>&lt;/p>

&lt;p>这些天来一直坚持着每天或多或少的做一些，如果说有什么主要的进展的话，那就是界面的重构，以及昨天实现了调用Vim编辑文档并回收文档内容的功能。&lt;/p>

&lt;p>ForeverFantasy和Vim协同的一个最大的问题就是如何判断Vim已经退出。Python调用外部程序的方法有很多，比如传统的&lt;a href="http://docs.python.org/library/commands.html">commands&lt;/a>模块、&lt;a href="http://docs.python.org/library/os.html">os&lt;/a>.system()等，&lt;a href="http://docs.python.org/library/subprocess.html">subprocess&lt;/a>是致力于替代这些旧有的方式的一个模块，它的一个特点是可以在启动一个外部程序作为子进程后还能监控这个进程的运行状态。这为ForeverFantasy在Vim退出后回收文档内容提供了更简捷的途径。&lt;/p>

&lt;p>下面的代码可以说明如何使用subprocess运行外部程序并监控运行状态：&lt;/p>

&lt;p>
```python
import subprocess
process = subprocess.Popen('gvim', shell=True)
status = process.poll()
if 0 == status:
 print 'The external program exited.'
if status is None:
 print 'The external program is still running.'
```
&lt;/p></description></item></channel></rss>