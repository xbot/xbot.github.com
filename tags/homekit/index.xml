<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Homekit on 晴耕雨讀</title><link>http://0x3f.org/tags/homekit/</link><description>Recent content in Homekit on 晴耕雨讀</description><generator>Hugo</generator><language>zh-cn</language><copyright>© 2007-2024 鬼马妖刀</copyright><lastBuildDate>Wed, 08 Jan 2025 18:00:33 +0800</lastBuildDate><atom:link href="http://0x3f.org/tags/homekit/index.xml" rel="self" type="application/rss+xml"/><item><title>小米安防轻松入苹果“家门”，教你一招搞定！</title><link>http://0x3f.org/posts/control-xiaomi-alarm-system-using-homekit/</link><pubDate>Wed, 08 Jan 2025 18:00:33 +0800</pubDate><guid>http://0x3f.org/posts/control-xiaomi-alarm-system-using-homekit/</guid><description>&lt;h2 id="为什么这么做">为什么这么做？&lt;/h2>
&lt;p>&lt;img src="https://raw.githubusercontent.com/xbot/image-hosting/master/blog/2024-12-25-15-52-54-Image%20Dec%2025%202024.jpeg" alt="2024-12-25-15-52-54-ImageDec252024">&lt;/p>
&lt;p>小米官方 Home Assistant 集成的事件订阅机制可是一大亮点，它极大地解放了小米智能组件在 Apple 的 HomeKit 生态中的应用。以往三方集成采用轮询机制，这就导致小米多数的组件响应延迟很大，体验感极差。比如之前安防系统模式变化后几秒钟仪表盘上的组件才改变状态，实在是逼死强迫症。但现在不同了，有了事件订阅机制，组件响应十分及时，我们终于可以在家庭 App 中流畅地调用这些组件实现自动化操作了。&lt;/p>
&lt;p>不过，对于安防系统，小米官方 Home Assistant 集成目前只提供了一个下拉框组件。这在日常使用中可就有些不便了，当你想要快速查看安防状态或者切换模式时，还得费劲地去点开下拉框，既不美观，操作也麻烦。要是能在 Home Assistant 的仪表盘和 Apple 的家庭 App 中，显示专为安防系统设计的组件，那使用起来就顺手多了。所以，就需要把这个下拉框组件对应的 select 实体转换成 alarm_control_panel 实体，接下来就看看具体怎么做吧。&lt;/p>
&lt;h2 id="实操">实操&lt;/h2>
&lt;p>首先，我们要创建一个 alarm_control_panel 实体，位置在：Settings → Devices &amp;amp; services → Helpers → Create helper → Template helper → Template an alarm control panel。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/xbot/image-hosting/master/blog/2025-01-08-18-04-03-alarm_01.png" alt="2025-01-08-18-04-03-alarm_01">&lt;/p>
&lt;p>在这里，我们需要用模板来进行配置，以下是关键的代码部分：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">{&lt;span class="l">% set state_map = {&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#39;basic_arming&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;disarmed&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#39;home_arming&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;armed_home&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#39;away_arming&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;armed_away&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#39;sleep_arming&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;armed_night&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="w"> &lt;/span>&lt;span class="l">%}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>{{&lt;span class="w"> &lt;/span>&lt;span class="l">state_map.get(states(&amp;#39;select.lumi_cn_463684587_mgl03_arming_mode_p_3_1&amp;#39;), &amp;#39;unknown&amp;#39;) }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这段代码的含义是，我们先定义了一个名为 &lt;code>state_map&lt;/code> 的字典，它将小米安防下拉框组件中的不同状态值（如 &lt;code>basic_arming&lt;/code> 等）对应翻译成苹果 HomeKit 能识别的 alarm_control_panel 实体状态值（如 &lt;code>disarmed&lt;/code> 等）。最后的 &lt;code>{{ state_map.get(states('select.lumi_cn_463684587_mgl03_arming_mode_p_3_1'), 'unknown') }}&lt;/code> 这部分，则是获取当前小米安防组件的状态，并通过前面的 &lt;code>state_map&lt;/code> 进行转换，如果获取状态失败，就返回 &lt;code>unknown&lt;/code>。&lt;/p></description></item><item><title>小米官方的 Home Assistant 集成一周体验</title><link>http://0x3f.org/posts/one-week-experience-of-xiaomi-official-home-assistant-integration/</link><pubDate>Wed, 25 Dec 2024 14:58:27 +0800</pubDate><guid>http://0x3f.org/posts/one-week-experience-of-xiaomi-official-home-assistant-integration/</guid><description>&lt;h2 id="消息订阅机制--最大亮点">消息订阅机制 —— 最大亮点&lt;/h2>
&lt;p>小米官方 Home Assistant 集成最大的优势，就是其基于消息订阅机制的通信方式。这相较于第三方集成常用的轮询方式，有着质的飞跃。在以往的第三方集成中，设备状态的获取往往依赖于轮询，每隔一段时间才去检查设备状态是否有变化，这就导致了信息的延迟，用户操作后不能及时得到设备的反馈，体验大打折扣。&lt;/p>
&lt;p>而小米官方集成的消息订阅机制则像是给设备安装了一个实时传声筒。当设备属性发生改变或者有事件产生时，设备会迅速向小米云或小米中枢网关发送上行消息，米家集成就能在第一时间接收到这些消息并更新设备状态，无需频繁地刷新查询。这就使得小米的智能家居配件在 Home Assistant 和 HomeKit 生态中的响应变得极其及时，真正实现了设备状态的实时掌控。比如灯的开关、窗帘的开合、空调的温度调节等操作，都能瞬间得到执行和反馈，让用户感受到智能家居的便捷与高效，极大地提升了用户的智能家居体验。&lt;/p>
&lt;h2 id="oauth2-登录方式--可能每周都要重新登录">OAuth2 登录方式 —— 可能每周都要重新登录&lt;/h2>
&lt;p>小米官方 Home Assistant 集成采用的 OAuth2 登录方式，其实有着诸多安全性方面的优势。它允许客户端不接触用户密码，服务器端能够更集中地保护用户信息，所有认证和授权信息都汇聚在服务器端，而非分散于各个客户端，大大减少了用户凭据泄露的风险。而且 OAuth2 还是一个应用广泛的认证标准，很多公司和组织都采用了它，这也让小米的智能家居配件在集成应用时更容易与其他平台或服务进行交互、整合。&lt;/p>
&lt;p>然而，在实际使用一周的体验中，也发现了不太方便的地方，那就是登录有效期的问题。使用一周之后，系统就会提示登录过期，需要重新登录。这在日常使用中，尤其是频繁操作智能家居设备时，还是挺影响体验的。每隔一段时间都要重新登录，操作步骤变得繁琐，打断了原本便捷的智能家居操控流程。&lt;/p>
&lt;p>据说这个 bug 会在未来的版本中解决。&lt;/p>
&lt;h2 id="额外配置">额外配置&lt;/h2>
&lt;h3 id="安防控制面板显示">安防控制面板显示&lt;/h3>
&lt;p>&lt;img src="https://raw.githubusercontent.com/xbot/image-hosting/master/blog/2024-12-25-15-52-54-Image%20Dec%2025%202024.jpeg" alt="2024-12-25-15-52-54-ImageDec252024">&lt;/p>
&lt;p>对于我在用的小米智能多模网关，小米官方 Home Assistant 集成并没有提供 HA 的安防控制面板实体，而是提供了一个基本的 select 实体。如果要在 HA 的仪表板和家庭 App 中显示安防控制面板，就需要把安防系统的 select 实体转换成 alarm_control_panel 实体。&lt;/p>
&lt;h3 id="传感器实体转换">传感器实体转换&lt;/h3>
&lt;p>&lt;img src="https://raw.githubusercontent.com/xbot/image-hosting/master/blog/2024-12-25-15-49-31-mac_20241225154742.jpeg" alt="2024-12-25-15-49-31-mac_20241225154742">&lt;/p>
&lt;p>对于移动检测传感器和烟雾传感器这样的配件，小米官方 Home Assistant 集成没有提供对应的 binary_sensor 实体，而是 event 实体，这当然很符合小米配件的行为模式，但如果需要把它们输出到 Apple 的家庭 App ，就需要将其转换成 binary_sensor 实体。这是因为家庭 App 无法处理 HA 中的 event 实体，而转换成binary_sensor 实体才能被识别为对应的传感器，也更便于与其他智能设备进行联动。&lt;/p></description></item></channel></rss>