<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Memcached on 晴耕雨讀</title><link>http://0x3f.org/tags/memcached/</link><description>Recent content in Memcached on 晴耕雨讀</description><generator>Hugo</generator><language>zh-cn</language><copyright>© 2007-2024 鬼马妖刀</copyright><lastBuildDate>Wed, 13 Jul 2011 00:00:00 +0000</lastBuildDate><atom:link href="http://0x3f.org/tags/memcached/index.xml" rel="self" type="application/rss+xml"/><item><title>APC、文件和Memcached效率对比</title><link>http://0x3f.org/posts/comparison-of-efficiency-for-apc-file-memcached/</link><pubDate>Wed, 13 Jul 2011 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/comparison-of-efficiency-for-apc-file-memcached/</guid><description>&lt;p&gt;对一个保存了100个对象实例的数组进行300次读写，该数组序列化后大小为232KB。&lt;/p&gt;

&lt;h2&gt;测试环境&lt;/h2&gt;

&lt;table&gt;
 &lt;tr&gt;
 &lt;th&gt;网络服务器&lt;/th&gt;
 &lt;th&gt;PHP版本&lt;/th&gt;
 &lt;th&gt;操作系统&lt;/th&gt;
 &lt;th&gt;硬件配置&lt;/th&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;NGINX v1.0.4&lt;/td&gt;
 &lt;td&gt;PHP-FPM v5.3.6&lt;br&gt;APC启用&lt;/td&gt;
 &lt;td&gt;Archlinux 32bit&lt;/td&gt;
 &lt;td&gt;Intel(R) Core(TM)2 Duo CPU T9400 @ 2.53GHz&lt;br&gt;Mem: 3G DDR3&lt;br&gt;Disk: 5400r/s&lt;/td&gt;
 &lt;/tr&gt;
&lt;/table&gt;

&lt;h2&gt;测试脚本&lt;/h2&gt;

&lt;p&gt;测试数据：&lt;/p&gt;

```php
&lt;?php
/*
 * @file data.php
 */

class XTest
{
 var $x0;
 var $x1;
 var $x2;
 var $x3;
 var $x4;
 var $x5;
 var $x6;
 var $x7;
 var $x8;
 var $x9;
 var $x10;
 var $x11;
 var $x12;
 var $x13;
 var $x14;
 var $x15;
 var $x16;
 var $x17;
 var $x18;
 var $x19;
 var $x20;
 var $x21;
 var $x22;
 var $x23;
 var $x24;
 var $x25;
 var $x26;
 var $x27;
 var $x28;
 var $x29;
 var $x30;
 var $x31;
 var $x32;
 var $x33;
 var $x34;
 var $x35;
 var $x36;
 var $x37;
 var $x38;
 var $x39;
 var $x40;
 var $x41;
 var $x42;
 var $x43;
 var $x44;
 var $x45;
 var $x46;
 var $x47;
 var $x48;
 var $x49;
 var $x50;
 var $x51;
 var $x52;
 var $x53;
 var $x54;
 var $x55;
 var $x56;
 var $x57;
 var $x58;
 var $x59;
 var $x60;
 var $x61;
 var $x62;
 var $x63;
 var $x64;
 var $x65;
 var $x66;
 var $x67;
 var $x68;
 var $x69;
 var $x70;
 var $x71;
 var $x72;
 var $x73;
 var $x74;
 var $x75;
 var $x76;
 var $x77;
 var $x78;
 var $x79;
 var $x80;
 var $x81;
 var $x82;
 var $x83;
 var $x84;
 var $x85;
 var $x86;
 var $x87;
 var $x88;
 var $x89;
 var $x90;
 var $x91;
 var $x92;
 var $x93;
 var $x94;
 var $x95;
 var $x96;
 var $x97;
 var $x98;
 var $x99;

 function __construct()
 {
 $this-&gt;x0 = 1234567890;
 $this-&gt;x1 = 1234567890;
 $this-&gt;x2 = 1234567890;
 $this-&gt;x3 = 1234567890;
 $this-&gt;x4 = 1234567890;
 $this-&gt;x5 = 1234567890;
 $this-&gt;x6 = 1234567890;
 $this-&gt;x7 = 1234567890;
 $this-&gt;x8 = 1234567890;
 $this-&gt;x9 = 1234567890;
 $this-&gt;x10 = 1234567890;
 $this-&gt;x11 = 1234567890;
 $this-&gt;x12 = 1234567890;
 $this-&gt;x13 = 1234567890;
 $this-&gt;x14 = 1234567890;
 $this-&gt;x15 = 1234567890;
 $this-&gt;x16 = 1234567890;
 $this-&gt;x17 = 1234567890;
 $this-&gt;x18 = 1234567890;
 $this-&gt;x19 = 1234567890;
 $this-&gt;x20 = 1234567890;
 $this-&gt;x21 = 1234567890;
 $this-&gt;x22 = 1234567890;
 $this-&gt;x23 = 1234567890;
 $this-&gt;x24 = 1234567890;
 $this-&gt;x25 = 1234567890;
 $this-&gt;x26 = 1234567890;
 $this-&gt;x27 = 1234567890;
 $this-&gt;x28 = 1234567890;
 $this-&gt;x29 = 1234567890;
 $this-&gt;x30 = 1234567890;
 $this-&gt;x31 = 1234567890;
 $this-&gt;x32 = 1234567890;
 $this-&gt;x33 = 1234567890;
 $this-&gt;x34 = 1234567890;
 $this-&gt;x35 = 1234567890;
 $this-&gt;x36 = 1234567890;
 $this-&gt;x37 = 1234567890;
 $this-&gt;x38 = 1234567890;
 $this-&gt;x39 = 1234567890;
 $this-&gt;x40 = 1234567890;
 $this-&gt;x41 = 1234567890;
 $this-&gt;x42 = 1234567890;
 $this-&gt;x43 = 1234567890;
 $this-&gt;x44 = 1234567890;
 $this-&gt;x45 = 1234567890;
 $this-&gt;x46 = 1234567890;
 $this-&gt;x47 = 1234567890;
 $this-&gt;x48 = 1234567890;
 $this-&gt;x49 = 1234567890;
 $this-&gt;x50 = 1234567890;
 $this-&gt;x51 = 1234567890;
 $this-&gt;x52 = 1234567890;
 $this-&gt;x53 = 1234567890;
 $this-&gt;x54 = 1234567890;
 $this-&gt;x55 = 1234567890;
 $this-&gt;x56 = 1234567890;
 $this-&gt;x57 = 1234567890;
 $this-&gt;x58 = 1234567890;
 $this-&gt;x59 = 1234567890;
 $this-&gt;x60 = 1234567890;
 $this-&gt;x61 = 1234567890;
 $this-&gt;x62 = 1234567890;
 $this-&gt;x63 = 1234567890;
 $this-&gt;x64 = 1234567890;
 $this-&gt;x65 = 1234567890;
 $this-&gt;x66 = 1234567890;
 $this-&gt;x67 = 1234567890;
 $this-&gt;x68 = 1234567890;
 $this-&gt;x69 = 1234567890;
 $this-&gt;x70 = 1234567890;
 $this-&gt;x71 = 1234567890;
 $this-&gt;x72 = 1234567890;
 $this-&gt;x73 = 1234567890;
 $this-&gt;x74 = 1234567890;
 $this-&gt;x75 = 1234567890;
 $this-&gt;x76 = 1234567890;
 $this-&gt;x77 = 1234567890;
 $this-&gt;x78 = 1234567890;
 $this-&gt;x79 = 1234567890;
 $this-&gt;x80 = 1234567890;
 $this-&gt;x81 = 1234567890;
 $this-&gt;x82 = 1234567890;
 $this-&gt;x83 = 1234567890;
 $this-&gt;x84 = 1234567890;
 $this-&gt;x85 = 1234567890;
 $this-&gt;x86 = 1234567890;
 $this-&gt;x87 = 1234567890;
 $this-&gt;x88 = 1234567890;
 $this-&gt;x89 = 1234567890;
 $this-&gt;x90 = 1234567890;
 $this-&gt;x91 = 1234567890;
 $this-&gt;x92 = 1234567890;
 $this-&gt;x93 = 1234567890;
 $this-&gt;x94 = 1234567890;
 $this-&gt;x95 = 1234567890;
 $this-&gt;x96 = 1234567890;
 $this-&gt;x97 = 1234567890;
 $this-&gt;x98 = 1234567890;
 $this-&gt;x99 = 1234567890;
 }
}

$repeat = 300;

$arr = array();
for ($i = 0; $i &lt; 100; $i++) {
 $arr[] = new XTest;
}
?&gt;
```

&lt;p&gt;APC:&lt;/p&gt;</description></item></channel></rss>