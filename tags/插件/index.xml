<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>插件 on 晴耕雨讀</title><link>http://0x3f.org/tags/%E6%8F%92%E4%BB%B6/</link><description>Recent content in 插件 on 晴耕雨讀</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>© 淘气 2022</copyright><lastBuildDate>Wed, 24 Feb 2016 11:06:00 +0000</lastBuildDate><atom:link href="http://0x3f.org/tags/%E6%8F%92%E4%BB%B6/index.xml" rel="self" type="application/rss+xml"/><item><title>FastFold：Vim折叠功能的救赎</title><link>http://0x3f.org/posts/fastfold-for-vim/</link><pubDate>Wed, 24 Feb 2016 11:06:00 +0000</pubDate><guid>http://0x3f.org/posts/fastfold-for-vim/</guid><description>设置Vim的折叠规则为syntax存在两个问题。一是如果源码中有大量折叠区域，在插入模式中输入会变得很卡。二是刚输入一个折叠区域的起始符号，后面所有的折叠都会被打开。
第一个问题是因为Vim的syntax折叠规则处理过于低效。而后一个问题对于所有自动折叠规则都会存在，原因是Vim对折叠的更新过早。
传统的解决办法是将折叠规则置为manual，并在合适的时机重置为syntax或其它相应规则。但是工作繁复而且往往问题很多。
FastFold是遵循上面所说的方法解决这些问题的插件，不过默认会在所有与折叠相关的时机更新折叠，会导致相关的操作变慢，例如zc和zo时都会有明显的卡顿。鉴于其它时机对折叠的更新已经足够及时，可以通过配置取消受在到明显影响的时机更新折叠：
1 2 &amp;#34; FastFold只在za/zA/zx/zX时更新折叠信息 let g:fastfold_fold_command_suffixes = [&amp;#39;x&amp;#39;,&amp;#39;X&amp;#39;,&amp;#39;a&amp;#39;,&amp;#39;A&amp;#39;]</description></item><item><title>FZF: 又一个文件模糊查询工具</title><link>http://0x3f.org/posts/fzf-yet-another-fuzzy-finder/</link><pubDate>Mon, 01 Feb 2016 11:42:00 +0000</pubDate><guid>http://0x3f.org/posts/fzf-yet-another-fuzzy-finder/</guid><description>fzf是个独立的命令行工具，索引速度很快，可以通过fzf-vim配合使用。
特性 功能支持还是比较全的：
Command List Files [PATH] Files (similar to :FZF ) GitFiles Git files Buffers Open buffers Colors Color schemes Ag [PATTERN] {ag}{5} search result (ALT-A to select all, ALT-D to deselect all) Lines Lines in loaded buffers BLines Lines in the current buffer Tags Tags in the project ( ctags -R ) BTags Tags in the current buffer Marks Marks Windows Windows Locate PATTERN locate command output History v:oldfiles and open buffers History: Command history History/ Search history Snippets Snippets ({UltiSnips}{6}) Commits Git commits (requires {fugitive.</description></item><item><title>ctags vs gtags vs phpctags</title><link>http://0x3f.org/posts/ctags-vs-gtags-vs-phpctags/</link><pubDate>Fri, 29 Jan 2016 17:55:00 +0000</pubDate><guid>http://0x3f.org/posts/ctags-vs-gtags-vs-phpctags/</guid><description>这两天把源码分析工具从ctags向gtags迁移，另外尝试了一下phpctags。
之前用ctags有两个问题，一个是如果同一tag有多个定义，按Ctrl+]只能跳转到第一处。另一个是用cscope查询tag的调用记录时，有些tag查不到结果。
几年前接触过gtags，因为当时还不支持宇宙最好语言，所以没用。这次测试了一下，前面两个ctags的问题都可以解决。
安装后需要手工拷贝gtags.vim和gtags-cscope.vim到vim的plugin目录，然后配置如下：
1 2 3 4 5 6 7 let Gtags_Close_When_Single = 1 let Gtags_Auto_Update = 0 let g:cscope_silent = 1 au FileType php,python,c,cpp,javascript,go map &amp;lt;C-]&amp;gt; :Gtags&amp;lt;CR&amp;gt;&amp;lt;CR&amp;gt; au FileType php,python,c,cpp,javascript,go map &amp;lt;C-[&amp;gt; :Gtags -r&amp;lt;CR&amp;gt;&amp;lt;CR&amp;gt; nnoremap &amp;lt;leader&amp;gt;&amp;lt;C-]&amp;gt; :execute &amp;#39;Unite gtags/def:&amp;#39;.expand(&amp;#39;&amp;lt;cword&amp;gt;&amp;#39;)&amp;lt;CR&amp;gt; nnoremap &amp;lt;leader&amp;gt;&amp;lt;C-[&amp;gt; :execute &amp;#39;Unite gtags/ref:&amp;#39;.expand(&amp;#39;&amp;lt;cword&amp;gt;&amp;#39;)&amp;lt;CR&amp;gt; 其它选项参见前面两个文件里的注释。
另外尝试了一下phpctags，据说和ctags兼容并对php做了优化。实际使用效果和ctags没发现有什么区别，不过tagbar-phpctags倒是比tagbar用ctags时效果更好。</description></item><item><title>How to Make YouCompleteMe Compatible with UltiSnips</title><link>http://0x3f.org/posts/make-youcompleteme-ultisnips-compatible/</link><pubDate>Thu, 23 May 2013 11:26:00 +0000</pubDate><guid>http://0x3f.org/posts/make-youcompleteme-ultisnips-compatible/</guid><description>I replaced NeoComplCache with YouCompleteMe today. The main reason is for the auto-complete feature and the fast speed. Besides, it seems that YCM provides more features than NCC.
Although NCC can also do auto-completions, it was so slow that I had to turn it off. For a long time, I have been doing completions by triggering the TAB key manually. YCM is much faster in most conditions, but I found it is also slow for C source files.</description></item><item><title>Vundle vs Pathogen</title><link>http://0x3f.org/posts/vundle-vs-pathogen/</link><pubDate>Wed, 22 May 2013 21:33:00 +0000</pubDate><guid>http://0x3f.org/posts/vundle-vs-pathogen/</guid><description>I have been using Pathogen for a long time and I am happy with it. But it seems that more and more Vim scripts are recommending to use Vundle in their install references. So I made a study today, the conclusion is, although almost all the articles I found from Google have a positive attitude on Vundle, I still prefer Pathogen.
Most supporters of Vundle praise it for one reason, that is, it can install and update scripts automatically, which is lacked by Pathogen.</description></item><item><title>MatchTag.vim: 高亮配对的HTML标签</title><link>http://0x3f.org/posts/highlighting-paired-html-tags-using-matchtag-vim/</link><pubDate>Wed, 23 Nov 2011 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/highlighting-paired-html-tags-using-matchtag-vim/</guid><description>两年前我曾在Vim邮件列表里问怎样高亮配对的HTML标签，但没能解决。今天意外收到一封邮件，Linqq童鞋在StackOverflow上问了同样的问题，有人就写了这个插件。
Posted via UltraBlog.vim.</description></item></channel></rss>