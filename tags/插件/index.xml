<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>插件 on 晴耕雨讀</title><link>http://0x3f.org/tags/%E6%8F%92%E4%BB%B6/</link><description>Recent content in 插件 on 晴耕雨讀</description><generator>Hugo</generator><language>zh-cn</language><copyright>© 淘气 2022</copyright><lastBuildDate>Wed, 24 Feb 2016 11:06:00 +0000</lastBuildDate><atom:link href="http://0x3f.org/tags/%E6%8F%92%E4%BB%B6/index.xml" rel="self" type="application/rss+xml"/><item><title>FastFold：Vim折叠功能的救赎</title><link>http://0x3f.org/posts/fastfold-for-vim/</link><pubDate>Wed, 24 Feb 2016 11:06:00 +0000</pubDate><guid>http://0x3f.org/posts/fastfold-for-vim/</guid><description>&lt;p>设置Vim的折叠规则为syntax存在两个问题。一是如果源码中有大量折叠区域，在插入模式中输入会变得很卡。二是刚输入一个折叠区域的起始符号，后面所有的折叠都会被打开。&lt;/p>
&lt;p>第一个问题是因为Vim的syntax折叠规则处理过于低效。而后一个问题对于所有自动折叠规则都会存在，原因是Vim对折叠的更新过早。&lt;/p>
&lt;p>传统的解决办法是将折叠规则置为manual，并在合适的时机重置为syntax或其它相应规则。但是工作繁复而且往往问题很多。&lt;/p>
&lt;p>&lt;a href="https://github.com/Konfekt/FastFold">FastFold&lt;/a>是遵循上面所说的方法解决这些问题的插件，不过默认会在所有与折叠相关的时机更新折叠，会导致相关的操作变慢，例如zc和zo时都会有明显的卡顿。鉴于其它时机对折叠的更新已经足够及时，可以通过配置取消受在到明显影响的时机更新折叠：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-vim" data-lang="vim">&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;#34; FastFold只在za/zA/zx/zX时更新折叠信息&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">let&lt;/span> &lt;span class="nx">g&lt;/span>:&lt;span class="nx">fastfold_fold_command_suffixes&lt;/span> &lt;span class="p">=&lt;/span> [&lt;span class="s1">&amp;#39;x&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;X&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;A&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>FZF: 又一个文件模糊查询工具</title><link>http://0x3f.org/posts/fzf-yet-another-fuzzy-finder/</link><pubDate>Mon, 01 Feb 2016 11:42:00 +0000</pubDate><guid>http://0x3f.org/posts/fzf-yet-another-fuzzy-finder/</guid><description>&lt;p>&lt;a href="https://github.com/junegunn/fzf">fzf&lt;/a>是个独立的命令行工具，索引速度很快，可以通过&lt;a href="https://github.com/junegunn/fzf.vim">fzf-vim&lt;/a>配合使用。&lt;/p>
&lt;h2 id="特性">特性&lt;/h2>
&lt;p>功能支持还是比较全的：&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Command&lt;/th>
 &lt;th style="text-align: left">List&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">Files [PATH]&lt;/td>
 &lt;td style="text-align: left">Files (similar to &lt;code>:FZF&lt;/code> )&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">GitFiles&lt;/td>
 &lt;td style="text-align: left">Git files&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Buffers&lt;/td>
 &lt;td style="text-align: left">Open buffers&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Colors&lt;/td>
 &lt;td style="text-align: left">Color schemes&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Ag [PATTERN]&lt;/td>
 &lt;td style="text-align: left">{ag}{5} search result (ALT-A to select all, ALT-D to deselect all)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Lines&lt;/td>
 &lt;td style="text-align: left">Lines in loaded buffers&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">BLines&lt;/td>
 &lt;td style="text-align: left">Lines in the current buffer&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Tags&lt;/td>
 &lt;td style="text-align: left">Tags in the project ( &lt;code>ctags -R&lt;/code> )&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">BTags&lt;/td>
 &lt;td style="text-align: left">Tags in the current buffer&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Marks&lt;/td>
 &lt;td style="text-align: left">Marks&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Windows&lt;/td>
 &lt;td style="text-align: left">Windows&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Locate PATTERN&lt;/td>
 &lt;td style="text-align: left">&lt;code>locate&lt;/code> command output&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">History&lt;/td>
 &lt;td style="text-align: left">&lt;code>v:oldfiles&lt;/code> and open buffers&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">History:&lt;/td>
 &lt;td style="text-align: left">Command history&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">History/&lt;/td>
 &lt;td style="text-align: left">Search history&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Snippets&lt;/td>
 &lt;td style="text-align: left">Snippets ({UltiSnips}{6})&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Commits&lt;/td>
 &lt;td style="text-align: left">Git commits (requires {fugitive.vim}{7})&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">BCommits&lt;/td>
 &lt;td style="text-align: left">Git commits for the current buffer&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Commands&lt;/td>
 &lt;td style="text-align: left">Commands&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Maps&lt;/td>
 &lt;td style="text-align: left">Normal mode mappings&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Helptags&lt;/td>
 &lt;td style="text-align: left">Help tags [1]&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="结论">结论&lt;/h2>
&lt;p>fzf需要在终端中执行，在vim中使用时需要另外启动一个xterm实例，UI的割裂感很强，而且xterm本身的操性你懂的。另外Tags模式需要两次回车。所以暂不会用它取代ctrlp和unite。&lt;/p></description></item><item><title>ctags vs gtags vs phpctags</title><link>http://0x3f.org/posts/ctags-vs-gtags-vs-phpctags/</link><pubDate>Fri, 29 Jan 2016 17:55:00 +0000</pubDate><guid>http://0x3f.org/posts/ctags-vs-gtags-vs-phpctags/</guid><description>&lt;p>这两天把源码分析工具从ctags向gtags迁移，另外尝试了一下phpctags。&lt;/p>
&lt;p>之前用ctags有两个问题，一个是如果同一tag有多个定义，按Ctrl+]只能跳转到第一处。另一个是用cscope查询tag的调用记录时，有些tag查不到结果。&lt;/p>
&lt;p>几年前接触过gtags，因为当时还不支持宇宙最好语言，所以没用。这次测试了一下，前面两个ctags的问题都可以解决。&lt;/p>
&lt;p>安装后需要手工拷贝gtags.vim和gtags-cscope.vim到vim的plugin目录，然后配置如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-vim" data-lang="vim">&lt;span class="line">&lt;span class="cl">&lt;span class="k">let&lt;/span> &lt;span class="nx">Gtags_Close_When_Single&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">let&lt;/span> &lt;span class="nx">Gtags_Auto_Update&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">let&lt;/span> &lt;span class="nx">g&lt;/span>:&lt;span class="nx">cscope_silent&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">au&lt;/span> &lt;span class="nx">FileType&lt;/span> &lt;span class="nx">php&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">python&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">cpp&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">javascript&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">go&lt;/span> &lt;span class="k">map&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="p">-&lt;/span>]&lt;span class="p">&amp;gt;&lt;/span> :&lt;span class="nx">Gtags&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nx">CR&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nx">CR&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">au&lt;/span> &lt;span class="nx">FileType&lt;/span> &lt;span class="nx">php&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">python&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">cpp&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">javascript&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">go&lt;/span> &lt;span class="k">map&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="p">-&lt;/span>[&lt;span class="p">&amp;gt;&lt;/span> :&lt;span class="nx">Gtags&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nx">CR&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nx">CR&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">nnoremap&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nx">leader&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="p">-&lt;/span>]&lt;span class="p">&amp;gt;&lt;/span> :&lt;span class="k">execute&lt;/span> &lt;span class="s1">&amp;#39;Unite gtags/def:&amp;#39;&lt;/span>.&lt;span class="nx">expand&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;&amp;lt;cword&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">)&amp;lt;&lt;/span>&lt;span class="nx">CR&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">nnoremap&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nx">leader&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="p">-&lt;/span>[&lt;span class="p">&amp;gt;&lt;/span> :&lt;span class="k">execute&lt;/span> &lt;span class="s1">&amp;#39;Unite gtags/ref:&amp;#39;&lt;/span>.&lt;span class="nx">expand&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;&amp;lt;cword&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">)&amp;lt;&lt;/span>&lt;span class="nx">CR&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pr</description></item><item><title>How to Make YouCompleteMe Compatible with UltiSnips</title><link>http://0x3f.org/posts/make-youcompleteme-ultisnips-compatible/</link><pubDate>Thu, 23 May 2013 11:26:00 +0000</pubDate><guid>http://0x3f.org/posts/make-youcompleteme-ultisnips-compatible/</guid><description>&lt;p>I replaced &lt;a href="https://github.com/Shougo/neocomplcache">NeoComplCache&lt;/a> with &lt;a href="https://github.com/Valloric/YouCompleteMe">YouCompleteMe&lt;/a> today. The main reason is for the auto-complete feature and the fast speed. Besides, it seems that YCM provides more features than NCC.&lt;/p>
&lt;p>Although NCC can also do auto-completions, it was so slow that I had to turn it off. For a long time, I have been doing completions by triggering the TAB key manually. YCM is much faster in most conditions, but I found it is also slow for C source files. Moreover, with the power of &lt;a href="https://github.com/davidhalter/jedi">jedi&lt;/a>, YCM makes completions of python sources much wiser, which is very convenient.&lt;/p></description></item><item><title>Vundle vs Pathogen</title><link>http://0x3f.org/posts/vundle-vs-pathogen/</link><pubDate>Wed, 22 May 2013 21:33:00 +0000</pubDate><guid>http://0x3f.org/posts/vundle-vs-pathogen/</guid><description>&lt;p>I have been using Pathogen for a long time and I am happy with it. But it seems that more and more Vim scripts are recommending to use Vundle in their install references. So I made a study today, the conclusion is, although almost all the articles I found from Google have a positive attitude on Vundle, I still prefer Pathogen.&lt;/p>
&lt;p>Most supporters of Vundle praise it for one reason, that is, it can install and update scripts automatically, which is lacked by Pathogen. Yes, since Vundle leverages the vim-scripts repository on GitHub, it is really easier to do so than Pathogen. But the disadvantage is as good as the advantage. I found that the vim-scripts repo is not updated in time, the latest activity was carried out a month ago ! As an OCD patient of updating, I cannot tolerate old versions of vim scripts. Although that Vundle supports using scripts&amp;rsquo; git repos of their own (either on GitHub or other places), there is still a problem, what if authors commit broken code to the master brunch ?&lt;/p></description></item><item><title>MatchTag.vim: 高亮配对的HTML标签</title><link>http://0x3f.org/posts/highlighting-paired-html-tags-using-matchtag-vim/</link><pubDate>Wed, 23 Nov 2011 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/highlighting-paired-html-tags-using-matchtag-vim/</guid><description>&lt;p>两年前我曾在&lt;a href="http://vim.1045645.n5.nabble.com/How-can-Vim-highlight-the-matching-tag-when-I-put-the-cursor-on-the-other-one-in-a-pair-of-tags-td1177554.html">Vim邮件列表&lt;/a>里问怎样高亮配对的HTML标签，但没能解决。今天意外收到一封邮件，Linqq童鞋在&lt;a href="http://stackoverflow.com/questions/8168320/can-vim-highlight-matching-html-tags-like-notepad">StackOverflow&lt;/a>上问了同样的问题，有人就写了这个&lt;a href="http://www.vim.org/scripts/script.php?script_id=3818">插件&lt;/a>。&lt;/p>

&lt;p>&lt;a href="https://picasaweb.google.com/lh/photo/wGB584-nLWrQRHCQ7qgADdMTjNZETYmyPJy0liipFm0?feat=embedwebsite">&lt;img src="https://lh3.googleusercontent.com/-ojoHK5ST944/Ts0QmwHOCXI/AAAAAAAAB1Q/ye0ko4Ob-gc/s800/2011-11-23.22%25253A40%25253A58.%2525E6%252593%2525B7%2525E5%25258F%252596%2525E9%252581%2525B8%2525E5%25258F%252596%2525E5%25258D%252580%2525E5%25259F%25259F.01.png" height="103" width="268" />&lt;/a>&lt;/p>

&lt;p>Posted via &lt;a href="http://0x3f.org/posts/ultrablog-as-an-ultimate-vim-blogging-plugin/">UltraBlog.vim&lt;/a>.&lt;/p></description></item></channel></rss>