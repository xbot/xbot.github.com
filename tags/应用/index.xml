<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>应用 on 晴耕雨讀</title><link>http://0x3f.org/tags/%E5%BA%94%E7%94%A8/</link><description>Recent content in 应用 on 晴耕雨讀</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>© 淘气 2021</copyright><lastBuildDate>Wed, 18 Jun 2014 14:03:00 +0000</lastBuildDate><atom:link href="http://0x3f.org/tags/%E5%BA%94%E7%94%A8/index.xml" rel="self" type="application/rss+xml"/><item><title>使用lsyncd同步文件</title><link>http://0x3f.org/posts/live-syncing-daemon/</link><pubDate>Wed, 18 Jun 2014 14:03:00 +0000</pubDate><guid>http://0x3f.org/posts/live-syncing-daemon/</guid><description>lsyncd全称“Live Syncing Daemon”，是Linux下的文件自动同步工具，同时支持SSH、rsync的实现方式。相对于rsync+inotify，它速度更快，也更稳定。
对于SSH的方式，需要目标机器中已启动SSHD，并把源机器上的公钥加到目标机器root用户的authorized_keys中，私钥应放在源机器上运行lsyncd的用户的.ssh目录中，密钥放错了用户，会导致无法同步。
然后就是在源机器上创建配置文件，lsyncd的配置文件是个lua脚本：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 settings{ pidfile = &amp;#34;/var/log/lsyncd/lsyncd.pid&amp;#34;, logfile = &amp;#34;/var/log/lsyncd/lsyncd.log&amp;#34;, statusFile = &amp;#34;/var/log/lsyncd/lsyncd-status.log&amp;#34;, statusInterval = 1, maxDelays = 1, -- nodaemon = true, } sync{ default.rsyncssh, source = &amp;#34;/home/monk/workspace&amp;#34;, host = &amp;#34;192.168.1.3&amp;#34;, targetdir = &amp;#34;/var/www/workspace&amp;#34;, exclude={ &amp;#34;.*&amp;#34;, &amp;#34;*.tmp&amp;#34; }, rsync = { compress = false, _extra = {&amp;#34;--bwlimit=50000&amp;#34;}, } } 然后启动lsyncd：</description></item></channel></rss>