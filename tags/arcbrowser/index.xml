<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ArcBrowser on 晴耕雨讀</title><link>http://0x3f.org/tags/arcbrowser/</link><description>Recent content in ArcBrowser on 晴耕雨讀</description><generator>Hugo</generator><language>zh-cn</language><copyright>© 淘气 2022</copyright><lastBuildDate>Wed, 19 Oct 2022 23:02:50 +0800</lastBuildDate><atom:link href="http://0x3f.org/tags/arcbrowser/index.xml" rel="self" type="application/rss+xml"/><item><title>用 Hammerspoon 收集 Arc 浏览器网页到 OmniFocus 的方法</title><link>http://0x3f.org/posts/how-to-collect-webpage-from-the-arc-browser-to-omnifocus/</link><pubDate>Wed, 19 Oct 2022 23:02:50 +0800</pubDate><guid>http://0x3f.org/posts/how-to-collect-webpage-from-the-arc-browser-to-omnifocus/</guid><description>我用 Hammerspoon 收集网页到 OmniFocus ，它的 SendToOmniFocus 对 Chrome 家族的浏览器有原生的支持，但并不适用于 Arc 浏览器。
看 SendToOmniFocus 的源码是用 Apple Script 获取 Chrome 家族浏览器中网页的信息的，但最初我没有解决怎样用同样的办法拿到 Arc 浏览器网页信息的问题。所以采取通过剪贴板中转的方式实现。
首先配置 Surfingkeys 实现把网页信息组装成特定格式复制到剪贴板：
1 2 3 4 5 6 7 8 9 10 11 mapkey(&amp;#39;yO&amp;#39;, &amp;#39;Copy OmniFocus sensible info.&amp;#39;, yankOmniFocusSensibleInfo); function yankOmniFocusSensibleInfo() { var info_arr = []; info_arr.push(&amp;#34;#omnifocus_sensible&amp;#34;); info_arr.push(document.title); info_arr.push(window.location.href); Clipboard.write(info_arr.join(&amp;#34;\n&amp;#34;)); } 然后在 Hammerspoon 中监听剪贴板，一旦发现特定格式的文本，就调用 Apple Script 填充解析到的网页信息到 OmniFocus 的对话框：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 -- Interpolate table values into a string -- From http://lua-users.</description></item></channel></rss>