<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>输入法 - 标签 - 晴耕雨讀</title><link>http://0x3f.org/tags/%E8%BE%93%E5%85%A5%E6%B3%95/</link><description>输入法 - 标签 - 晴耕雨讀</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 11 Mar 2017 23:42:11 +0000</lastBuildDate><atom:link href="http://0x3f.org/tags/%E8%BE%93%E5%85%A5%E6%B3%95/" rel="self" type="application/rss+xml"/><item><title>鼠须管实现简繁转换的方法</title><link>http://0x3f.org/post/switch-cn-tw-in-rime/</link><pubDate>Sat, 11 Mar 2017 23:42:11 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/switch-cn-tw-in-rime/</guid><description><![CDATA[<p>鼠须管默认输出繁体，可以通过自带的过滤器转换成简体。这样做是科学的，因为繁体的异体字较多，从简转繁容易转错。</p>
<p>对于只有简体的码表，可以转换成繁体，再通过过滤器转简体，但是会导致在简体状态下无法自造词。所以最好的办法是给繁体单独配一个码表。</p>
<p>步骤为：</p>
<ol>
<li>复制简体码表的schema.yaml和dict.yaml文件</li>
<li>修改两个yaml文件的名称</li>
<li>文件内容中和文件名对应的内容也都改为和新文件名一致</li>
<li>修改schema.yaml中输入法的名称，使之和简体码表区分开</li>
<li>转换dict.yaml中的内容到繁体</li>
<li>重新部署</li>
</ol>
<p>如果需要给繁体码表增加临时输出简体的功能，方法如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-yaml" data-lang="yaml"><span class="c"># 在码表的schema.yaml中</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="c"># switches下增加</span><span class="w">
</span><span class="w">  </span>- <span class="k">name</span><span class="p">:</span><span class="w"> </span>simplification<span class="w">
</span><span class="w">    </span><span class="k">states</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w"> </span>汉字<span class="p">,</span><span class="w"> </span>汉字<span class="w"> </span><span class="p">]</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="c"># engine下增加</span><span class="w">
</span><span class="w">  </span><span class="k">filters</span><span class="p">:</span><span class="w">
</span><span class="w">    </span>- simplifier<span class="w">
</span><span class="w">    </span>- uniquifier<span class="w">
</span><span class="w">
</span><span class="w"></span><span class="c">#key_binder下增加</span><span class="w">
</span><span class="w">    </span>- {<span class="w"> </span><span class="k">when: always, accept: Control+Shift+4, toggle</span><span class="p">:</span><span class="w"> </span>simplification<span class="w"> </span>}<span class="w">
</span><span class="w">    </span>- {<span class="w"> </span><span class="k">when: always, accept: Control+Shift+dollar, toggle</span><span class="p">:</span><span class="w"> </span>simplification<span class="w"> </span>}<span class="w">
</span></code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>升级fcitx到4.0</title><link>http://0x3f.org/post/upgraded-to-fcitx4/</link><pubDate>Sat, 20 Nov 2010 00:00:00 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/upgraded-to-fcitx4/</guid><description><![CDATA[<p>虽然是个大版本，但4.0在实际功能上并没有太大的进步。新版本相对于3.x增加的主要特性是：</p>
<ol>
  <li>支持皮肤</li>
  <li>图形界面的配置工具</li>
  <li>增加系统托盘图标</li>
  <li>托盘图标和输入条提供右键菜单，如皮肤切换、选择输入法等</li>
  <li>放弃GBK编码，改用UTF-8编码</li>
  <li>拼音支持多词库</li>
  <li>一系列细节功能及Bug修复</li>
</ol>
<p>最主要的特性只有前两个，可见fcitx 4.0只是这个项目涅槃后的一个新的起点，象征意义大于实际意义，尤其对于码表输入法用户来说是这样。三年前我就<a href="http://0x3f.org/?p=185">说过</a>，fcitx在用户造词上有个致命缺陷，就是对于多音字它总是使用字母表中声母靠前的编码，对于音码或者音形码输入法来说，这样造出来的词的编码经常会是错的，更糟糕的是用户还不容易自行修改词组编码。三年后的今天，新版本并没有解决这个问题。</p>
<p>此外，需要注意的是，新版本对界面和易用性的改进也带来一些负面的影响，fcitx不再是当年以轻巧著称的那只小企鹅了，在我这里，它的内存占用达到了26M，所幸反应速度仍然很快。</p>
<p>三年前，由于众所周知的原因，fcitx的路线图显得非常混乱，几个新版本都非常不稳定，所以我不再使用源中的版本，转而编译安装了新版本中相对稳定的黑色星期五版，不知不觉中三年过去了，想到一直用著这个版本就这么过来了，很感慨。要卸载编译安装的程序就得用源码重新configure一下再make uninstall，所幸还能在<a href="http://www.fcitx.org/download/fcitx-3.5-BlackFri.tar.bz2">这里</a>找到这个版本。</p>
<p>Archlinux下安装AUR中的fcitx-config时报如下错误：</p>
<blockquote>
ERROR: certificate common name “*.github.com” doesn’t match requested host name “github.com”.
</blockquote>
<p>需要修改/etc/makepkg.conf，使wget在下载源码时不做安全验证：</p>
<blockquote>
# 增加--no-check-certificate参数
DLAGENTS=('ftp::/usr/bin/wget -c --passive-ftp -t 3 --waitretry=3'
          'http::/usr/bin/wget -c -t 3 --waitretry=3 --no-check-certificate'
          'https::/usr/bin/wget -c -t 3 --waitretry=3 --no-check-certificate'
          'rsync::/usr/bin/rsync -z'
          'scp::/usr/bin/scp -C')
</blockquote>
<p>新版本的稳定性不如黑色星期五版，如果把简繁转换热键修改为ALT+J，使用时会导致fcitx崩溃。加之实际功能的改进不大，所以是否升级就无可无不可了。</p>
]]></description></item></channel></rss>