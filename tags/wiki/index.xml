<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Wiki on 晴耕雨讀</title><link>http://0x3f.org/tags/wiki/</link><description>Recent content in Wiki on 晴耕雨讀</description><generator>Hugo</generator><language>zh-cn</language><copyright>© 2007-2024 鬼马妖刀</copyright><lastBuildDate>Mon, 10 Apr 2017 16:36:27 +0000</lastBuildDate><atom:link href="http://0x3f.org/tags/wiki/index.xml" rel="self" type="application/rss+xml"/><item><title>编写接口文档的最佳实践</title><link>http://0x3f.org/posts/the-best-practice-of-writing-api-documents/</link><pubDate>Mon, 10 Apr 2017 16:36:27 +0000</pubDate><guid>http://0x3f.org/posts/the-best-practice-of-writing-api-documents/</guid><description>&lt;p&gt;&lt;img src="https://wx1.sinaimg.cn/large/006tNbRwly1fwvx9m0n7jj30rr0m8gpa.jpg" alt=""&gt;&lt;/p&gt;
&lt;h2 id="前言"&gt;前言&lt;/h2&gt;
&lt;p&gt;传统的做法是用office写接口文档，这种方式的缺点很多：&lt;/p&gt;
&lt;h3 id="格式混乱"&gt;格式混乱&lt;/h3&gt;
&lt;p&gt;事实上，所有的传统富文本文档都存在这个问题，富文本的跨平台兼容性很差，很容易造成格式错乱。&lt;/p&gt;
&lt;h3 id="版本管理困难"&gt;版本管理困难&lt;/h3&gt;
&lt;p&gt;依赖文件系统管理文档是很落后的做法，很难保证手头的文档是最新的版本。&lt;/p&gt;
&lt;h3 id="兼容性差"&gt;兼容性差&lt;/h3&gt;
&lt;p&gt;不是所有人都用windows。&lt;/p&gt;
&lt;h3 id="低效"&gt;低效&lt;/h3&gt;
&lt;p&gt;对效率的负面影响很大程度上已经包含在前面几项里。此外，编辑工具的臃肿、编辑内容的同时还要调整样式、缺少全文检索等，也是导致效率下降的原因。&lt;/p&gt;
&lt;h2 id="理想情况"&gt;理想情况&lt;/h2&gt;
&lt;p&gt;理想的接口文档应该有以下特征：&lt;/p&gt;
&lt;h3 id="方便创作"&gt;方便创作&lt;/h3&gt;
&lt;p&gt;文档编辑最重要的是文档的内容，而不是编辑操作本身。所以编写文档的过程应该是简单快捷的，而且最好不需要额外的学习成本。&lt;/p&gt;
&lt;h3 id="排版简洁规范"&gt;排版简洁规范&lt;/h3&gt;
&lt;p&gt;技术文档的排版，简洁规范是最重要的，花哨的排版会降低效率。&lt;/p&gt;
&lt;h3 id="方便查阅"&gt;方便查阅&lt;/h3&gt;
&lt;p&gt;应该有目录或者大纲视图，并且可以方便地全文检索。&lt;/p&gt;
&lt;h3 id="在线协作"&gt;在线协作&lt;/h3&gt;
&lt;p&gt;传统的离线文档不方便协作。&lt;/p&gt;
&lt;h3 id="多端兼容"&gt;多端兼容&lt;/h3&gt;
&lt;p&gt;允许在大多数常见平台编辑和使用文档。&lt;/p&gt;
&lt;h3 id="版本管理"&gt;版本管理&lt;/h3&gt;
&lt;p&gt;可以查看什么人在什么时间改了哪些内容。&lt;/p&gt;
&lt;h3 id="交互式文档"&gt;交互式文档&lt;/h3&gt;
&lt;p&gt;所见即所得。可以修改参数、发送请求并查看接口返回值。&lt;/p&gt;
&lt;h3 id="可订阅"&gt;可订阅&lt;/h3&gt;
&lt;p&gt;可以给接口打标签。用户可以订阅任意标签下的接口变更，也可以针对接口订阅。&lt;/p&gt;
&lt;h3 id="自动生成"&gt;自动生成&lt;/h3&gt;
&lt;p&gt;如果代码的可读性足够好，何必浪费时间写文档？或者至少可以自动生成。&lt;/p&gt;
&lt;h2 id="当前实践"&gt;当前实践&lt;/h2&gt;
&lt;p&gt;理想很丰满，但是目前还没有能满足以上所有需求的解决方案。权衡之下，markdown和wiki是目前比较合适的方案。&lt;/p&gt;
&lt;h3 id="markdown"&gt;markdown&lt;/h3&gt;
&lt;p&gt;用markdown写文档有以下特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;适合单文档形式&lt;/li&gt;
&lt;li&gt;主流git托管平台都支持&lt;/li&gt;
&lt;li&gt;适合个人创作&lt;/li&gt;
&lt;li&gt;适合小型项目、需要移交开发成果的项目&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面是用markdown写的接口文档的例子：
&lt;img src="https://wx2.sinaimg.cn/large/006tNbRwly1fwvx9zyd4tj30h81qbn05.jpg" alt=""&gt;&lt;/p&gt;
&lt;p&gt;主流markdown编辑器在转换过程中会为标题添加锚点，利用这个特性可以实现从接口列表跳转到接口详情。&lt;/p&gt;
&lt;h4 id="最佳工具"&gt;最佳工具&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://www.zybuluo.com"&gt;Cmd Markdown&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;美观&lt;/li&gt;
&lt;li&gt;跨平台&lt;/li&gt;
&lt;li&gt;编辑操作支持Vim模式&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="wiki"&gt;wiki&lt;/h3&gt;
&lt;p&gt;用wiki写文档有这些特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方便多层级文档&lt;/li&gt;
&lt;li&gt;需要自己搭建平台&lt;/li&gt;
&lt;li&gt;适合团队创作&lt;/li&gt;
&lt;li&gt;适合长期、大型项目&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="最佳工具-1"&gt;最佳工具&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://www.dokuwiki.org"&gt;dokuwiki&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;刚刚好&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="结论"&gt;结论&lt;/h2&gt;
&lt;p&gt;综上，小型的、托管在主流git平台的项目适合用markdown，公司级项目用wiki更好。但这还达不到理想的标准，需要继续探索更好的解决方案。&lt;/p&gt;</description></item><item><title>升级到wordpress3.0</title><link>http://0x3f.org/posts/after-upgrading-to-wordpress30/</link><pubDate>Sat, 19 Jun 2010 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/after-upgrading-to-wordpress30/</guid><description>&lt;p&gt;昨天发现wordpress3.0已经发布，就顺手升级了。&lt;/p&gt;
&lt;p&gt;略看了一下更新内容，几乎没什么让我感兴趣的，但与MU版本的合并堪称WP历史上的一个里程碑，从此一套WP可以支持创建多个博客了。&lt;/p&gt;
&lt;p&gt;但我最近几度都想把博客换到dokuwiki下。&lt;/p&gt;
&lt;p&gt;自从&lt;a href="http://0x3f.org/?p=1455"&gt;开始用dokuwiki来组织知识和GTD&lt;/a&gt;以来，我对wiki产生了越来越深的痴迷，最主要的原因就是它可以用很简单的语法写出格式规整的文章，我几乎可以不用考虑排版布局而只需把注意力放在文章内容上就行了。而将wiki上的文章发到博客上时，还需要重写，比较浪费时间。&lt;/p&gt;
&lt;p&gt;但我最终放弃这个想法，最主要的原因是博客文章太多了，截至现在已经有五百多篇且大多是用HTML写的，难以转换。何况WP作为一个博客系统较wiki有着天生的优势，使用较为方便，如果用wiki来做博客，要做不少工作。&lt;/p&gt;</description></item></channel></rss>