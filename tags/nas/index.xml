<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NAS on 晴耕雨讀</title><link>http://0x3f.org/tags/nas/</link><description>Recent content in NAS on 晴耕雨讀</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>© 淘气 2022</copyright><lastBuildDate>Sun, 25 Sep 2022 21:29:41 +0800</lastBuildDate><atom:link href="http://0x3f.org/tags/nas/index.xml" rel="self" type="application/rss+xml"/><item><title>Unraid 6.11 弃用 NerdPack 的解决办法</title><link>http://0x3f.org/posts/how-to-install-packages-after-nerdpack-is-deprecated-in-unraid-6.11/</link><pubDate>Sun, 25 Sep 2022 21:29:41 +0800</pubDate><guid>http://0x3f.org/posts/how-to-install-packages-after-nerdpack-is-deprecated-in-unraid-6.11/</guid><description>Unraid 6.11 的 release note 没提弃用 NerdPack ，浪费了我很多时间。😞
当前版本的 Unraid 是基于 Slackware 15.0 的，可以手动从以下站点下载软件包手动安装：
https://slackware.pkgs.org/15.0/slackware-x86_64/ https://slackonly.com/pub/packages/15.0-x86_64/ 把下载的软件包放到运行中的 Unraid 的 /boot/extra 目录（不存在就手动创建）下，重启系统后自动安装或者通过 installpkg 命令手动安装。例如：
1 installpkg vim-8.2.4256-x86_64-1.txz 更简单的方法是使用 un-get ：
1 2 3 4 5 6 un-get search vim un-get install python3 python-pip python-setuptools un-get remove vim un-get update un-get cleanup un-get upgrade 这个命令目前不解决依赖关系，而且存在部分包无法下载或找不到的现象，还是需要手动干预。
作者没有在项目主页写安装说明，而是写在 Reddit 帖子里了。</description></item><item><title>为 Seafile 配置反向代理的问题</title><link>http://0x3f.org/posts/setup-reverse-proxy-for-seafile/</link><pubDate>Mon, 10 Jan 2022 23:27:08 +0800</pubDate><guid>http://0x3f.org/posts/setup-reverse-proxy-for-seafile/</guid><description>我目前用 SWAG 做 Homelab 的反向代理，在和其它服务一样为 Seafile 配置好后，访问时却报如下错误：
Contradictory scheme headers
原因是 Seafile 的 Docker 镜像里已经使用了 NGINX 做反代，而且配置里包含和 SWAG 反代相同的配置项：
1 proxy_set_header X-Forwarded-Proto $scheme； 此时，通过 HTTPS 访问的 SWAG 反代传递的 HEADER 里 X-Forwarded-Proto 是 https ，而通过 HTTP 访问的 Seafile 传递的是 http ，就会报以上错误。
一种解决方法是，把 Seafile 的 /etc/nginx/conf.d/seafile.nginx.conf 复制到宿主机，把文件中 X-Forwarded-Proto 这一行注释掉，然后映射到 Docker 容器的上述路径上：
1 -v &amp;#39;/mnt/user/appdata/seafile/seafile.nginx.conf&amp;#39;:&amp;#39;/etc/nginx/conf.d/seafile.nginx.conf&amp;#39;:&amp;#39;ro&amp;#39; 需要注意的是，不同版本的 Seafile 镜像里该文件的路径可能不同。</description></item><item><title>自动追剧的工作流</title><link>http://0x3f.org/posts/auto-workflow-of-following-tv-series-and-movies/</link><pubDate>Sun, 21 Nov 2021 17:16:15 +0800</pubDate><guid>http://0x3f.org/posts/auto-workflow-of-following-tv-series-and-movies/</guid><description>在 NAS 上搭了个自动追剧、追影的工作流，体验非常好。
只需要把想看的美剧或者电影添加到监控列表里，就可以在资源出现之后自动下载并通知到手机或电脑，全程无值守，回家打开电视就能看。
用到这些工具：
Jackett: BT 索引工具，负责搜索资源。 Sonarr: 电视剧管理工具，负责管理追剧列表、调用 Jackett 搜索、资源监控、下载调度。 Radarr: 电影管理工具，功能同 Sonarr 。 qBittorrent: BT 下载工具。 ChineseSubFinder: 字幕搜索工具。 Jellyfin: 媒体中心，负责影视剧转码、播放、管理。 Telegram: 接收通知。 nzb360: Android APP ， Sonarr 、 Radarr 、 qBittorrent 的客户端。 Jackett 是 BT 资源索引工具，可以对添加到索引列表中的 BT 资源站点做集中搜索。
Sonarr 专门用来管理剧集，与 Jackett 集成后可以在 Sonarr 的页面上搜索并添加到监控列表。剧集更新后会自动调用下载服务下载，随后导入并刮削元数据。特别地，如果发现有更清晰的资源，它可以自动下载并替换现有的资源。
Radarr 的功能和 Sonarr 几乎一样，只不过它是用来管理电影的。
qBittorrent 是下载工具。
Jellyfin 是媒体中心，实现对影视资源的管理、转码、播放功能。在播放终端解码能力弱或者网络不够好的场景下比较有用。如果电视的播放器（例如 Infuse 7）刷新海报墙比较慢，Jellyfin 会因为是持续运行的服务而有更好的体验。
这里还需要用到一个没有 UI 的服务，就是 ChineseSubFinder 。它会监视媒体目录并自动下载合适的字幕。
当资源被添加、删除或下载时，通过 Telegram 发送通知到手机或者电脑。
nzb360 是 Sonarr 、 Radarr 、 qBittorrent 的 Android 客户端。UI 很漂亮，使用体验也非常好。还可以添加 Jellyfin 等系统的 Web UI ，实现对整个工作流的一站式访问。</description></item><item><title>我的第一台 NAS</title><link>http://0x3f.org/posts/my-first-nas/</link><pubDate>Sun, 10 Oct 2021 21:50:12 +0800</pubDate><guid>http://0x3f.org/posts/my-first-nas/</guid><description>年初终于攒了一台 NAS 。
之前用一块 1T 的 Buffalo 外置硬盘，但是多年之后，我开始担心这头老水牛还能活多久，况且它的剩余空间也已经不多了。与此同时，手机和电脑的存储空间也像油腻大叔的头发一样越来越少，我必须把沉淀的冷数据迁移出去。身边像有一群饥饿的东西拼命向我伸手。
而且，随着数码设备的增加，尤其在添了一台 Apple TV 后，出于看 YouTube 的目的，我更需要通过软路由的方式改善家庭网络的翻墙体验。
再者，以前看影剧都是把 U 盘插到电视或者微投上，或者通过电脑串流，多少也有点麻烦。
于是打算用一台 All-in-one 解决所有问题。
硬件规格 最初考虑过群晖、威联通之类的品牌 NAS ，如果能得到更好的使用体验，多花点钱也是可以的。但是看过硬件规格后，感觉我要是以这个价格买了，那就算人生的污点了。
所以开始准备攒机，按优先级列举一下要求：
美观，不要傻大黑粗的直男风。 体积小。 兼顾功耗和性能。 内存大（16 ~ 32 G）。 先后拟了 4 套配置，和某淘宝店的套装做了一下对比：
- 淘宝店方案 价格 方案 1 价格 方案 2 价格 方案 3 价格 方案 4 价格 机箱 万由 410 - 万由 410 680 迎广 MS04 930 蜗牛星际B涂装改风扇 275 蜗牛星际B涂装改风扇 275 电源 益衡 200W - 益衡 7025B 236 机箱内置 - 益衡 7025B 236 益衡 7025B 236 主板 B365-ITX 定制工控板 - 华擎 Z390M-ITX/ac 1199 华擎 Z390M-ITX/ac 1199 华擎 Z390M-ITX/ac 1199 华擎 Z390M-ITX/ac（二） 700 CPU I5-8600T - I5-8600T 825 I5-8600T 825 I5-8600T 825 I5-8600T 825 散热器 - - AVC 28mm 115X 23 AVC 28mm 115X 23 AVC 28mm 115X 23 AVC 28mm 115X 23 内存 镁光 DDR4 16G 2666 - 光威 DDR4 2666 16G 379 光威 DDR4 2666 16G 379 光威 DDR4 2666 16G 379 海盗船 DDR4 3000 16G×2（二） 700 总计 - 2999 - 3342 - 3356 - 2937 - 2759 最后选了第 4 种。</description></item><item><title>用微力同步换掉了 Dropbox</title><link>http://0x3f.org/posts/replace-dropbox-with-verysync/</link><pubDate>Wed, 06 Oct 2021 01:24:41 +0800</pubDate><guid>http://0x3f.org/posts/replace-dropbox-with-verysync/</guid><description>我希望找到一种体验较好的方式，把两部手机和索尼黑卡上的照片集中同步到 NAS 上交由 PhotoPrism 托管。
需求如下：
可以方便地发送多平台照片到 NAS 。 可以单向同步手机到 NAS 并忽略手机的删除操作，以节省手机的存储空间。 可以实现内网穿透且简单稳定。 便宜。 对比了 PhotoSync 、 Resilio Sync 、 Syncthing 和微力同步（verysync）。
PhotoSync 作为专门针对同步照片的场景设计的 APP ，完美覆盖前两点，第三点可以借助 NAS 已经配置好的内网穿透实现，但是需要购买相应的 Plan ，而且 Android 和 iOS 平台要各自单独购买。
Resilio Sync 实现内网穿透需要引入新的依赖关系，不完全满足第三点。
Syncthing 看起来不错，但是没有官方的 iOS 客户端。
微力同步据说是基于 Syncthing 的，且补上了后者缺失的一环。各平台免费，只有 iOS 上需要花 12￥ 买 APP 。
我的 NAS 运行的是 Unraid ， Community Applications 里没有微力同步，在这里找到了别人配置好的模板，部署很方便。
试用后因为太好用，干脆把 Dropbox 目录也放到微力同步里，卸载了会占用很多内存且免费方案 3 个端的限制早已捉襟见肘的 Dropbox 。</description></item></channel></rss>