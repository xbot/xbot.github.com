<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>工具 on 晴耕雨讀</title><link>http://0x3f.org/tags/%E5%B7%A5%E5%85%B7/</link><description>Recent content in 工具 on 晴耕雨讀</description><generator>Hugo</generator><language>zh-cn</language><copyright>© 淘气 2022</copyright><lastBuildDate>Fri, 20 Aug 2021 00:03:28 +0800</lastBuildDate><atom:link href="http://0x3f.org/tags/%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 Remote Torrent Adder 做 qBittorrent 的客户端</title><link>http://0x3f.org/posts/take-remote-torrent-adder-as-client-of-qbittorrent/</link><pubDate>Fri, 20 Aug 2021 00:03:28 +0800</pubDate><guid>http://0x3f.org/posts/take-remote-torrent-adder-as-client-of-qbittorrent/</guid><description>我使用部署在 NAS 中的 qBittorrent 下载资源，每次手动复制磁力链链接到 qBittorrent 的 WebUI 很麻烦。
Remote Torrent Adder 是 Chrome 的扩展，可以通过右键菜单把 magnet 等协议的链接发送到多种下载工具，其中就包括 qBittorrent 。
安装过程不是那么顺利，这个开源小工具并没有对用户体验做更多的优化。
首先初次安装后，配置界面会有一个初始的、针对 Vuze SwingUI 的配置，需要把它删掉，再添加针对 qBittorrent v4.1+ WebUI 的配置，填好各项配置后选中 Label/Directory interactivity 复选框。因为我把电影和剧集分目录存放，开始下载前需要指定存储目录。
第一次点菜单的时候没有反应，后来刷新页面后就好了。但是弹出来的指定下载目录的对话框没有选项，经测试发现第一次需要手工填写，之后有了缓存就可以选了。</description></item><item><title>用 zsh-autoenv 实现目录级别的 zshrc</title><link>http://0x3f.org/posts/implement-directory-specific-zshrc-with-zsh-autoenv/</link><pubDate>Thu, 19 Aug 2021 23:34:25 +0800</pubDate><guid>http://0x3f.org/posts/implement-directory-specific-zshrc-with-zsh-autoenv/</guid><description>zsh-autoenv 可以实现当进入特定的目录时加载特定的 zshrc 文件，并当切换到其它目录时取消其中的变更。后者在当前的版本下，对环境变量、命令别名和函数有效。
使用方法为：
在目录（如 ~/project ）下创建文件 .autoenv.zsh :
1 2 3 4 5 6 7 8 autostash TEST_VAR=&amp;#39;This is a test variable.&amp;#39; autostash alias test_cmd=&amp;#39;echo &amp;#34;This is a test alias.&amp;#34;&amp;#39; autostash test_func test_func() { echo &amp;#34;This is a test function.&amp;#34; } 出于安全考虑， zsh-autoenv 会对 .autoenv.zsh 做哈希校验，所以第一次或者做变动后进入该目录时，都会要求确认是否接受此文件最新的内容。
此外，如果进入的目录不存在 .autoenv.zsh， zsh-autoenv 会自动向上查找最近的同名文件并加载，上溯的层级可以通过配置项定义。
最后，它提供了一个命令 autoenv-edit 用来快速打开和编辑 .autoenv.zsh 文件。</description></item><item><title>鼠须管的美化</title><link>http://0x3f.org/posts/beautify-squrrel-input-method/</link><pubDate>Sat, 21 Apr 2018 20:52:42 +0000</pubDate><guid>http://0x3f.org/posts/beautify-squrrel-input-method/</guid><description>效果如下： 尽管鼠须管的Github仓库一直在更新，但释出版已经很久没有更新了，所以下面的美化基于网络上个人编译的版本。这篇文章里有该版本和「花园明朝」字体的下载链接，按照文中的说明替换鼠须管的程序。（注意：官方当前释出版本鼠须管不支持下文通过patch自定义配置的方式，会造成原配置信息丢失。也不支持图示的样式。）
然后参考这篇文章，把新的颜色方案移植到用户配置中。
图示样式使用「dust」方案。原色彩方案的字体设置的有点小，需要把font_point和label_font_point分别从14和10修改成18和14。原方案的第一顺序字体是「HYQiHei-55S Book」，要使用图示的花园明朝字体，可以不安装或者从配置信息中去掉该字体。由于原方案中已存在的配置项不能通过patch的方式覆盖，所以只能直接修改squirrel.yaml文件。</description></item><item><title>我在用的Safari扩展</title><link>http://0x3f.org/posts/the-safari-extensions-i-am-using/</link><pubDate>Sun, 15 Apr 2018 22:29:10 +0000</pubDate><guid>http://0x3f.org/posts/the-safari-extensions-i-am-using/</guid><description>和Chrome相比，Safari更省电、需要更少的系统资源，而且Chrome还有一些莫名其妙的问题，比如在没有运行的时候，从Alfred执行搜索会启动两个窗口，一个是之前的会话，另一个是当前的搜索页面。并且，启用了一些扩展之后Safari的体验可以改进很多。所以平时用Safari更多一些。
sVim 作为注重效率的Vim党和键盘党，这种扩展是使用任何浏览器必备的东西。最常用的就是用标记打开链接的功能。
Tampermonkey 油猴脚本管理器，应该是任何浏览器必备的东西。
AutoPagerize 用Google搜索时自动滚动到下一页。
RSS Menu 当发现当前页面有可订阅的RSS链接时，在工具栏图标上显示提示。
Instapaper 稍后读工具。
Turn Off the Lights 看视频时降低网页其余部分亮度。
Scroll To Top Button 在页面右下角显示一个浮动的跳转到页首按钮。
Push for Kindle FiveFilters.org的发送到Kindle按钮。
octotree GitHub侧边栏。
Translate 翻译当前页。
WikiWand 优化维基百科阅读体验。
Xdebug Helper PHP单步调试辅助工具。
AdBlock 广告过滤器。
Sessions 网页会话管理器。如果打开的页面太多，又可能在将来再用到，可以保存会话后清理掉，用到的时候再打开保存过的会话。虽然没有Chrome下的Session Buddy和Tab Snooze好用，但是解决关键问题也够了。</description></item><item><title>用AlfredTweet发推</title><link>http://0x3f.org/posts/tweet-with-alfredtweet/</link><pubDate>Sun, 17 Sep 2017 09:26:41 +0000</pubDate><guid>http://0x3f.org/posts/tweet-with-alfredtweet/</guid><description>AlfredTweet是用来解决“最后一公里”问题的东西，有了它就可以随时发推了。
需要修改源码指定代理：
1 2 3 4 5 6 7 8 9 // twitteroauth.php function http($url, $method, $postfields = NULL) { // ... curl_setopt($ci, CURLOPT_HTTPPROXYTUNNEL, TRUE); curl_setopt($ci, CURLOPT_PROXY, &amp;#39;127.0.0.1:1086&amp;#39;); curl_setopt($ci, CURLOPT_PROXYTYPE, CURLPROXY_SOCKS5); // ... }</description></item><item><title>调校mycli</title><link>http://0x3f.org/posts/fine-tune-mycli/</link><pubDate>Mon, 26 Jun 2017 18:05:31 +0000</pubDate><guid>http://0x3f.org/posts/fine-tune-mycli/</guid><description>做以下配置，使mycli按需使用pager，并在数据过多时不破坏表格格式：
1 2 3 4 # ~/.my.cnf [client] pager = less -FSXR</description></item><item><title>CopyQ，也许是Linux最好的剪贴板管理工具</title><link>http://0x3f.org/posts/copyq/</link><pubDate>Mon, 19 Jun 2017 21:49:14 +0000</pubDate><guid>http://0x3f.org/posts/copyq/</guid><description>我对剪贴板管理工具的核心需求有四个：
记录文本 记录图片 快速搜索 独立软件包 CopyQ是Linux上唯一满足这些需求的实现，虽然体验上跟Mac下的竞品还有差距。
用法：
copyq：运行 copyq menu：显示剪贴板历史管理菜单 copyq show：显示剪贴板历史管理窗口</description></item><item><title>用Tmux的控制模式提高生产力</title><link>http://0x3f.org/posts/improve-productivity-with-tmux-control-mode/</link><pubDate>Sun, 11 Jun 2017 10:40:06 +0000</pubDate><guid>http://0x3f.org/posts/improve-productivity-with-tmux-control-mode/</guid><description>Tmux的控制模式（Control Mode）可以把tmux的窗口映射为本地虚拟终端的窗口，也就是说，用户可以像操作本地虚拟终端一样操作tmux。这对备受tmux的emacs风格的热键绑定折磨或需要嵌套tmux的人来说非常有用。
在支持这个特性的虚拟终端（例如「iTerm」）里，执行tmux -CC即可。当然也可以tmux -CC a恢复会话。</description></item><item><title>用SwitchHosts!切换主机映射方案</title><link>http://0x3f.org/posts/switch-hosts-with-switchhosts/</link><pubDate>Sun, 11 Jun 2017 09:57:54 +0000</pubDate><guid>http://0x3f.org/posts/switch-hosts-with-switchhosts/</guid><description>最近在Archlinux上开始用SwitchHosts!管理主机映射方案，它可能是Linux下做这件事的最好的工具了。
在Mac下也用它替换掉了Gas Mask，因为支持Alfred Workflow。相对的缺点是不支持在状态栏图标上显示当前方案名称，不过Alfred里可以，一定程度上缓解了这个问题。</description></item></channel></rss>