<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>反向代理 on 晴耕雨讀</title><link>http://0x3f.org/tags/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/</link><description>Recent content in 反向代理 on 晴耕雨讀</description><generator>Hugo</generator><language>zh-cn</language><copyright>© 2007-2024 鬼马妖刀</copyright><lastBuildDate>Sun, 16 Oct 2022 22:37:08 +0800</lastBuildDate><atom:link href="http://0x3f.org/tags/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/index.xml" rel="self" type="application/rss+xml"/><item><title>用 Caddy 做 Home Lab 的反向代理</title><link>http://0x3f.org/posts/reverse-proxying-home-lab-with-caddy/</link><pubDate>Sun, 16 Oct 2022 22:37:08 +0800</pubDate><guid>http://0x3f.org/posts/reverse-proxying-home-lab-with-caddy/</guid><description>&lt;p>我原本用 &lt;a href="https://docs.linuxserver.io/general/swag">SWAG&lt;/a> 做 Home Lab 的反向代理，它自带很多服务的配置模板，只需要复制后改几个参数就能工作，还有通过 ACME 自动更新 SSL 证书的功能，但是从某个时间起，首次访问经由它代理的服务会报 404 或 502 的错误，刷新页面就恢复正常，然后隔段时间后又会再次发生，另外还会偶尔出现页面无法显示最新的状态的问题，尤以当服务出错时发生居多。&lt;/p>
&lt;p>最近尝试用 &lt;a href="https://caddyserver.com/docs/">Caddy&lt;/a> 代替 SWAG ，效果非常好，再也没有出现上述问题。而且 Caddy 的使用很简单，只需要在 Caddyfile 中加几行配置信息就能实现对一个服务的反向代理。当然，它也集成了自动更新 SSL 证书的功能。此外，它的镜像只有 80 多 MB ，在我测试的几个反向代理服务里是最节省空间的。&lt;/p>
&lt;p>出于安全考虑，我没有把 Home Lab 的服务暴露在公网上，所以需要通过 DNS challenge 的方式申请 SSL 证书。我的 Docker 容器部署在 Unraid 上，官方软件仓库里的 Caddy 镜像并不包含 Cloudflare 的模块，所以找了个打包了该模块的&lt;a href="https://github.com/SlothCroissant/caddy-cloudflaredns">镜像&lt;/a>，看起来更新得还很及时。&lt;/p>
&lt;p>镜像的 README 里有申请 Cloudflare API Token 的说明，部署容器前填到环境变量里即可。这里有个小坑，创建容器前需要手动创建 Caddyfile ，空文件就行，否则会报错：&lt;/p>
&lt;blockquote>
&lt;p>Are you trying to mount a directory onto a file&lt;/p>&lt;/blockquote>
&lt;p>Caddy 不如 SWAG 的地方是没有为服务提供配置模板，所以我保留了后者的配置目录，作为在前者中配置服务时的参考。以下是我的 Caddyfile 的示例，展示了怎样配置泛域名的反向代理和 SSL 证书的自动申请，以及服务的几种典型反向代理配置：&lt;/p></description></item></channel></rss>