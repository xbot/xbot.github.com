<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>计算机网络 on 晴耕雨讀</title><link>http://0x3f.org/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</link><description>Recent content in 计算机网络 on 晴耕雨讀</description><generator>Hugo</generator><language>zh-cn</language><copyright>© 淘气 2022</copyright><lastBuildDate>Sun, 26 Dec 2010 00:00:00 +0000</lastBuildDate><atom:link href="http://0x3f.org/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/index.xml" rel="self" type="application/rss+xml"/><item><title>darkstat: 网络流量监测工具</title><link>http://0x3f.org/posts/darkstat-as-a-network-discharge-meter/</link><pubDate>Sun, 26 Dec 2010 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/darkstat-as-a-network-discharge-meter/</guid><description>darkstat是一个跨平台的网络流量监测工具，可显示最大一个月内操作系统的各项网络流量指标。
具有以下特性：
以守护进程方式运行，提供Web用户界面，零配置，易于使用 可显示较为详细的网络流量指标 性能表现好，占用资源少 跨平台，支持多个UNIX、类UNIX操作系统，并有非官方的Windows移植版 具有以下不足：
功能较为简单，以易用性换灵活性 日志记录功能比较单薄，需要编写辅助脚本并设置定时任务 darkstat启动时需要手工指定监视的网络接口，因此需要用根权限启动：
1 sudo darkstat -i eth0 darkstat默认使用667端口提供Web访问，可以用-p参数指定端口：
1 sudo darkstat -i eth0 -p 8080 darkstat的Web用户界面分为Graph、Hosts和Host三部分。Graph是缺省主页，用于显示最近一分钟、一小时、一天和一个月的流量统计直方图，将光标置于任何一个直方条上可查看对应时刻的流量指标：
Hosts界面按主机显示各自的流量统计指标的值：
单击Hosts界面上的IP进入对应主机的Host界面，此界面按TCP/UDP类型显示对应的主机的各端口的网络流量指标的值：
可通过如下命令查看占用指定端口的进程：
[lenin@archer ~]$ lsof -i tcp:58062 -n COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME mlnet 18660 lenin 74u IPv4 251788 0t0 TCP 192.168.1.3:58062->122.116.212.89:http (ESTABLISHED) darkstat区别于其它流量监测工具的最大的优点就是简单易用，非常适合对流量监测应用不复杂的场景。前段时间公司的一台RHEL服务器因为流量过大多次被网管拔线，后来用darkstat监测到大部分流量被几个UDP端口占去，进而发现原来是服务器被入侵并被安装了一个扫描器SIPVicious。</description></item><item><title>VirtualBox的Host Interface网络接入方式的配置</title><link>http://0x3f.org/posts/virtualbox-host-interface/</link><pubDate>Sun, 31 Jan 2010 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/virtualbox-host-interface/</guid><description>VirtualBox安装后默认的网络接入方式是NAT，也是最简单的一种。但NAT网络中的虚拟机系统不具有和主机同一网段的IP地址，不能和主机直接通信。这对于开发者来说是不适用的。
Host Interface网络接入方式可以使虚拟机系统获得与主机同一网段的IP地址，因此也使得虚拟机系统像主机所在的局域网中的一台真实的计算机一样，可以和其它计算机通信。
对于Linux平台的VirtualBox，可以有两种方式实现Host Interface网络。一是使用系统网桥，二是使用VirtualBox内建的机制。
第一种方式复杂但通用，尤其是对于2.1.0以前的版本来说，这是唯一的途径。从2.1.0开始，VirtuaBox内建了支持Host Interface的机制，这极大地简化了此类型网络的配置。
首先，加载vboxnetflt模块：
sudo modprobe vboxnetflt
然后在VirtualBox中配置虚拟机的网络连接方式，选择“Bridged Adapter”。
最后启动虚拟机即可。
另外，若虚拟机系统是精简版的Windows，网卡驱动可能不会自动安装，这时需要另外下载网卡的驱动并安装。
为方便起见，可将vboxnetflt模块加入到开机自动启动的模块列表中，每种发行版设置自启动模块的位置和方法不一样，在Archlinux下，是在/etc/rc.conf文件中的modules行中设置。
参考文章：Archlinux Wiki: VirtualBox</description></item></channel></rss>