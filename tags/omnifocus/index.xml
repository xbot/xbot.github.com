<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OmniFocus on 晴耕雨讀</title><link>http://0x3f.org/tags/omnifocus/</link><description>Recent content in OmniFocus on 晴耕雨讀</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>© 淘气 2022</copyright><lastBuildDate>Wed, 19 Oct 2022 23:02:50 +0800</lastBuildDate><atom:link href="http://0x3f.org/tags/omnifocus/index.xml" rel="self" type="application/rss+xml"/><item><title>用 Hammerspoon 收集 Arc 浏览器网页到 OmniFocus 的方法</title><link>http://0x3f.org/posts/how-to-collect-webpage-from-the-arc-browser-to-omnifocus/</link><pubDate>Wed, 19 Oct 2022 23:02:50 +0800</pubDate><guid>http://0x3f.org/posts/how-to-collect-webpage-from-the-arc-browser-to-omnifocus/</guid><description>我用 Hammerspoon 收集网页到 OmniFocus ，它的 SendToOmniFocus 对 Chrome 家族的浏览器有原生的支持，但并不适用于 Arc 浏览器。
看 SendToOmniFocus 的源码是用 Apple Script 获取 Chrome 家族浏览器中网页的信息的，但最初我没有解决怎样用同样的办法拿到 Arc 浏览器网页信息的问题。所以采取通过剪贴板中转的方式实现。
首先配置 Surfingkeys 实现把网页信息组装成特定格式复制到剪贴板：
1 2 3 4 5 6 7 8 9 10 11 mapkey(&amp;#39;yO&amp;#39;, &amp;#39;Copy OmniFocus sensible info.&amp;#39;, yankOmniFocusSensibleInfo); function yankOmniFocusSensibleInfo() { var info_arr = []; info_arr.push(&amp;#34;#omnifocus_sensible&amp;#34;); info_arr.push(document.title); info_arr.push(window.location.href); Clipboard.write(info_arr.join(&amp;#34;\n&amp;#34;)); } 然后在 Hammerspoon 中监听剪贴板，一旦发现特定格式的文本，就调用 Apple Script 填充解析到的网页信息到 OmniFocus 的对话框：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 -- Interpolate table values into a string -- From http://lua-users.</description></item><item><title>我在用的 OmniFocus 插件</title><link>http://0x3f.org/posts/the-omnifocus-plugins-i-am-using/</link><pubDate>Sat, 25 Dec 2021 22:05:40 +0800</pubDate><guid>http://0x3f.org/posts/the-omnifocus-plugins-i-am-using/</guid><description>检查列表 xbot/omnifocus-plugin-checklist
在 OmniFocus 中指定一个 folder ，其下的所有 project 都将作为 checklist 的模板。
选中一或多个 projects 并触发这个插件的 action ，在弹出的对话框中选择要用的模板，将会在目标 projects 中创建同名 task ，模板中的 tasks 创建为该 task 的子任务。
模板的 Parallel 、 Complete with last action 、 tags 和 note 会被同步过去。
生成工作日志 xbot/omnifocus-plugin-generate-work-journal
用于每天下班前一键生成工作日志。
插件会收集名为 Work 的目录下当天完成的 Tasks 并根据 Task 标题和 Note 的内容追加不同的状态描述。例如，标题包含“面试”的 Task 不追加状态描述；Note 为空的 Task 追加“完成”，否则追加 Note 的内容。目录目前是写死的，没有做通用性适配。
打开 Jira Ticket xbot/omnifocus-plugin-open-jira-ticket
从被选中的 Project 标题中解析 Jira Ticket 序号，并根据配置的 Jira URL 打开对应的 Ticket 。如果选中的是 Task ，使用其所属的 Project 。</description></item></channel></rss>