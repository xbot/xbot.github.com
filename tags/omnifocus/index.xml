<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>omnifocus on 晴耕雨讀</title><link>http://0x3f.org/tags/omnifocus/</link><description>Recent content in omnifocus on 晴耕雨讀</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>© 淘气 2022</copyright><lastBuildDate>Wed, 30 Aug 2023 22:05:59 +0800</lastBuildDate><atom:link href="http://0x3f.org/tags/omnifocus/index.xml" rel="self" type="application/rss+xml"/><item><title>OmniFocus 插件 refine-task v1.0 小记</title><link>http://0x3f.org/posts/omnifocus-plugin-refine-task-v1-release-notes/</link><pubDate>Wed, 30 Aug 2023 22:05:59 +0800</pubDate><guid>http://0x3f.org/posts/omnifocus-plugin-refine-task-v1-release-notes/</guid><description>refine-task 的功能非常简单，它为选中的任务打开一个输入框，将用户输入的内容作为新的任务内容保存，原来的任务内容会被挪到备注里：
我用快捷指令“收集 Tweet 到 OmniFocus”收集 tweets ，但是因为 tweet 内容较长，不方便 review 的时候快速了解为什么收集这条内容，所以我用快捷指令“提炼 OmniFocus”利用 ChatGPT 提炼待办事项并复制到剪贴板，接着这个快捷指令会调用 refine-task 把条目原文移动到备注里并打开输入框由用户粘贴或者输入待办事项。</description></item><item><title>OmniFocus 插件 generate-work-journal v4.0 小记</title><link>http://0x3f.org/posts/omnifocus-plugin-generate-work-journal-v2.0-release-notes/</link><pubDate>Sun, 18 Dec 2022 16:32:34 +0800</pubDate><guid>http://0x3f.org/posts/omnifocus-plugin-generate-work-journal-v2.0-release-notes/</guid><description>OmniFocus 是个非常强大的待办列表 App ，最大的特点之一是支持开发插件。如果你跟我一样有各种稀奇古怪的需求且其它待办 App 不能满足时，可以试试它，尽管很贵，但是很值。
generate-work-journal 是一个生成工作日志的工具，可以根据当天完成的、满足特定条件的任务一键生成日报，以节省时间。
包含以下特性：
只对特定目录下的日志有效。 支持大型任务（包含多项任务的 project ）和单项任务。 多种输出格式： 纯文本 Markdown 无序列表 Markdown 有序列表 自动追加任务状态描述： 进行中 已完成 自定义 通过标签过滤不需要的记录。 今天 generate-work-journal 发布了 4.0 版本，加入了自动判断状态为“进行中”的任务的功能。对于设置为周期重复的任务，如果还存在待执行状态的记录，那么当天已完成的记录将被认为是“进行中”。可以在设置选项中指定该状态的文字描述，和“已完成”状态一样，如果文字描述为空，最终生成的日志内容将不包含状态的描述。</description></item><item><title>OmniFocus 插件 checklist v2.0 小记</title><link>http://0x3f.org/posts/omnifocus-plugin-checklist-v2.0-release-notes/</link><pubDate>Sun, 11 Dec 2022 18:20:34 +0800</pubDate><guid>http://0x3f.org/posts/omnifocus-plugin-checklist-v2.0-release-notes/</guid><description>OmniFocus 是个非常强大的待办列表 App ，最大的特点之一是支持开发插件。如果你跟我一样有各种稀奇古怪的需求且其它待办 App 不能满足时，可以试试它，尽管很贵，但是很值。
checklist 是一个把 OmniFocus 变成检查清单 App 的插件，源自我周期性重复检查一些事项的需求，例如：收拾行李、储备物资和审查代码。
之前用过一款专门的手机 App ，对于检查清单这个领域来说，确实做得已经很极致了，但是最大的问题是没有电脑端，对于像代码审查这种需要更多、更复杂的编辑操作的清单来说，在手机上操作真是太麻烦了。还有一点就是手机毕竟还不是一个常规意义上的“正经”工具，工作时间捧着手机显得很奇怪。
checklist 就是这种背景下的产物。它的基本逻辑是：用 OmniFocus 的 project 当清单模板，一个 project 对应一个模板。模板集中存在专门的 folder 下。在需要检查清单的 project 下点击插件按钮选择清单模板，将在该 project 下创建和模板中相同的任务列表。
以下录屏直观地展示了插件的用法：
凭借 OmniFocus 原本就很强大的任务列表功能， checklist 近乎完美地实现了我对一个检查清单 App 的需求。不光我的手机上又少了一个 App ，而且考虑到那个 App 高达一百多的售价，说支持多端的 checklist 价值 200￥ 似乎也不过分。</description></item><item><title>OmniFocus 插件 reschedule-objects v3.0 小记</title><link>http://0x3f.org/posts/omnifocus-plugin-reschedule-objects-v3.0-release-notes/</link><pubDate>Fri, 02 Dec 2022 19:53:34 +0800</pubDate><guid>http://0x3f.org/posts/omnifocus-plugin-reschedule-objects-v3.0-release-notes/</guid><description>OmniFocus 是个非常强大的待办列表 App ，最大的特点之一是支持开发插件。如果你跟我一样有各种稀奇古怪的需求且其它待办 App 不能满足时，可以试试它，尽管很贵，但是很值。
reschedule-objects 是一个给选中的任务或项目快速排期的插件，源自我特定的时间做特定的事的需求。
今天 reschedule-objects 发布了 3.0 版本，主要包括三部分的变化。
首先是重构。随着我写的插件数的增加，有些代码可以复用，有些 Omni Automation API 比较烦琐，所以有了封装一个工具类的想法，正好 Omni 应用也支持这样，所以封装了 libdev 开发库。另外，之前很多地方写得很差劲，这次也一并优化了一下。
其次是用多选组件模拟单选操作，实现了用户体验的提升。Omni Automation API 对于单选操作只提供了下拉列表这一个组件，对于高频操作会显得很低效，这段时间用下来觉得很难受。文档说表单的验证方法可以增减表单里的字段，利用这一点曲线解决了这个问题，用多选组件实现了 radio group 。缺点是切换选项时表单可能产生抖动。
第三个变化是加入了清除排期的功能。目前还需要通过同一个入口触发，最多需要三次点击。还有优化空间，考虑未来重构成多 Action 的插件，可以通过单独的按钮触发，最少只要一次点击就可以了。</description></item><item><title>保存 tweet 到 OmniFocus 的快捷指令</title><link>http://0x3f.org/posts/a-shortcuts-that-saves-tweets-to-omnifocus/</link><pubDate>Tue, 22 Nov 2022 21:34:25 +0800</pubDate><guid>http://0x3f.org/posts/a-shortcuts-that-saves-tweets-to-omnifocus/</guid><description>保存 tweet 到 OnniFocus 并提取内嵌链接的快捷指令，绕过了iOS 16 快捷指令“Make rich text from HTML”丢失编码信息导致乱码的 bug 。
https://www.icloud.com/shortcuts/fc68643daa044b44959f16b0a94ec598</description></item><item><title>用 Hammerspoon 收集 Arc 浏览器网页到 OmniFocus 的方法</title><link>http://0x3f.org/posts/how-to-collect-webpage-from-the-arc-browser-to-omnifocus/</link><pubDate>Wed, 19 Oct 2022 23:02:50 +0800</pubDate><guid>http://0x3f.org/posts/how-to-collect-webpage-from-the-arc-browser-to-omnifocus/</guid><description>我用 Hammerspoon 收集网页到 OmniFocus ，它的 SendToOmniFocus 对 Chrome 家族的浏览器有原生的支持，但并不适用于 Arc 浏览器。
看 SendToOmniFocus 的源码是用 Apple Script 获取 Chrome 家族浏览器中网页的信息的，但最初我没有解决怎样用同样的办法拿到 Arc 浏览器网页信息的问题。所以采取通过剪贴板中转的方式实现。
首先配置 Surfingkeys 实现把网页信息组装成特定格式复制到剪贴板：
1 2 3 4 5 6 7 8 9 10 11 mapkey(&amp;#39;yO&amp;#39;, &amp;#39;Copy OmniFocus sensible info.&amp;#39;, yankOmniFocusSensibleInfo); function yankOmniFocusSensibleInfo() { var info_arr = []; info_arr.push(&amp;#34;#omnifocus_sensible&amp;#34;); info_arr.push(document.title); info_arr.push(window.location.href); Clipboard.write(info_arr.join(&amp;#34;\n&amp;#34;)); } 然后在 Hammerspoon 中监听剪贴板，一旦发现特定格式的文本，就调用 Apple Script 填充解析到的网页信息到 OmniFocus 的对话框：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 -- Interpolate table values into a string -- From http://lua-users.</description></item><item><title>我在用的 OmniFocus 插件</title><link>http://0x3f.org/posts/the-omnifocus-plugins-i-am-using/</link><pubDate>Sat, 25 Dec 2021 22:05:40 +0800</pubDate><guid>http://0x3f.org/posts/the-omnifocus-plugins-i-am-using/</guid><description>检查列表 xbot/omnifocus-plugin-checklist
在 OmniFocus 中指定一个 folder ，其下的所有 project 都将作为 checklist 的模板。
选中一或多个 projects 并触发这个插件的 action ，在弹出的对话框中选择要用的模板，将会在目标 projects 中创建同名 task ，模板中的 tasks 创建为该 task 的子任务。
模板的 Parallel 、 Complete with last action 、 tags 和 note 会被同步过去。
生成工作日志 xbot/omnifocus-plugin-generate-work-journal
用于每天下班前一键生成工作日志。
插件会收集名为 Work 的目录下当天完成的 Tasks 并根据 Task 标题和 Note 的内容追加不同的状态描述。例如，标题包含“面试”的 Task 不追加状态描述；Note 为空的 Task 追加“完成”，否则追加 Note 的内容。目录目前是写死的，没有做通用性适配。
打开 Jira Ticket xbot/omnifocus-plugin-open-jira-ticket
从被选中的 Project 标题中解析 Jira Ticket 序号，并根据配置的 Jira URL 打开对应的 Ticket 。如果选中的是 Task ，使用其所属的 Project 。</description></item></channel></rss>