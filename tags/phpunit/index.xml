<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>phpunit - 标签 - 晴耕雨讀</title><link>http://0x3f.org/tags/phpunit/</link><description>phpunit - 标签 - 晴耕雨讀</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 18 Feb 2020 22:49:45 +0000</lastBuildDate><atom:link href="http://0x3f.org/tags/phpunit/" rel="self" type="application/rss+xml"/><item><title>在 VS Code 中快速创建 PHPUnit 测试类的方法</title><link>http://0x3f.org/post/quickly-create-phpunit-test-cases-with-vscode/</link><pubDate>Tue, 18 Feb 2020 22:49:45 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/quickly-create-phpunit-test-cases-with-vscode/</guid><description>&lt;p>通过单元测试解决问题或者调试代码，可以避开错综复杂的依赖关系、直击问题的核心，从而极大地节约时间、提高效率。&lt;/p>
&lt;p>但是，当创建测试类成为一个经常发生的操作时，每次都手动创建类、引入基类、添加测试方法就显得很烦琐。我需要这样一个解决方案，让我可以立即开始着手写测试代码。&lt;/p></description></item><item><title>PHPUnit代码覆盖率的统计方法</title><link>http://0x3f.org/post/how-to-count-code-coverage-of-phpunit/</link><pubDate>Sun, 30 Apr 2017 14:20:41 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/how-to-count-code-coverage-of-phpunit/</guid><description>关于PHPUnit代码覆盖率的很多概念，官方文档中讲的十分清楚，本文仅就部分语焉不详的细节做些补充。 虽然phpunit.xml不是必需，但每</description></item><item><title>Phalcon项目中PHPUnit的初始化</title><link>http://0x3f.org/post/testing-with-phpunit-in-phalcon/</link><pubDate>Sat, 29 Nov 2014 09:58:00 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/testing-with-phpunit-in-phalcon/</guid><description>参考官方文档，稍作修改。 在项目下创建目录unittests，进入目录执行： 1 composer require phpunit/phpunit 创建tests目录并在其中创建文件Bootstrap.ph</description></item></channel></rss>