<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>性能 - 标签 - 晴耕雨讀</title><link>http://0x3f.org/tags/%E6%80%A7%E8%83%BD/</link><description>性能 - 标签 - 晴耕雨讀</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 24 Apr 2012 00:00:00 +0000</lastBuildDate><atom:link href="http://0x3f.org/tags/%E6%80%A7%E8%83%BD/" rel="self" type="application/rss+xml"/><item><title>PHP大量常量应集中使用APC定义</title><link>http://0x3f.org/post/define-massive-constants-using-apc/</link><pubDate>Tue, 24 Apr 2012 00:00:00 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/define-massive-constants-using-apc/</guid><description><![CDATA[<p>用xdebug跟踪程序性能时，发现一个定义了约七百个常量的文件，include_once()时消耗约六十毫秒的时间。事实上define()的效率比较低，如果需要定义大量常量，使用APC扩展提供的apc_define_constants()效果会好得多。</p>

<p>下面是对这个文件改造前后效率跟踪结果的对比：</p>

<table>
    <tr>
        <th></th>
        <th>define()方案（ms）</th>
        <th>apc_define_constants()方案（ms）</th>
    </tr>
    <tr>
        <td>启动Web服务和PHP，第一次运行</td>
        <td>58</td>
        <td>4</td>
    </tr>
    <tr>
        <td>不重启Web服务和PHP，第二次运行</td>
        <td>65</td>
        <td>1</td>
    </tr>
    <tr>
        <td>不重启Web服务和PHP，第三次运行</td>
        <td>66</td>
        <td>1</td>
    </tr>
</table>

<p>由此可见，apc_define_constants()不但在初次调用时效能就超过define()，而且由于APC自身的缓存功能，在后续调用时效率会有进一步的提高，而define()基本没有变化。</p>

<p>以下是apc_define_constants()的代码示例：</p>

```php
<?php
if(!apc_load_constants('my_constants')) {
    $constants = array(
        'ONE'   => 1,
        'TWO'   => 2,
        'THREE' => 3,
    );
    apc_define_constants('my_constants', $constants);
}
?>
```

<p>Posted via <a href="http://0x3f.org/?p=1894">UltraBlog.vim</a>.</p>
]]></description></item><item><title>慎用PHP的fsockopen()连接localhost</title><link>http://0x3f.org/post/fsockopen-fails-connecting-localhost/</link><pubDate>Tue, 24 Apr 2012 00:00:00 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/fsockopen-fails-connecting-localhost/</guid><description><![CDATA[<p>使用xdebug跟踪程序性能时发现fsockopen()函数耗时一秒，单步调试发现实际在这里超时了，而超时时间设置的就是一秒。</p>

<p>如果把目标地址由原来的“localhost”换成“127.0.0.1”，马上就可以连上。在PHP的Bug跟踪系统中找到这个问题：</p>

<p>https://bugs.php.net/bug.php?id=50953</p>

<p>看起来像是在5.2.12以后已修改，但我发现在5.2.17中仍存在这个问题。另有说法在5.3中不存在这个问题，我没有测试。</p>

<p>Posted via <a href="http://0x3f.org/?p=1894">UltraBlog.vim</a>.</p>
]]></description></item></channel></rss>