<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Windows on 晴耕雨讀</title><link>http://0x3f.org/tags/windows/</link><description>Recent content in Windows on 晴耕雨讀</description><generator>Hugo</generator><language>zh-cn</language><copyright>© 淘气 2022</copyright><lastBuildDate>Wed, 31 Aug 2011 00:00:00 +0000</lastBuildDate><atom:link href="http://0x3f.org/tags/windows/index.xml" rel="self" type="application/rss+xml"/><item><title>Double Commander: 免费、跨平台的Total Commander</title><link>http://0x3f.org/posts/double-commander/</link><pubDate>Wed, 31 Aug 2011 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/double-commander/</guid><description>&lt;p>由于Total Commander很贵，在Windows下又是必不可少的，我一直希望能找到一个TC的免费替代品。试用过很多免费的文件管理器，但都不理想。偶然看到&lt;a href="http://doublecmd.sourceforge.net/">Double Commander&lt;/a>，才发现这几乎完全就是我想要的。&lt;/p>

&lt;p>&lt;a href="https://picasaweb.google.com/lh/photo/ioR_w9MmX81q_5a8xjUPsA?feat=embedwebsite">&lt;img src="https://lh4.googleusercontent.com/-gkI4K4m5SSM/Tl31NceNNhI/AAAAAAAABzs/3AigwSN7whI/s640/doublecmd_screenshot.png" height="360" width="640" />&lt;/a>&lt;/p>

&lt;h2>特性&lt;/h2>

&lt;ul>
&lt;li>几乎完全模仿TC，甚至连插件的API都一致&lt;/li>
&lt;li>界面布局、样式高度可定制&lt;/li>
&lt;li>热键高度可定制&lt;/li>
&lt;li>开源、免费、跨平台&lt;/li>
&lt;/ul>

&lt;h2>局限&lt;/h2>

&lt;ul>
&lt;li>功能相对TC少很多&lt;/li>
&lt;li>稳定性不是非常高&lt;/li>
&lt;li>运行速度稍嫌慢&lt;/li>
&lt;li>开发进度慢&lt;/li>
&lt;/ul>

&lt;h2>小技巧&lt;/h2>

&lt;h3>热键设置&lt;/h3>

&lt;p>每个内置命令可以设置多个热键，每个热键可以指定参数，参数中可以使用环境变量，如下图所示：&lt;/p>

&lt;p>&lt;a href="https://picasaweb.google.com/lh/photo/Z3jLMCGkoAbs1XC6yOhElg?feat=embedwebsite">&lt;img src="https://lh5.googleusercontent.com/-lFMDaSny_gw/Tl31OKrfhMI/AAAAAAAABzs/2XX44Go-3zc/s640/doublecmd_hotkey.png" height="417" width="640" />&lt;/a>&lt;/p>

&lt;p>针对命令&lt;code>cm_ChangeDir&lt;/code>设置了两个热键，其中，给&lt;strong>Ctrl+Home&lt;/strong>指定的参数是&lt;strong>$HOME&lt;/strong>，给&lt;strong>Ctrl+Shift+Home&lt;/strong>指定的参数是&lt;strong>$HOME/Desktop&lt;/strong>，即分别切换到当前用户的主目录和桌面目录。&lt;/p>

&lt;h3>自定义文件类型命令&lt;/h3>

&lt;p>可以为每种文件类型定义多个命令，这些自定义命令将显示为上下文菜单的“动作”菜单的子菜单项。如下图所示：&lt;/p>

&lt;p>&lt;a href="https://picasaweb.google.com/lh/photo/m7mjk4g77XsMZw58ayJnEw?feat=embedwebsite">&lt;img src="https://lh5.googleusercontent.com/-4Z6LcQg9YIc/Tl31OqcRqKI/AAAAAAAABzs/wJjK8noUWM8/s400/doublecmd_filetype_command_01.png" height="400" width="376" />&lt;/a>&lt;/p>

&lt;p>定义了名称为“Archive”的文件类型，关联了一系列的文件后缀名。然后添加了一个名为“解压缩到当前目录”的动作，并指定所执行的命令为&lt;code>urxvt -e aunpack %f&lt;/code>。其中，&lt;strong>%f&lt;/strong>是一个占位符，代表当前文件的全名。DC预置了几个占位符，可以点击命令输入框右侧图标是加号的按钮选择。&lt;/p>

&lt;p>最终的效果如下：&lt;/p>

&lt;p>&lt;a href="https://picasaweb.google.com/lh/photo/mXYVL8uX1TNw0ENFur1PUQ?feat=embedwebsite">&lt;img src="https://lh6.googleusercontent.com/-smFkdYyLMHE/Tl31QAWMNXI/AAAAAAAABzs/hIBW-yVpBuQ/s400/doublecmd_filetype_command_02.png" height="236" width="400" />&lt;/a>&lt;/p>

&lt;h3>解决日期时间乱码的问题&lt;/h3>

&lt;p>截至版本0.5.0 beta，如果设置了使用日期时间字符串的格式为“yyyy-mm-dd hh:mm:ss”，在&lt;strong>zh_CN.UTF-8&lt;/strong>的区域设置下，字符串中将出现乱码：&lt;/p>

&lt;p>&lt;a href="https://picasaweb.google.com/lh/photo/gMOlqF5DOQQ5otUEBon7lA?feat=embedwebsite">&lt;img src="https://lh6.googleusercontent.com/-LfvO5yBH_F0/Tl3_d13FCNI/AAAAAAAAB0A/MHApuvTvkSg/s400/doublecmd_datetime_illegle_char.png" height="400" width="168" />&lt;/a>&lt;/p>

&lt;p>临时解决办法是以英文区域设置启动doublecmd：&lt;/p>

```bash
#!/bin/bash

export LC_ALL=en_US.UTF-8
doublecmd &amp;
```

&lt;p>Posted via &lt;a href="http://0x3f.org/posts/ultrablog-as-an-ultimate-vim-blogging-plugin/">UltraBlog.vim&lt;/a>.&lt;/p></description></item><item><title>Console2：取代cmd.exe的Windows虚拟终端</title><link>http://0x3f.org/posts/console2-as-an-alternative-of-cmd-exe/</link><pubDate>Sat, 22 Jan 2011 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/console2-as-an-alternative-of-cmd-exe/</guid><description>&lt;p>相对于鸡肋cmd.exe，&lt;a href="http://sourceforge.net/projects/console/">Console2&lt;/a>有以下优点：&lt;/p>

&lt;ol>
&lt;li>窗口大小可调整&lt;/li>
&lt;li>字体样式可选择&lt;/li>
&lt;li>支持多标签&lt;/li>
&lt;li>有很方便的选择、复制、粘贴等基本编辑功能&lt;/li>
&lt;li>支持自定义快捷键&lt;/li>
&lt;/ol>

&lt;p>对经常不得不使用Windows虚拟终端的人来说，以上几个特性足以使人忘掉cmd.exe。其实，Console2本身只是Shell的图形前端，只是在默认情况下它会调用cmd.exe处理用户输入，因此，也可以通过设置使Console2成为Cygwin的前端，只是从这一点上讲，Console2和&lt;a href="http://code.google.com/p/mintty/">Mintty&lt;/a>相比完全没有优势。&lt;/p>

&lt;p>&lt;a href="http://picasaweb.google.com/lh/photo/hfesI_yiNpTZ68BKIqdImA?feat=embedwebsite">&lt;img src="http://lh6.ggpht.com/_ceUJ_lBTHzc/TTotT9zYK6I/AAAAAAAABi0/Qzv4d2Abe-g/s400/console2.png" height="332" width="400" />&lt;/a>&lt;/p></description></item><item><title>Dokan SSHFS：Windows下通过SSH挂载Linux主机为本地分区</title><link>http://0x3f.org/posts/mount-linux-dirs-as-windows-local-partitions/</link><pubDate>Thu, 20 Jan 2011 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/mount-linux-dirs-as-windows-local-partitions/</guid><description>&lt;p>Linux一般使用Samba向Windows共享资源。另一个办法就是使用SSH。&lt;/p>

&lt;p>&lt;a href="http://dokan-dev.net/en/">Dokan&lt;/a>是一个为Windows提供实现新文件系统的开发库，而&lt;a href="http://dokan-dev.net/en/download/#sshfs">Dokan SSHFS&lt;/a>是在此基础上实现的挂载SSH通道为本地分区的文件系统。必须先安装Dokan，然后再安装Dokan SSHFS。&lt;/p>

&lt;p>&lt;a href="http://picasaweb.google.com/lh/photo/d6J9vTU8cvK2KEplEo0ZaQ?feat=embedwebsite">&lt;img src="http://lh4.ggpht.com/_ceUJ_lBTHzc/TThWJn7FrzI/AAAAAAAABic/Et7kroeInF8/s400/sshfs.png" height="338" width="400" />&lt;/a>&lt;/p>

&lt;p>如果从安装SSH服务做起，步骤是：&lt;/p>

&lt;ol>
&lt;li>在Linux主机上安装openssh&lt;/li>
&lt;li>修改Linux主机的&lt;strong>/etc/hosts.allow&lt;/strong>，加入&lt;code>sshd: ALL&lt;/code>，以允许外部访问&lt;/li>
&lt;li>启动sshd守护进程&lt;/li>
&lt;li>在Windows主机上安装Dokan和Dokan SSHFS&lt;/li>
&lt;li>通过SSHFS的图形配置工具挂载SSH通道&lt;/li>
&lt;/ol>

&lt;p>这种方式的好处是简单，但是存在安全隐患，不管怎样，公布SSH连接绝非好事，这意味著接入用户可以远程控制Linux主机，尤其是当SSH账户的权限较高时。因此，这种方式只适用于虚拟机或家庭网络，例如对Host-Guests共享支持不佳的KVM虚拟机来说就是个好的选择。即便如此，也要注意相应的Windows主机的安全防范，否则，入侵者可以通过Windows主机做跳板来进入Linux主机。&lt;/p></description></item><item><title>darkstat: 网络流量监测工具</title><link>http://0x3f.org/posts/darkstat-as-a-network-discharge-meter/</link><pubDate>Sun, 26 Dec 2010 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/darkstat-as-a-network-discharge-meter/</guid><description>&lt;p>&lt;a href="http://dmr.ath.cx/net/darkstat/">darkstat&lt;/a>是一个跨平台的网络流量监测工具，可显示最大一个月内操作系统的各项网络流量指标。&lt;/p>
&lt;p>具有以下特性：&lt;/p>
&lt;ol>
	&lt;li>以守护进程方式运行，提供Web用户界面，零配置，易于使用&lt;/li>
	&lt;li>可显示较为详细的网络流量指标&lt;/li>
	&lt;li>性能表现好，占用资源少&lt;/li>
	&lt;li>跨平台，支持多个UNIX、类UNIX操作系统，并有非官方的Windows移植版&lt;/li>
&lt;/ol>
&lt;p>具有以下不足：&lt;/p>
&lt;ol>
	&lt;li>功能较为简单，以易用性换灵活性&lt;/li>
	&lt;li>日志记录功能比较单薄，需要编写辅助脚本并设置定时任务&lt;/li>
&lt;/ol>
&lt;p>darkstat启动时需要手工指定监视的网络接口，因此需要用根权限启动：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo darkstat -i eth0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>darkstat默认使用&lt;strong>667&lt;/strong>端口提供Web访问，可以用&lt;strong>-p&lt;/strong>参数指定端口：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo darkstat -i eth0 -p &lt;span class="m">8080&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>darkstat的Web用户界面分为Graph、Hosts和Host三部分。Graph是缺省主页，用于显示最近一分钟、一小时、一天和一个月的流量统计直方图，将光标置于任何一个直方条上可查看对应时刻的流量指标：&lt;/p>
&lt;p>&lt;a href="http://picasaweb.google.com/lh/photo/NAB3_2TtnezdM45HoNd5pQ?feat=embedwebsite">&lt;img src="http://lh4.ggpht.com/_ceUJ_lBTHzc/TRcCUWqnF0I/AAAAAAAABhs/wLRQb3rvHW8/s400/darkstat-graphs.png" height="400" width="395" />&lt;/a>&lt;/p>
&lt;p>Hosts界面按主机显示各自的流量统计指标的值：&lt;/p>
&lt;p>&lt;a href="http://picasaweb.google.com/lh/photo/kG1J2j2eecaLUnhDL-fArA?feat=embedwebsite">&lt;img src="http://lh4.ggpht.com/_ceUJ_lBTHzc/TRcCUXxnsMI/AAAAAAAABhw/ri5OsbqPdmc/s400/darkstat-hosts.png" height="322" width="400" />&lt;/a>&lt;/p>
&lt;p>单击Hosts界面上的IP进入对应主机的Host界面，此界面按TCP/UDP类型显示对应的主机的各端口的网络流量指标的值：&lt;/p>
&lt;p>&lt;a href="http://picasaweb.google.com/lh/photo/XBNQWty4lp63OWwyAFm_BA?feat=embedwebsite">&lt;img src="http://lh3.ggpht.com/_ceUJ_lBTHzc/TRcCUn6lg_I/AAAAAAAABh0/6Aj0hArzIYk/s800/darkstat-host.png" height="800" width="190" />&lt;/a>&lt;/p>
&lt;p>可通过如下命令查看占用指定端口的进程：&lt;/p>
&lt;blockquote>
[lenin@archer ~]$ lsof -i tcp:58062 -n
COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME
mlnet 18660 lenin 74u IPv4 251788 0t0 TCP 192.168.1.3:58062->122.116.212.89:http (ESTABLISHED)
&lt;/blockquote>
&lt;p>darkstat区别于其它流量监测工具的最大的优点就是简单易用，非常适合对流量监测应用不复杂的场景。前段时间公司的一台RHEL服务器因为流量过大多次被网管拔线，后来用darkstat监测到大部分流量被几个UDP端口占去，进而发现原来是服务器被入侵并被安装了一个扫描器&lt;a href="http://code.google.com/p/sipvicious/">SIPVicious&lt;/a>。&lt;/p></description></item><item><title>Vim保存文件时移除尾行换行符的方法</title><link>http://0x3f.org/posts/howto-remove-eof-in-vim/</link><pubDate>Sun, 05 Dec 2010 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/howto-remove-eof-in-vim/</guid><description>&lt;p>Vim认为一个文本文件的每一行都应该由一换行符结束，即使文件的最后一行也不例外。这就使得Vim保存过的文本文件在其它文本编辑器中查看时可能会在文件末尾多出一个空行。一般来说，这不是个问题，但对于程序员来说，有时候一些不规范的运行环境或其它组件就要求文件的最后一行不能有换行符，否则就会出莫名其妙的问题，尤其是在Windows环境下最常见。&lt;/p>
&lt;p>要在保存文件时不在最后一行添加换行符，最常见、最简单的方法就是：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-vim" data-lang="vim">&lt;span class="line">&lt;span class="cl">&lt;span class="p">:&lt;/span>&lt;span class="k">set&lt;/span> &lt;span class="nx">binary&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">:&lt;/span>&lt;span class="k">set&lt;/span> &lt;span class="nx">noendofline&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>但是这样做有一个问题，就是会把DOS格式的文件自动转换成UNIX格式，WinSlave们肯定不希望这么做。&lt;/p>
&lt;p>因此，可在vimrc中加入如下内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-vim" data-lang="vim">&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;#34; Save the current buffer as a file with no EOF sign.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">function&lt;/span>&lt;span class="p">!&lt;/span> &lt;span class="nx">SaveAsNOEOF&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">filename&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">let&lt;/span> &lt;span class="nx">a&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="nx">getline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">line&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;$&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="m">-1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">let&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="k">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;iconv(v:val,&amp;#34;&amp;#39;&lt;/span>.&amp;amp;&lt;span class="nx">enc&lt;/span>.&lt;span class="s1">&amp;#39;&amp;#34;,&amp;#34;&amp;#39;&lt;/span>.&amp;amp;&lt;span class="nx">fenc&lt;/span>.&lt;span class="s1">&amp;#39;&amp;#34;) . nr2char(13)&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">call&lt;/span> &lt;span class="nx">extend&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">getline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;$&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;$&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">call&lt;/span> &lt;span class="nx">writefile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">a&lt;/span>:&lt;span class="nx">filename&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">a&lt;/span>:&lt;span class="nx">filename&lt;/span> &lt;span class="p">==&lt;/span> &lt;span class="nx">bufname&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;%&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">set&lt;/span> &lt;span class="nx">nomodified&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">endif&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">endfunction&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;#34; Save the current buffer and get rid of the EOF sign.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">function&lt;/span>&lt;span class="p">!&lt;/span> &lt;span class="nx">SaveNOEOF&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">call&lt;/span> &lt;span class="nx">SaveAsNOEOF&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">bufname&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;%&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">endfunction&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">command&lt;/span>&lt;span class="p">!&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="nx">complete&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="nx">file&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="nx">nargs&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="m">0&lt;/span> &lt;span class="nx">SaveNOEOF&lt;/span> :&lt;span class="nx">call&lt;/span> &lt;span class="nx">SaveNOEOF&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">command&lt;/span>&lt;span class="p">!&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="nx">complete&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="nx">file&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="nx">nargs&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="nx">SaveAsNOEOF&lt;/span> :&lt;span class="nx">call&lt;/span> &lt;span class="nx">SaveAsNOEOF&lt;/span>&lt;span class="p">(&amp;lt;&lt;/span>&lt;span class="nx">q&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="nx">args&lt;/span>&lt;span class="p">&amp;gt;)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后就可以使用SaveNOEOF和SaveAsNOEOF两条命令去保存没有EOF的文件了。&lt;/p></description></item><item><title>virtio可能导致windows蓝屏</title><link>http://0x3f.org/posts/virto-may-breakdown-windows/</link><pubDate>Sat, 04 Dec 2010 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/virto-may-breakdown-windows/</guid><description>&lt;p>前段时间突然发现kvm中的windows在启动时蓝屏，开始以为是kvm新版本的bug，后来发现如果不启用虚拟机硬盘的virtio就不会出现蓝屏。&lt;/p>
&lt;p>于是下载了最新版的virtio，然而更新后，蓝屏的问题并没有解决，所以目前只能暂时不使用virtio。不过网卡的virtio是没有问题的。&lt;/p></description></item><item><title>WinMerge：开源的差异比较工具</title><link>http://0x3f.org/posts/winmerge-as-a-free-diff-tool/</link><pubDate>Mon, 29 Nov 2010 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/winmerge-as-a-free-diff-tool/</guid><description>&lt;p>&lt;a href="http://winmerge.org/">WinMerge&lt;/a>是开源的差异比较工具，只运行于Windows平台。&lt;/p>
&lt;p>具有以下实用特性：&lt;/p>
&lt;ol>
	&lt;li>支持文件内容和文件、文件夹差异比较&lt;/li>
	&lt;li>文件内容比较采用左右双栏显示，支持语法高亮&lt;/li>
	&lt;li>提供Windows资源管理器右键菜单，以选择文件或文件夹进行比较&lt;/li>
&lt;/ol>
&lt;p>具有以下不足：&lt;/p>
&lt;ol>
	&lt;li>文件夹比较结果以单栏显示，不直观&lt;/li>
	&lt;li>仅支持两方比较，不支持多方比较&lt;/li>
&lt;/ol>
&lt;p>使用时的注意事项：&lt;/p>
&lt;ol>
	&lt;li>使用树状的列表显示文件夹比较结果可以稍微缓解单栏显示导致的不直观的问题&lt;/li>
	&lt;li>Windows资源管理器的右键菜单需要在设置界面手工设置才能加入选取不同目标进行比较的菜单项&lt;/li>
&lt;/ol>
&lt;p>相较于商业的Beyong Compare等工具，WinMerge在操作的直观度和功能细节上存在不足，但是在差异比较的主要功能上，WinMerge完全可以胜任日常工作。同时，由于免费，WinMerge可以作为这些商业软件很好的替代工具。&lt;/p>
&lt;p>&lt;strong>后记：这些天越来越对使用未授权的商业软件感到不安，于是开始寻找这些工具的开源、免费替代品。&lt;/strong>&lt;/p></description></item><item><title>调整Arch的磁盘分区</title><link>http://0x3f.org/posts/adjust-disk-partitions-in-archlinux/</link><pubDate>Sat, 13 Nov 2010 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/adjust-disk-partitions-in-archlinux/</guid><description>&lt;p>&lt;h2>简述&lt;/h2>&lt;/p>

&lt;p>目标：移除Windows 7，整块硬盘完全分配给Archlinux。&lt;/p>

&lt;p>原分区结构：&lt;/p>

&lt;p>
&lt;table class="art_tbl">
&lt;tr>&lt;th class="art_tbl_th">分区&lt;/th>&lt;th class="art_tbl_th">类型&lt;/th>&lt;th class="art_tbl_th">挂载&lt;/th>&lt;th class="art_tbl_th">文件系统&lt;/th>&lt;th class="art_tbl_th">容量&lt;/th>&lt;/tr>
&lt;tr>&lt;td class="art_tbl_td">/dev/sda1&lt;/td>&lt;td class="art_tbl_td">主分区，启动分区&lt;/td>&lt;td class="art_tbl_td">Windows 7的安装分区&lt;/td>&lt;td class="art_tbl_td">ntfs&lt;/td>&lt;td class="art_tbl_td">30G&lt;/td>&lt;/tr>
&lt;tr>&lt;td class="art_tbl_td">/dev/sda2&lt;/td>&lt;td class="art_tbl_td">扩展分区&lt;/td>&lt;td class="art_tbl_td">-&lt;/td>&lt;td class="art_tbl_td">-&lt;/td>&lt;td class="art_tbl_td">-&lt;/td>&lt;/tr>
&lt;tr>&lt;td class="art_tbl_td">/dev/sda5&lt;/td>&lt;td class="art_tbl_td">逻辑分区&lt;/td>&lt;td class="art_tbl_td">Windows的D盘&lt;/td>&lt;td class="art_tbl_td">ntfs&lt;/td>&lt;td class="art_tbl_td">40G&lt;/td>&lt;/tr>
&lt;tr>&lt;td class="art_tbl_td">/dev/sda3&lt;/td>&lt;td class="art_tbl_td">主分区&lt;/td>&lt;td class="art_tbl_td">/&lt;/td>&lt;td class="art_tbl_td">ext3&lt;/td>&lt;td class="art_tbl_td">78G&lt;/td>&lt;/tr>
&lt;tr>&lt;td class="art_tbl_td">/dev/sda4&lt;/td>&lt;td class="art_tbl_td">交换分区&lt;/td>&lt;td class="art_tbl_td">swap&lt;/td>&lt;td class="art_tbl_td">-&lt;/td>&lt;td class="art_tbl_td">2G&lt;/td>&lt;/tr>
&lt;/table>
&lt;/p>

&lt;p>调整后分区结构：&lt;/p>

&lt;p>
&lt;table class="art_tbl">
&lt;tr>&lt;th class="art_tbl_th">分区&lt;/th>&lt;th class="art_tbl_th">类型&lt;/th>&lt;th class="art_tbl_th">挂载&lt;/th>&lt;th class="art_tbl_th">文件系统&lt;/th>&lt;th class="art_tbl_th">容量&lt;/th>&lt;/tr>
&lt;tr>&lt;td class="art_tbl_td">/dev/sda1&lt;/td>&lt;td class="art_tbl_td">主分区，启动分区&lt;/td>&lt;td class="art_tbl_td">/&lt;/td>&lt;td class="art_tbl_td">ext3&lt;/td>&lt;td class="art_tbl_td">30G&lt;/td>&lt;/tr>
&lt;tr>&lt;td class="art_tbl_td">/dev/sda2&lt;/td>&lt;td class="art_tbl_td">主分区&lt;/td>&lt;td class="art_tbl_td">/home&lt;/td>&lt;td class="art_tbl_td">ext3&lt;/td>&lt;td class="art_tbl_td">120G&lt;/td>&lt;/tr>
&lt;tr>&lt;td class="art_tbl_td">/dev/sda3&lt;/td>&lt;td class="art_tbl_td">交换分区&lt;/td>&lt;td class="art_tbl_td">swap&lt;/td>&lt;td class="art_tbl_td">-&lt;/td>&lt;td class="art_tbl_td">2G&lt;/td>&lt;/tr>
&lt;/table>
&lt;/p>

&lt;p>&lt;h2>步骤&lt;/h2>&lt;/p>

&lt;ol>
```bash
sudo grub-install /dev/sda
```
```bash
sudo vi /boot/grub/menu.lst
```
# (2) Arch Linux
title Arch Linux
root (hd0,0)
kernel /boot/vmlinuz26 root=/dev/sda1 resume=/dev/sda4 ro acpi_osi="Linux"
initrd /boot/kernel26.img
&lt;/blockquote>&lt;/li>
 &lt;li>&lt;a href="http://0x3f.org/?p=1699">安装U盘启动的Puppy Linux&lt;/a>&lt;/li>
```bash
mkfs.ext3 /dev/sda1
```
```bash
# 先点击桌面上sda1和sda3的盘符，使之被挂载到/mnt下

cd /mnt/sda3
cp -a * /mnt/sda1
```
```bash
vi /mnt/sda1/etc/fstab
```
# 修改必要的挂载点，如将根目录的挂载点由sda3改为sda1：
/dev/sda1 / ext3 defaults,noatime 0 1
&lt;/blockquote>&lt;/li>
 &lt;li>重启系统，并引导到新分区上的系统中&lt;/li>
```bash
sudo grub-install /dev/sda
```
 &lt;li>重启并进入Puppy，使用gparted删除除sda1以外的所有分区，然后在空闲的空间上创建ext3格式的主分区sda2和交换分区sda3&lt;/li>
```bash
cp -a /mnt/sda1/home/* /mnt/sda2
rm -rf /mnt/sda1/home/*
```
```bash
vi /mnt/sda1/etc/fstab
```
# 将fstab中磁盘分区的挂载点配置为如下内容
/dev/sda1 / ext3 defaults,noatime 0 1
/dev/sda2 /home ext3 defaults,noatime 1 2
/dev/sda3 swap swap defaults 0 0
```bash
vi /mnt/boot/grub/menu.lst
```
# 将原来启动项中的sda3修改为sda1，由于配置过休眠，也将resume参数中的sda4改为sda3，即交换分区
&lt;/blockquote>
 &lt;li>重启系统&lt;/li>
&lt;/ol>

&lt;p>&lt;h2>后记&lt;/h2>&lt;/p></description></item><item><title>启动GVim时自动最大化窗口的方法</title><link>http://0x3f.org/posts/howto-auto-maximize-gvim-at-startup/</link><pubDate>Wed, 25 Aug 2010 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/howto-auto-maximize-gvim-at-startup/</guid><description>&lt;p>根据帮助文档，gvim在windows下的最大化是通过模拟打开窗口菜单并点击最大化菜单项实现的，而在Linux下的方法较为灵活。&lt;/p>
&lt;p>下面的方法是在vim中通过调用wmctrl实现最大化的方法：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-vim" data-lang="vim">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="nx">has&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;win32&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">au&lt;/span> &lt;span class="nx">GUIEnter&lt;/span> * &lt;span class="nx">simalt&lt;/span> &lt;span class="p">~&lt;/span>&lt;span class="nx">x&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">au&lt;/span> &lt;span class="nx">GUIEnter&lt;/span> * &lt;span class="nx">call&lt;/span> &lt;span class="nx">MaximizeWindow&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">endif&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">function&lt;/span>&lt;span class="p">!&lt;/span> &lt;span class="nx">MaximizeWindow&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">silent&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nx">wmctrl&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="nx">r&lt;/span> :&lt;span class="nx">ACTIVE&lt;/span>: &lt;span class="p">-&lt;/span>&lt;span class="nx">b&lt;/span> &lt;span class="nx">add&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">maximized_vert&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">maximized_horz&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">endfunction&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>当然也可以通过配置窗口管理器规则实现自动最大化，但上面的方法更灵活。&lt;/p></description></item><item><title>Inno Setup执行SQL脚本的方法</title><link>http://0x3f.org/posts/howto-execute-sql-scripts-in-inno-setup/</link><pubDate>Mon, 17 May 2010 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/howto-execute-sql-scripts-in-inno-setup/</guid><description>&lt;p>作为和&lt;a href="http://zh.wikipedia.org/zh-cn/Nullsoft%E8%85%B3%E6%9C%AC%E5%AE%89%E8%A3%9D%E7%B3%BB%E7%B5%B1">NSIS&lt;/a>并立的、两个最流行的免费Windows应用程序安装包制作工具之一，&lt;a href="http://en.wikipedia.org/wiki/Inno_Setup">Inno&lt;/a>在学习难度上相对要低一些，非常适合对一些简单的桌面程序打包。但对于较复杂的安装过程，或者Web应用程序来说，我个人觉得不是Inno的强项。当然，既然Inno内嵌了&lt;a href="http://zh.wikipedia.org/zh-cn/Pascal">Pascal&lt;/a>语言用以扩展功能，理论上不是不可以应付复杂的安装过程，但实现起来要复杂一些。&lt;/p>

&lt;p>比如对于在安装过程中连接数据库并执行SQL脚本这样的需求，使用&lt;a href="http://en.wikipedia.org/wiki/InstallShield">InstallShield&lt;/a>应该会简单地多，而Inno却不支持直接操作数据库，并且相关的资料说明少之又少，还不如NSIS丰富，以至于我踏破铁鞋无觅处，最终却在NSIS的资料中找到了思路。&lt;/p>

&lt;p>主要的思路是，在安装过程中，调用数据库客户端连接数据库并执行SQL脚本，然后将执行结果或错误信息输出到文件中，最后通过分析这个文件来判断命令执行的结果。但是，既然是调用特定的客户端，那么对不同数据库的操作自然就有所区别，具体情况如下所述。&lt;/p>

&lt;p>首先在打包脚本的&lt;strong>[Files]&lt;/strong>段将必需的文件包含进来：&lt;/p>

```ini
[Files]
Source: "D:\Development\MyDemoApp\code\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "D:\Development\MyDemoApp\sqlcmd.exe"; Flags: dontcopy
Source: "D:\Development\MyDemoApp\sqlcmd.rll"; Flags: dontcopy
Source: "D:\Development\MyDemoApp\mysql.exe"; Flags: dontcopy
Source: "D:\Development\MyDemoApp\script_mssql.sql"; Flags: dontcopy
Source: "D:\Development\MyDemoApp\script_mysql.sql"; Flags: dontcopy
Source: "D:\Development\MyDemoApp\script_oracle.sql"; Flags: dontcopy
```

&lt;p>在SQL Server中执行脚本的代码片断：&lt;/p>

```pascal
function ExecScriptInMSSQL(DBHost, DBLogin, DBPass, DBName: String): Boolean;
var
 ConnectExe: String;
 ConnectParam: String;
begin
 {解压临时文件}
 ExtractTemporaryFile('sqlcmd.exe');
 ExtractTemporaryFile('sqlcmd.rll');
 ExtractTemporaryFile('script_mssql.sql');
 {构造数据库连接字符串}
 ConnectExe := ExpandConstant('{tmp}') + '\sqlcmd.exe';
 ConnectParam := ' -S ' + DBHost
 + ' -U ' + DBLogin
 + ' -P ' + DBPass
 + ' -d ' + DBName
 + ' -i script_mssql.sql -o '
 + ExpandConstant('{tmp}') + '\dbstatus.txt';
 {建立数据库连接并执行脚本}
 if Exec(ConnectExe, ConnectParam, '', SW_HIDE, ewWaitUntilTerminated, ResultCode) then begin
 Result := ResultCode = 0;
 LoadStringFromFile(ExpandConstant('{tmp}') + '\dbstatus.txt', StatusString);
 if StatusString &lt;> '' then begin
 MsgBox(StatusString, mbError, MB_OK);
 Result := False;
 end else begin
 Result := True;
 end;
 end else begin
 MsgBox('Database update failed:'#10#10 + SysErrorMessage(ResultCode), mbError, MB_OK);
 Result := False;
 end;
end;
```

&lt;p>在MySQL中执行脚本的代码片断：&lt;/p></description></item><item><title>Windows下GVim的全屏</title><link>http://0x3f.org/posts/fullscreen-for-gvim-on-windows/</link><pubDate>Thu, 17 Sep 2009 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/fullscreen-for-gvim-on-windows/</guid><description>下载gvim的一个扩展“&lt;a href="https://github.com/derek/gvimfullscreen_win32">gvimfullscreen_win32&lt;/a>”，并解压缩。

将&lt;strong>gvimfullscreen.dll&lt;/strong>复制到gvim安装目录下，与&lt;strong>gvim.exe&lt;/strong>同目录。

修改gvim配置文件&lt;strong>_vimrc&lt;/strong>，在其中添加如下内容：

```vim
if has('win32')
 map &lt;F11> &lt;Esc>:call libcallnr("gvimfullscreen.dll", "ToggleFullScreen", 0)&lt;CR>
endif
```

此后，即可使用&lt;strong>F11&lt;/strong>键开关gvim的全屏状态。</description></item></channel></rss>