<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Nginx - 标签 - 晴耕雨讀</title><link>http://0x3f.org/tags/nginx/</link><description>Nginx - 标签 - 晴耕雨讀</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 14 Feb 2017 13:35:41 +0000</lastBuildDate><atom:link href="http://0x3f.org/tags/nginx/" rel="self" type="application/rss+xml"/><item><title>用NGINX实现WSS</title><link>http://0x3f.org/post/implement-wss-with-nginx/</link><pubDate>Tue, 14 Feb 2017 13:35:41 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/implement-wss-with-nginx/</guid><description><![CDATA[<p>实现基于SSL的安全的WebSocket。</p>
<h2 id="nginx配置">NGINX配置</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">server {
    listen 4431;
    server_name ws.sample.com;

    ssl on;
    ssl_certificate ssl/server.crt;
    ssl_certificate_key ssl/server.key;
    ssl_session_timeout 5m;
    ssl_session_cache shared:SSL:50m;
    ssl_protocols SSLv3 SSLv2 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;

    location /
    {
        proxy_pass http://127.0.0.1:4759;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection &#34;Upgrade&#34;;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_read_timeout 60s;
    }
}
</code></pre></td></tr></table>
</div>
</div><h2 id="常见问题">常见问题</h2>
<h3 id="连不上或连接时报错">连不上或连接时报错</h3>
<blockquote>
<p>WebSocket network error: OSStatus Error -9807: Invalid certificate chain</p>
</blockquote>
<p>如果使用的是自签证书或者证书针对的域名和连接所指定的不符，会出这种问题。</p>
<h3 id="wss一分钟自动断开">wss一分钟自动断开</h3>
<p>NGINX里设置proxy_read_timeout或者程序实现心跳。</p>
]]></description></item><item><title>用OpenResty自动转换silk到MP3</title><link>http://0x3f.org/post/convert-silk-to-mp3-with-openresty/</link><pubDate>Wed, 25 Jan 2017 18:59:00 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/convert-silk-to-mp3-with-openresty/</guid><description><![CDATA[<p>PHP没有原生的转换silk格式音频到mp3的方案，所以考虑用NGINX+Lua调用命令行工具实现。</p>
<h2 id="思路">思路</h2>
<p>当访问以「.silk.mp3」为后缀的文件时，查找对应的mp3文件，存在则返回，否则，如果对应的silk文件存在，调用命令行工具转换文件格式，然后内部重定向到新生成的mp3。</p>
<h2 id="安装">安装</h2>
<ul>
<li><a href="https://openresty.org/cn/download.html" target="_blank" rel="noopener noreffer">OpenResty</a></li>
<li><a href="https://github.com/kn007/silk-v3-decoder" target="_blank" rel="noopener noreffer">silk-v3-decoder</a></li>
<li><a href="https://ffmpeg.org" target="_blank" rel="noopener noreffer">ffmpeg</a></li>
</ul>
<h2 id="nginx配置">NGINX配置</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-nginx" data-lang="nginx"><span class="k">location</span> <span class="p">~</span><span class="sr">*</span> <span class="s">/.*\.silk\.mp3</span>$ <span class="p">{</span>
    <span class="kn">content_by_lua_file</span> <span class="s">&#34;/opt/script/silk2mp3.lua&#34;</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="lua脚本">Lua脚本</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-lua" data-lang="lua"><span class="kr">function</span> <span class="nf">file_exists</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>
    <span class="kd">local</span> <span class="n">f</span><span class="o">=</span><span class="n">io.open</span><span class="p">(</span><span class="n">name</span><span class="p">,</span><span class="s2">&#34;r&#34;</span><span class="p">)</span>
    <span class="kr">if</span> <span class="n">f</span><span class="o">~=</span><span class="kc">nil</span> <span class="kr">then</span> <span class="n">io.close</span><span class="p">(</span><span class="n">f</span><span class="p">)</span> <span class="kr">return</span> <span class="kc">true</span> <span class="kr">else</span> <span class="kr">return</span> <span class="kc">false</span> <span class="kr">end</span>
<span class="kr">end</span>

<span class="kd">local</span> <span class="n">resource</span>     <span class="o">=</span> <span class="n">ngx.var</span><span class="p">.</span><span class="n">request_filename</span><span class="p">;</span>
<span class="kd">local</span> <span class="n">realResource</span> <span class="o">=</span> <span class="n">resource</span><span class="p">:</span><span class="n">sub</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="o">#</span><span class="n">resource</span> <span class="o">-</span> <span class="mi">9</span><span class="p">)</span><span class="o">..</span><span class="s2">&#34;.mp3&#34;</span><span class="p">;</span>
<span class="kd">local</span> <span class="n">realURI</span>      <span class="o">=</span> <span class="n">ngx.var</span><span class="p">.</span><span class="n">uri</span><span class="p">:</span><span class="n">sub</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="o">#</span><span class="n">ngx.var</span><span class="p">.</span><span class="n">uri</span> <span class="o">-</span> <span class="mi">9</span><span class="p">)</span><span class="o">..</span><span class="s2">&#34;.mp3&#34;</span><span class="p">;</span>

<span class="kr">if</span> <span class="n">file_exists</span><span class="p">(</span><span class="n">realResource</span><span class="p">)</span> <span class="kr">then</span>
    <span class="kr">return</span> <span class="n">ngx.exec</span><span class="p">(</span><span class="n">realURI</span><span class="p">);</span>
<span class="kr">end</span>

<span class="kd">local</span> <span class="n">silk</span> <span class="o">=</span> <span class="n">resource</span><span class="p">:</span><span class="n">sub</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="o">#</span><span class="n">resource</span> <span class="o">-</span> <span class="mi">4</span><span class="p">);</span>

<span class="kr">if</span> <span class="ow">not</span> <span class="n">file_exists</span><span class="p">(</span><span class="n">silk</span><span class="p">)</span> <span class="kr">then</span>
    <span class="kr">return</span> <span class="n">ngx.exit</span><span class="p">(</span><span class="mi">404</span><span class="p">);</span>
<span class="kr">end</span>

<span class="n">os.execute</span><span class="p">(</span><span class="s2">&#34;/bin/sh /opt/silk-v3-decoder/converter.sh </span><span class="se">\&#34;</span><span class="s2">&#34;</span><span class="o">..</span><span class="n">silk</span><span class="o">..</span><span class="s2">&#34;</span><span class="se">\&#34;</span><span class="s2"> mp3 &gt; /dev/null 2&gt;&amp;1&#34;</span><span class="p">);</span>

<span class="kr">if</span> <span class="n">file_exists</span><span class="p">(</span><span class="n">realResource</span><span class="p">)</span> <span class="kr">then</span>
    <span class="kr">return</span> <span class="n">ngx.exec</span><span class="p">(</span><span class="n">realURI</span><span class="p">);</span>
<span class="kr">else</span>
    <span class="kr">return</span> <span class="n">ngx.exit</span><span class="p">(</span><span class="mi">404</span><span class="p">)</span>
<span class="kr">end</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="遇到的问题">遇到的问题</h2>
<h3 id="openresty调用命令转换失败而手工可以">OpenResty调用命令转换失败，而手工可以</h3>
<p>silk-v3-decoder的converter.sh把所有错误信息都屏蔽了，需要修改脚本查看。</p>
<p>实际情况是OpenResty的运行用户没有音频文件所在目录的权限。</p>
<h3 id="编译的ffmpeg转换pcm到mp3时报错">编译的ffmpeg转换PCM到MP3时报错</h3>
<p>silk-v3-decoder自己的decoder只是把silk转换成PCM，然后调用ffmpeg转换成mp3。系统中的ffmpeg是自己编译的，在这一步报错，大意是mp3的encoder不存在。</p>
<p>原因是ffmpeg编译时默认不激活mp3编码器（猜测）或者没安装libmp3lame-dev，需要安装这个开发库并给configure指定参数「&ndash;enable-libmp3lame」。</p>
]]></description></item><item><title>NGINX: 405 Not Allowed</title><link>http://0x3f.org/post/nginx-405-not-allowed/</link><pubDate>Sun, 19 Feb 2012 00:00:00 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/nginx-405-not-allowed/</guid><description><![CDATA[<p>NGINX不允许向静态文件提交POST方式的请求，否则报405错误。测试方法为，使用curl向服务器上的静态文件提交POST请求：</p>

```bash
curl -d 1=1 http://localhost/version.txt
```

得到以下结果：

```html
<html>
<head><title>405 Not Allowed</title></head>
<body bgcolor="white">
<center><h1>405 Not Allowed</h1></center>
<hr><center>nginx/1.0.11</center>
</body>
</html>
```

<p>网上传抄的添加以下配置的解决办法不可用：</p>

```nginx
error_page 405 =200 @405;
location @405
{
    root /srv/http;
}
```

<p>一种不完美但可用的方法为：</p>

```nginx
upstream static_backend {
    server localhost:80;
}

server {
    listen 80;

    # ...

    error_page 405 =200 @405;
    location @405 {
        root /srv/http;
        proxy_method GET;
        proxy_pass http://static_backend;
    }
}
```

<p>即转换静态文件接收的POST请求到GET方式。</p>

<p>Posted via <a href="http://0x3f.org/?p=1894">UltraBlog.vim</a>.</p>
]]></description></item><item><title>读完《Nginx HTTP Server》</title><link>http://0x3f.org/post/after-reading-nginx-http-server/</link><pubDate>Fri, 29 Apr 2011 00:00:00 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/after-reading-nginx-http-server/</guid><description><![CDATA[<p>昨天晚上在杭州飞北京的飞机上读完了这本书，用Kindle DXG。</p>

<p>作者是江苏科技大学的一位外籍老师，所以这本书也很有教科书的风格，先用一章的篇幅介绍Linux的相关概念和日常操作，而后通过和Apache的对比讲述了Nginx的主要特性，并使用Wordpress、MediaWiki等作了实例讲解。面面俱到，简单易懂，但并不深入。</p>

<p>目前介绍Nginx的书还不多，这本算得上是其中很好的一本。但是前六十页都是介绍Linux的基本概念，和后面的内容关系不大，显得很突兀，且很不KISS，对于一本只有三百多页的小书来说，这个篇幅很令人遐想。抛开这一点，这本书当属眼下入门Nginx的优秀指南。</p>

<p><a href="https://picasaweb.google.com/lh/photo/1wfTXx_Zpcr1BVlrh5KD_A?feat=embedwebsite"></a></p>

<p>Posted via <a href="http://0x3f.org/?p=1894">UltraBlog.vim</a>.</p>
]]></description></item></channel></rss>