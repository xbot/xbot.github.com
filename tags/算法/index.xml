<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>算法 - 标签 - 晴耕雨讀</title><link>http://0x3f.org/tags/%E7%AE%97%E6%B3%95/</link><description>算法 - 标签 - 晴耕雨讀</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 13 Mar 2010 00:00:00 +0000</lastBuildDate><atom:link href="http://0x3f.org/tags/%E7%AE%97%E6%B3%95/" rel="self" type="application/rss+xml"/><item><title>SQL Server的自定义函数：统计两日期之间工作日的数量</title><link>http://0x3f.org/post/counting-days-between-dates-in-sqlserver/</link><pubDate>Sat, 13 Mar 2010 00:00:00 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/counting-days-between-dates-in-sqlserver/</guid><description>前段时间工作中遇到的一个需求，要求计算两个日期之间工作日的数量，即排除期间所有的周六和周日之后的天数。 在网上找到一个自定义函数，原函数有些小</description></item><item><title>欧拉工程第十一解</title><link>http://0x3f.org/post/project-euler-11/</link><pubDate>Tue, 12 May 2009 00:00:00 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/project-euler-11/</guid><description>In the 20×20 grid below, four numbers along a diagonal line have been marked in red. 08 02 22 97 38 15 00 40 00 75 04 05 07 78 52 12 50 77 91 08 49 49 99 40 17 81 18 57 60 87 17 40 98 43 69 48 04 56 62 00 81 49 31 73 55 79 14 29 93 71</description></item><item><title>欧拉工程第十解</title><link>http://0x3f.org/post/project-euler-10/</link><pubDate>Tue, 18 Nov 2008 00:00:00 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/project-euler-10/</guid><description>The sum of the primes below 10 is 2 + 3 + 5 + 7 = 17. Find the sum of all the primes below two million. 题目越来越变态，开始好玩儿了。 第七解里的算法在这里算是废了，一万个素数都算得那么费劲，</description></item><item><title>欧拉工程第九解</title><link>http://0x3f.org/post/project-euler-9/</link><pubDate>Mon, 10 Nov 2008 00:00:00 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/project-euler-9/</guid><description>A Pythagorean triplet is a set of three natural numbers, a b c, for which, a2 + b2 = c2 For example, 32 + 42 = 9 + 16 = 25 = 52. There exists exactly one Pythagorean triplet for which a + b + c = 1000. Find the product abc. 解： ```python flag = False for a in range(1,1000): for b in range(1,1000): if a ** 2</description></item><item><title>欧拉工程第八解</title><link>http://0x3f.org/post/project-euler-8/</link><pubDate>Sun, 09 Nov 2008 00:00:00 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/project-euler-8/</guid><description>Find the greatest product of five consecutive digits in the 1000-digit number. 73167176531330624919225119674426574742355349194934 96983520312774506326239578318016984801869478851843 85861560789112949495459501737958331952853208805511 12540698747158523863050715693290963295227443043557 66896648950445244523161731856403098711121722383113 62229893423380308135336276614282806444486645238749 30358907296290491560440772390713810515859307960866 70172427121883998797908792274921901699720888093776 65727333001053367881220235421809751254540594752243 52584907711670556013604839586446706324415722155397 53697817977846174064955149290862569321978468622482 83972241375657056057490261407972968652414535100474 82166370484403199890008895243450658541227588666881 16427171479924442928230863465674813919123162824586 17866458359124566529476545682848912883142607690042 24219022671055626321111109370544217506941658960408 07198403850962455444362981230987879927244284909188 84580156166097919133875499200524063689912560717606 05886116467109405077541002256983155200055935729725 71636269561882670428252483600823257530420752963450 穷举，解： ```python def MakeProduct(strNum): prod = 1 for char in strNum: prod = prod * int(char) return prod def GetTheFirstProduct(strNum): if len(strNum) = 5: tmp = GetTheFirstProduct(num) if tmp == (0,0): break num =</description></item><item><title>欧拉工程第七解</title><link>http://0x3f.org/post/project-euler-7/</link><pubDate>Fri, 31 Oct 2008 00:00:00 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/project-euler-7/</guid><description>第七解： By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can see that the 6th prime is 13. What is the 10001st prime number? 穷举，并加以最大程度的优化：对大于2的素数，只判断奇数；判断一个奇数是否素</description></item><item><title>欧拉工程第六解</title><link>http://0x3f.org/post/project-euler-6/</link><pubDate>Wed, 29 Oct 2008 00:00:00 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/project-euler-6/</guid><description>第六解： The sum of the squares of the first ten natural numbers is, 12 + 22 + &amp;hellip; + 102 = 385 The square of the sum of the first ten natural numbers is, (1 + 2 + &amp;hellip; + 10)2 = 552 = 3025 Hence the difference between the sum of the squares of the first ten natural numbers and the square of the sum is</description></item><item><title>欧拉工程第五解</title><link>http://0x3f.org/post/project-euler-5/</link><pubDate>Mon, 27 Oct 2008 00:00:00 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/project-euler-5/</guid><description>第五解： 2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder. What is the smallest number that is evenly divisible by all of the numbers from 1 to 20? 解： ```python #为简洁明了，此处不作校验 def GetGreatestCommonDivisor(min,max): '''辗转相除法求</description></item><item><title>欧拉工程第四解</title><link>http://0x3f.org/post/project-euler-4/</link><pubDate>Wed, 22 Oct 2008 00:00:00 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/project-euler-4/</guid><description>第四解： A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 × 99. Find the largest palindrome made from the product of two 3-digit numbers. 解： ```python largestPalindrome = 0 for i in range(100,1000): for j in range(100,1000): product = i * j if int(str(product)[::-1]) == product and product largestPalindrome: largestPalindrome = product</description></item><item><title>欧拉工程第三解</title><link>http://0x3f.org/post/project-euler-3/</link><pubDate>Tue, 21 Oct 2008 00:00:00 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/project-euler-3/</guid><description>第三解： The prime factors of 13195 are 5, 7, 13 and 29. What is the largest prime factor of the number 600851475143 ? 解： ```python feed = 600851475143 def GetFactor(feed,footmark): while footmark</description></item></channel></rss>