<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>WordPress on 晴耕雨讀</title><link>http://0x3f.org/tags/wordpress/</link><description>Recent content in WordPress on 晴耕雨讀</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>© 淘气 2021</copyright><lastBuildDate>Sat, 23 Jun 2012 23:13:00 +0000</lastBuildDate><atom:link href="http://0x3f.org/tags/wordpress/index.xml" rel="self" type="application/rss+xml"/><item><title>迁移到 Octopress</title><link>http://0x3f.org/posts/migrate-blog-to-octopress/</link><pubDate>Sat, 23 Jun 2012 23:13:00 +0000</pubDate><guid>http://0x3f.org/posts/migrate-blog-to-octopress/</guid><description>关于迁移 前段时间，用了五年的虚拟主机突然限制了PHP内存上限，导致Wordpress只能启用有限的几个插件，根本不能满足需要。
所以毅然决定迁移到JeckyII+GitHub，在摸索的过程中发现octopress比JeckyII易用，于是导出所有文章，开始迁移。因为我这几年博客写得比较乱，无论是内容上，还是发表方式上，结果用了几个导出脚本，效果都不甚理想，还是有很多地方需要手工修改。六百篇文章，正好趁这个机会挑拣一下，较早的文章质量低的比较多。断断续续地迁移了一些，剩下的工作量还是很大的，留著以后慢慢来吧。另外这次把URL也改成永久格式了，这一来真的伤筋动骨了，连永久重定向都没的做。
至于Feed输出，以前订阅Feedburner烧录的两个地址的读者不受影响，直接订阅Wordpress输出的地址的就丢了，这里再公布一下：
本博客聚合输出：http://feeds.feedburner.com/sinolog 我的全部资讯聚合：http://feeds.feedburner.com/leninlee 迁移那点事 Python 版本的问题 Archlinux很激进，早已把Python的缺省版本进化到了3.x，octopress会用到2.x，结果在生成全站的时候，会报如下错误：
File &amp;#34;&amp;lt;string&amp;gt;&amp;#34;, line 1 import sys; print sys.executable ^ SyntaxError: invalid syntax 在这里找到解决方法。在octopress的plugins目录里创建文件：
1 2 3 4 5 require &amp;#39;pygments&amp;#39; if !!RUBY_PLATFORM[&amp;#39;linux&amp;#39;] RubyPython.configure :python_exe =&amp;gt; &amp;#39;/usr/bin/python2&amp;#39; end 不足 用了这段时间octopress，感觉缺点也不小，每次修改后都要重新生成全站，占用系统资源不小，而且理论上以后会越来越慢。</description></item><item><title>从iG:Syntax Hiliter转换到WP-Syntax</title><link>http://0x3f.org/posts/migrate-from-igsyntax-hiliter-to-wp-syntax/</link><pubDate>Wed, 06 Apr 2011 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/migrate-from-igsyntax-hiliter-to-wp-syntax/</guid><description>终于决定放弃使用了三年多的iG:Syntax Hiliter，将代码语法高亮插件换成WP-Syntax。
原因是Vim的Markdown语法高亮插件有问题，会把iG的标签[LANG]当作Markdown的超链接处理，结果导致插入代码后，后面的内容被错误地著色，很难看。而Syntax使用&amp;lt;pre lang="LANG"&amp;gt;格式的标签，不会有这个问题。
其实很早就想过要换了，只是受累于使用iG进行高亮的文章太多，替换起来不方便。加上后来解决了由于iG停止更新导致的不支持更多的语法的问题，所以就一致拖到现在。今天晚上花了一个小时就完成了替换，比想象中的要容易地多。
根据我使用过的语法的情况，使用以下语句在数据库中替换iG的标签到Syntax的标签：
```sql update wp_posts set post_content=replace(post_content,'[bash]','&amp;lt;pre lang="bash" line="1"&amp;gt;'); update wp_posts set post_content=replace(post_content,'[/bash]','&amp;lt;/pre&amp;gt;'); update wp_posts set post_content=replace(post_content,'[python]','&amp;lt;pre lang="python" line="1"&amp;gt;'); update wp_posts set post_content=replace(post_content,'[/python]','&amp;lt;/pre&amp;gt;'); update wp_posts set post_content=replace(post_content,'[vim]','&amp;lt;pre lang="vim" line="1"&amp;gt;'); update wp_posts set post_content=replace(post_content,'[/vim]','&amp;lt;/pre&amp;gt;'); update wp_posts set post_content=replace(post_content,'[java]','&amp;lt;pre lang="java" line="1"&amp;gt;'); update wp_posts set post_content=replace(post_content,'[/java]','&amp;lt;/pre&amp;gt;'); update wp_posts set post_content=replace(post_content,'[lua]','&amp;lt;pre lang="lua" line="1"&amp;gt;'); update wp_posts set post_content=replace(post_content,'[/lua]','&amp;lt;/pre&amp;gt;'); update wp_posts set post_content=replace(post_content,'[sql]','&amp;lt;pre lang="sql" line="1"&amp;gt;'); update wp_posts set post_content=replace(post_content,'[/sql]','&amp;lt;/pre&amp;gt;'); update wp_posts set post_content=replace(post_content,'[plsql]','&amp;lt;pre lang="</description></item><item><title>Batch Cat v0.3 Released</title><link>http://0x3f.org/posts/batchcat-v03-released/</link><pubDate>Sun, 20 Mar 2011 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/batchcat-v03-released/</guid><description>Check the plugin&amp;rsquo;s pagefor more information.</description></item><item><title>Anti Artificial Spam v0.2 Released</title><link>http://0x3f.org/posts/anti-artificial-spam-v02-released/</link><pubDate>Thu, 24 Feb 2011 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/anti-artificial-spam-v02-released/</guid><description>Check the plugin&amp;rsquo;s pagefor more information.</description></item><item><title>部分无线路由导致Wordpress无法登录</title><link>http://0x3f.org/posts/wordpress-fails-logging-in-with-some-wifi-routers/</link><pubDate>Mon, 31 Jan 2011 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/wordpress-fails-logging-in-with-some-wifi-routers/</guid><description>问题表现为在登录页面输入用户名和密码并点击登录按钮后，Wordpress跳转到登录页面。
解决方法是修改wp-includes/plugable.php中的wp_set_auth_cookie()函数，将下面这行：
1 setcookie($auth_cookie_name, $auth_cookie, $expire, ADMIN_COOKIE_PATH, COOKIE_DOMAIN, $secure, true); 改成：
1 setcookie($auth_cookie_name, $auth_cookie, $expire, SITECOOKIEPATH, COOKIE_DOMAIN, $secure, true); 这一行在这个函数中有两处，是根据php的版本决定执行哪一块，所以应该根据自己的情况修改，或者干脆两处都修改。
在我的tp-link tl-wr841n中发现这个问题，而中兴无线猫中没有这个问题。</description></item><item><title>Batch Cat v0.2 Released</title><link>http://0x3f.org/posts/batchcat-v02-released/</link><pubDate>Sun, 12 Dec 2010 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/batchcat-v02-released/</guid><description>Check the plugin&amp;rsquo;s pagefor more information.</description></item><item><title>WordPress Plugin: Batch Cat</title><link>http://0x3f.org/posts/wp-batchcat/</link><pubDate>Sat, 04 Sep 2010 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/wp-batchcat/</guid><description>Batch Cat is intended to help users change categories of posts in bulk.
The main features are:
As usual, upload the folder of Batch Cat to the wordpress plugin directory, activate it then.
You can perform operations in the page which lies in Tools-&amp;gt;Batch Catin the admin panel.
To alter settings of this plugin, go to Settings-&amp;gt;Batch Cat Settings.
Batch Cat is now hosted in the wordpress plugin repository:
http://wordpress.org/extend/plugins/batch-cat/</description></item><item><title>读完《WordPress Plug-in Development》</title><link>http://0x3f.org/posts/after-reading-wordpress-plug-in-development/</link><pubDate>Sun, 29 Aug 2010 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/after-reading-wordpress-plug-in-development/</guid><description>花了两天时间读完了《WordPress Plug-in Development》，通过实例讲解，很细致，适合用来入门，当然，深度和广度都有限。</description></item><item><title>升级到wordpress3.0</title><link>http://0x3f.org/posts/after-upgrading-to-wordpress30/</link><pubDate>Sat, 19 Jun 2010 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/after-upgrading-to-wordpress30/</guid><description>昨天发现wordpress3.0已经发布，就顺手升级了。
略看了一下更新内容，几乎没什么让我感兴趣的，但与MU版本的合并堪称WP历史上的一个里程碑，从此一套WP可以支持创建多个博客了。
但我最近几度都想把博客换到dokuwiki下。
自从开始用dokuwiki来组织知识和GTD以来，我对wiki产生了越来越深的痴迷，最主要的原因就是它可以用很简单的语法写出格式规整的文章，我几乎可以不用考虑排版布局而只需把注意力放在文章内容上就行了。而将wiki上的文章发到博客上时，还需要重写，比较浪费时间。
但我最终放弃这个想法，最主要的原因是博客文章太多了，截至现在已经有五百多篇且大多是用HTML写的，难以转换。何况WP作为一个博客系统较wiki有着天生的优势，使用较为方便，如果用wiki来做博客，要做不少工作。</description></item></channel></rss>