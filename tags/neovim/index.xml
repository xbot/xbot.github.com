<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NeoVim on 晴耕雨讀</title><link>http://0x3f.org/tags/neovim/</link><description>Recent content in NeoVim on 晴耕雨讀</description><generator>Hugo</generator><language>zh-cn</language><copyright>© 2007-2024 鬼马妖刀</copyright><lastBuildDate>Sun, 31 Aug 2025 15:33:35 +0800</lastBuildDate><atom:link href="http://0x3f.org/tags/neovim/index.xml" rel="self" type="application/rss+xml"/><item><title>回到 NeoVim —— 一个顺畅无阻的写作工作流</title><link>http://0x3f.org/posts/back-to-neovim-a-smooth-effortless-writing-workflow/</link><pubDate>Sun, 31 Aug 2025 15:33:35 +0800</pubDate><guid>http://0x3f.org/posts/back-to-neovim-a-smooth-effortless-writing-workflow/</guid><description>&lt;p&gt;最近把写作的主场切回 NeoVim 了 —— 之前用 Obsidian 配合插件 QuickAdd 、 Templater 、 Git 体验也不错，不过涉及到更复杂的文本编辑、批量操作还是 Vim 效率更高。用了一些新的插件和脚本，体验又上了个小台阶。&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/qITBUGvcGbA?si=k3Y7BV7yyAbOVwml" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;现在写东西很省心：终端敲一句 hugonew 新建文章，文件自动建好并通过 NeoVim 打开，字体自动调大 4 号，看着不费眼。需要插图的地方按下快捷键就能自动上传图片到图床并生成链接。&lt;/p&gt;
&lt;p&gt;专注模式也会自动启用，周围内容会弱化。写完退出，字号又自动切回去，不用手动调。最后发布也很简单，执行命令 hugopost，后面提交、发布都是自动的。&lt;/p&gt;
&lt;p&gt;此外还整理了一下图床，把所有图片转换成了 AVIF 格式，空间占用减少了三分之二，加载速度也快了不少。&lt;/p&gt;
&lt;p&gt;这种完全按自己习惯搭的流程，写东西时一点不卡壳，舒服到有时候坐下来就想多码几行字～&lt;/p&gt;
&lt;p&gt;用到的插件和工具有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;专注模式：folke/zen-mode.nvim + folke/twilight.nvim&lt;/li&gt;
&lt;li&gt;预览：iamcco/markdown-preview.nvim&lt;/li&gt;
&lt;li&gt;根据元数据搜索：tkancf/telescope-markdown-frontmatter.nvim&lt;/li&gt;
&lt;li&gt;批量搜索和替换：wincent/ferret&lt;/li&gt;
&lt;li&gt;写作助手：github/copilot.vim&lt;/li&gt;
&lt;li&gt;文件管理：elihunter173/dirbuf.nvim&lt;/li&gt;
&lt;li&gt;文件管理和内容搜索：Yggdroot/LeaderF 或 nvim-telescope/telescope.nvim&lt;/li&gt;
&lt;li&gt;显示图片：folke/snacks.nvim&lt;/li&gt;
&lt;li&gt;上传图片：nvim-picgo + picgo-core + picgo-plugin-avif + picgo-plugin-rename-file&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>从 macOS 桌面运行 Neovide 的方法</title><link>http://0x3f.org/posts/how-to-run-neovide-from-macos-desktop/</link><pubDate>Mon, 21 Aug 2023 17:07:48 +0800</pubDate><guid>http://0x3f.org/posts/how-to-run-neovide-from-macos-desktop/</guid><description>&lt;p&gt;截至当前版本（0.11.1），Neovide 在 macOS 下只能从命令行启动，为方便起见，有时候我希望通过 RayCast 或者 Dashboard 启动它，或者通过右键菜单“Open with”用它直接打开选中的文件。&lt;/p&gt;
&lt;p&gt;方法是通过 Automator 创建一个“Application”类型的新文档，添加一个“Run AppleScript”的 Action 。然后填入下面的内容：&lt;/p&gt;
&lt;script src="https://gist.github.com/xbot/a2f1d38e8eb02665ef7cf9ba082ccd12.js"&gt;&lt;/script&gt;

&lt;p&gt;最后将文档保存到 Application 目录，命名为“Neovide”。&lt;/p&gt;</description></item><item><title>用 Neovim 调试 RESTful 接口</title><link>http://0x3f.org/posts/send-restful-requests-with-neovim/</link><pubDate>Sun, 18 Sep 2022 11:31:16 +0800</pubDate><guid>http://0x3f.org/posts/send-restful-requests-with-neovim/</guid><description>&lt;p&gt;纯文本有很多好处，比如可以用 Git 管理，方便备份和追溯，方便多机同步和分享。&lt;/p&gt;
&lt;p&gt;之前使用 VS Code 的插件 Rest Client ，从浏览器后台复制请求数据过来就可以用，很方便。但是存在一些用起来不舒服的地方，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不方便对接口分组管理。&lt;/li&gt;
&lt;li&gt;不方便快速查找接口。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些在对纯文本操作效率更高的 Vim 里都可以解决，但是之前尝试过的一些 Vim 的 RESTful 客户端插件还不成熟，最近发现 &lt;a href="https://github.com/rest-nvim/rest.nvim"&gt;rest.nvim&lt;/a&gt; 基本可以满足日常使用需要了。&lt;/p&gt;
&lt;p&gt;rest.nvim 是个 Neovim 的插件，和 Rest Client 支持的格式差异较小，迁移很方便。这样我就可以用 Vim 的折叠特性对接口分组管理，用插件 Leaderf 的模糊查找特性快速定位接口，当然，对纯文本的任何编辑和操作在 Vim 里就是浑然天成、行云流水的。&lt;/p&gt;
&lt;p&gt;它的大致用法如下：&lt;/p&gt;
&lt;p&gt;在工作目录下创建环境变量文件 &lt;code&gt;.env&lt;/code&gt; ：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;span class="lnt"&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-ini" data-lang="ini"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="na"&gt;base_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;http://myapp.dev&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="na"&gt;header_accept_json&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;application/json, application/problem+json, text/plain, */*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="na"&gt;header_content_type_json&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;application/json;charset=utf-8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="na"&gt;header_cookie_debug_session&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;XDEBUG_SESSION=1;app_session=1ObUjvLvEYjVhJ8tbzn5BorN7TViNtI1S625140e&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="na"&gt;user_email&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;user@test.com&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="na"&gt;user_password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;password&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在工作目录下创建请求文件（例如 &lt;code&gt;myapp.http&lt;/code&gt; ）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;span class="lnt"&gt;19
&lt;/span&gt;&lt;span class="lnt"&gt;20
&lt;/span&gt;&lt;span class="lnt"&gt;21
&lt;/span&gt;&lt;span class="lnt"&gt;22
&lt;/span&gt;&lt;span class="lnt"&gt;23
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-http" data-lang="http"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;### Login
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;POST {{base_url}}/v1/sessions
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;Accept: {{header_accept_json}}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;Content-Type: {{header_content_type_json}}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;Cookie: {{header_cookie_debug_session}}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;{&amp;#34;email&amp;#34;: &amp;#34;{{user_email}}&amp;#34;, &amp;#34;password&amp;#34;: &amp;#34;{{user_password}}&amp;#34;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;### Get an article
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;GET {{base_url}}/v1/articles/DiJeb7IQHo8FOFkXulieyA
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;Accept: {{header_accept_json}}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;Cookie: {{header_cookie_debug_session}}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;### Create an article
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;POST {{base_url}}/v1/articles
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;Accept: {{header_accept_json}}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;Cookie: {{header_cookie_debug_session}}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;Content-Type: {{header_content_type_json}}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt; &amp;#34;title&amp;#34;: &amp;#34;Hello world&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt; &amp;#34;Content&amp;#34;: &amp;#34;This is a dummy post.&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后就可以用插件提供的命令触发请求了。&lt;/p&gt;</description></item></channel></rss>