<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Flamework - 标签 - 晴耕雨讀</title><link>http://0x3f.org/tags/flamework/</link><description>Flamework - 标签 - 晴耕雨讀</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 30 Mar 2014 10:00:00 +0000</lastBuildDate><atom:link href="http://0x3f.org/tags/flamework/" rel="self" type="application/rss+xml"/><item><title>PHP框架实战（六）：依赖注入</title><link>http://0x3f.org/post/flamework-dependency-injection/</link><pubDate>Sun, 30 Mar 2014 10:00:00 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/flamework-dependency-injection/</guid><description>简述 依赖注入是个很好的解耦方法，也可以优雅的实现懒加载。 以数据库连接为例，当一个组件用到数据库时，最简单粗暴的办法是在使用前创建连接： 1 2 3</description></item><item><title>PHP框架实战（∝）：烈焰之终章</title><link>http://0x3f.org/post/flamework-summary/</link><pubDate>Thu, 02 Jan 2014 15:15:00 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/flamework-summary/</guid><description>写“烈焰”（Flame）用了一周的业余时间，主要是对平时一些想法的总结和验证。实现了比较完整的控制器层和视图层，对模型层的ActiveRec</description></item><item><title>PHP框架实战（五）：ORM与ActiveRecord</title><link>http://0x3f.org/post/flamework-active-record/</link><pubDate>Wed, 01 Jan 2014 20:45:00 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/flamework-active-record/</guid><description>简述 Model是MVC框架中最复杂的部分，它要提供与业务逻辑相关的数据及数据处理方法的封装，一般要提供数据对象、数据库连接、事务管理、SQL</description></item><item><title>PHP框架实战（四）：View的模板与渲染</title><link>http://0x3f.org/post/flamework-view-rendering/</link><pubDate>Mon, 30 Dec 2013 21:05:00 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/flamework-view-rendering/</guid><description>目标 实现MVC模型的View层，Controller的Action中应可以将从Model层获取的数据填充到View模板中，并将渲染结果返回给</description></item><item><title>PHP框架实战（三）：实现Controller和Filter</title><link>http://0x3f.org/post/flamework-controller-and-filter/</link><pubDate>Sun, 29 Dec 2013 20:40:00 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/flamework-controller-and-filter/</guid><description>目标 实现Controller和Filter，程序可以从HTTP请求中解析Controller和Action，并在这两个切面级别实现Filte</description></item><item><title>PHP框架实战（二）：错误和异常的自动处理</title><link>http://0x3f.org/post/flamework-error-auto-handling/</link><pubDate>Sat, 28 Dec 2013 13:40:00 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/flamework-error-auto-handling/</guid><description>目标 实现错误和异常的自动捕获和处理。 获取代码 1 git checkout v0.2 设计与实现 使用set_error_handler()和set_exception_han</description></item><item><title>PHP框架实战（一）：框架入口与类的自动加载</title><link>http://0x3f.org/post/flamework-entry/</link><pubDate>Sat, 28 Dec 2013 01:56:00 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/flamework-entry/</guid><description>目标 实现框架入口和类的自动加载。 获取代码 1 git checkout v0.1 设计与实现 通过两个类实现本次目标。 静态类Flame作为整个框架的入口，实现一系列框架级公用静</description></item><item><title>PHP框架实战（零）：代码规范</title><link>http://0x3f.org/post/flamework-code-spec/</link><pubDate>Thu, 26 Dec 2013 22:07:00 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/flamework-code-spec/</guid><description>类C语言语法风格最大的问题就是用花括号区分代码块，这导致源码排版容易混乱，对于我这种有代码洁癖的人来说非常痛苦，所以我最喜欢的语法风格是Py</description></item><item><title>PHP框架实战：Flamework</title><link>http://0x3f.org/post/flamework/</link><pubDate>Thu, 26 Dec 2013 20:24:00 +0000</pubDate><author>作者</author><guid>http://0x3f.org/post/flamework/</guid><description>从今天开始，逐步实现一个PHP的MVC框架，以践行平时对这方面的一些想法。 项目信息 名称：Flamework (Flame Framework) 源码：https://gith</description></item></channel></rss>