<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>安全 on 晴耕雨讀</title><link>http://0x3f.org/tags/%E5%AE%89%E5%85%A8/</link><description>Recent content in 安全 on 晴耕雨讀</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>© 淘气 2022</copyright><lastBuildDate>Tue, 06 Feb 2018 22:53:40 +0000</lastBuildDate><atom:link href="http://0x3f.org/tags/%E5%AE%89%E5%85%A8/index.xml" rel="self" type="application/rss+xml"/><item><title>用OTP Auth替换了Authy</title><link>http://0x3f.org/posts/migrate-from-authy-to-otp-auth/</link><pubDate>Tue, 06 Feb 2018 22:53:40 +0000</pubDate><guid>http://0x3f.org/posts/migrate-from-authy-to-otp-auth/</guid><description>Authy的界面很花哨，但并不实用，管理多个两步验证账号时查询效率很低。OTP Auth采用更直观的列表布局，并且支持搜索，在用户体验和效率上有更大的优势。两者之间没有批量迁移数据的方式，只能逐个手动添加，很麻烦。</description></item><item><title>darkstat: 网络流量监测工具</title><link>http://0x3f.org/posts/darkstat-as-a-network-discharge-meter/</link><pubDate>Sun, 26 Dec 2010 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/darkstat-as-a-network-discharge-meter/</guid><description>darkstat是一个跨平台的网络流量监测工具，可显示最大一个月内操作系统的各项网络流量指标。
具有以下特性：
具有以下不足：
darkstat启动时需要手工指定监视的网络接口，因此需要用根权限启动：
1 sudo darkstat -i eth0 darkstat默认使用667端口提供Web访问，可以用-p参数指定端口：
1 sudo darkstat -i eth0 -p 8080 darkstat的Web用户界面分为Graph、Hosts和Host三部分。Graph是缺省主页，用于显示最近一分钟、一小时、一天和一个月的流量统计直方图，将光标置于任何一个直方条上可查看对应时刻的流量指标：
Hosts界面按主机显示各自的流量统计指标的值：
单击Hosts界面上的IP进入对应主机的Host界面，此界面按TCP/UDP类型显示对应的主机的各端口的网络流量指标的值：
可通过如下命令查看占用指定端口的进程：
darkstat区别于其它流量监测工具的最大的优点就是简单易用，非常适合对流量监测应用不复杂的场景。前段时间公司的一台RHEL服务器因为流量过大多次被网管拔线，后来用darkstat监测到大部分流量被几个UDP端口占去，进而发现原来是服务器被入侵并被安装了一个扫描器SIPVicious。</description></item><item><title>SSL证书生成方法</title><link>http://0x3f.org/posts/howto-create-ssl-certificates/</link><pubDate>Mon, 03 May 2010 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/howto-create-ssl-certificates/</guid><description>一般情况下，如果能找到可用的证书，就可以直接使用，只不过会因证书的某些信息不正确或与部署证书的主机不匹配而导致浏览器提示证书无效，但这并不影响使用。
需要手工生成证书的情况有：
找不到可用的证书 需要配置双向SSL，但缺少客户端证书 需要对证书作特别的定制 首先，无论是在Linux下还是在Windows下的Cygwin中，进行下面的操作前都须确认已安装OpenSSL软件包。
1. 创建根证书密钥文件root.key：
``` openssl genrsa -des3 -out root.key ``` 输出内容为：
``` [lenin@archer ~]$ openssl genrsa -des3 -out root.key Generating RSA private key, 512 bit long modulus .................++++++++++++ ..++++++++++++ e is 65537 (0x10001) Enter pass phrase for root.key: ← 输入一个新密码 Verifying - Enter pass phrase for root.key: ← 重新输入一遍密码 ``` 2. 创建根证书的申请文件root.req：
``` openssl req -new -key root.key -out root.req ``` 输出内容为：
``` [lenin@archer ~]$ openssl req -new -key root.</description></item></channel></rss>