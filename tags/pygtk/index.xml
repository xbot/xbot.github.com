<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PyGTK on 晴耕雨讀</title><link>http://0x3f.org/tags/pygtk/</link><description>Recent content in PyGTK on 晴耕雨讀</description><generator>Hugo</generator><language>zh-cn</language><copyright>© 2007-2024 淘气</copyright><lastBuildDate>Sun, 08 Apr 2012 00:00:00 +0000</lastBuildDate><atom:link href="http://0x3f.org/tags/pygtk/index.xml" rel="self" type="application/rss+xml"/><item><title>TurboCRM Cluster Express v1.0 释出</title><link>http://0x3f.org/posts/turbocrm-cluster-express-v1-released/</link><pubDate>Sun, 08 Apr 2012 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/turbocrm-cluster-express-v1-released/</guid><description>&lt;p>TurboCRM Cluster Express是TurboCRM的集群实施工具。&lt;/p>

&lt;p>&lt;img src="http://pic.yupoo.com/leninlee/BSfJUW1x/medium.jpg" alt="illustration" />&lt;/p>

&lt;p>去年我曾经写过一个配置集群的Bash脚本“cluster.sh”，TCE是对这个脚本的图形界面封装，通过可视化的操作简化集群的实施工作。&lt;/p>

&lt;p>TCE的最新版本和使用说明可以在&lt;a href="http://xbot.github.com/TurboCRM-Cluster-Express/">这里&lt;/a>找到。&lt;/p>

&lt;p>Posted via &lt;a href="http://0x3f.org/posts/ultrablog-as-an-ultimate-vim-blogging-plugin/">UltraBlog.vim&lt;/a>.&lt;/p></description></item><item><title>关于PyGTK.CellRenderer的回调方法中聚焦异常的问题</title><link>http://0x3f.org/posts/the-focus-issue-of-pygtk-cellrenderer/</link><pubDate>Sun, 25 Mar 2012 00:00:00 +0000</pubDate><guid>http://0x3f.org/posts/the-focus-issue-of-pygtk-cellrenderer/</guid><description>&lt;p>遇到这样一个问题：&lt;/p>

&lt;p>在pygtk.TreeView中，需要在一个Cell的值被修改后做一个校验，如果不合法，则重新聚焦该Cell并选中其中的内容。&lt;/p>

&lt;p>示意代码如下：&lt;/p>

```python
# pygtk.CellRenderer的edited事件的回调方法
def onCellEdited(self, cell, path, newText, userData):
 store,colNum = userData
 # 使用事件驱动的设计理念，创建一个自定义的事件
 evt = ServerTypeChangedEvent(self, cell, usrData)

 # 事件入队列
 EventQueue.fireEvent(evt)
 # 处理事件队列，如果截获异常，提示并重新聚焦Cell
 try:
 EventQueue.processEvents()
 except Exception,e:
 self.alert(e.message)
 col = self.treeView.get_column(colNum-1)
 # 聚焦Cell，并选中Cell中的内容
 self.treeView.set_cursor_on_cell(path, col, cell, True)
```

&lt;p>关键的代码在最后一行，通过调用TreeView的set_cursor_on_cell方法聚焦Cell并选中其内容。但就是这一步出了问题，报如下警告：&lt;/p>

&lt;blockquote>
 &lt;p>GtkWarning: _gtk_tree_view_column_start_editing: assertion `tree_column->editable_widget == NULL' failed&lt;/p>
&lt;/blockquote>

&lt;p>此后整个TreeView的行为表现不正常，表现为可直接修改其它Cell的内容，且原Cell一直处于聚焦状态。&lt;/p>

&lt;p>此问题的原因是：edited事件在Cell的输入控件被销毁前就发出了，这时在事件的回调方法中重新聚焦该Cell就导致了这个问题（&lt;em>详见&lt;a href="http://www.gtkforums.com/viewtopic.php?t=4619">这里&lt;/a>&lt;/em>）。&lt;/p>

&lt;p>解决方法是借助glib.idle_add函数，在PyGTK空闲的时候再调用set_cursor_on_cell方法，由于此时原控件已被销毁，所以不会有问题。&lt;/p>

&lt;p>修改后的代码如下：&lt;/p>

```python
def onCellEdited(self, cell, path, newText, userData):
 store,colNum = userData
 evt = ServerTypeChangedEvent(self, cell, usrData)

 EventQueue.fireEvent(evt)
 try:
 EventQueue.processEvents()
 except Exception,e:
 self.alert(e.message)
 col = self.treeView.get_column(colNum-1)
 #self.treeView.set_cursor_on_cell(path, col, cell, True)
 import glib
 glib.idle_add(self.treeView.set_cursor_on_cell, path, col, cell, True)
```

&lt;p>Posted via &lt;a href="http://0x3f.org/posts/ultrablog-as-an-ultimate-vim-blogging-plugin/">UltraBlog.vim&lt;/a>.&lt;/p></description></item></channel></rss>